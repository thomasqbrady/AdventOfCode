{
  "version": 3,
  "sources": ["../../source-map-js/lib/base64.js", "../../source-map-js/lib/base64-vlq.js", "../../source-map-js/lib/util.js", "../../source-map-js/lib/array-set.js", "../../source-map-js/lib/mapping-list.js", "../../source-map-js/lib/source-map-generator.js", "../../css-tree/lib/utils/List.js", "../../css-tree/lib/utils/create-custom-error.js", "../../css-tree/lib/parser/SyntaxError.js", "../../css-tree/lib/parser/sequence.js", "../../css-tree/lib/parser/create.js", "../../css-tree/lib/generator/sourceMap.js", "../../css-tree/lib/generator/token-before.js", "../../css-tree/lib/generator/create.js", "../../css-tree/lib/convertor/create.js", "../../css-tree/lib/walker/create.js", "../../css-tree/lib/definition-syntax/generate.js", "../../css-tree/lib/lexer/error.js", "../../css-tree/lib/utils/names.js", "../../css-tree/lib/lexer/generic-const.js", "../../css-tree/lib/lexer/generic-an-plus-b.js", "../../css-tree/lib/lexer/generic-urange.js", "../../css-tree/lib/lexer/generic.js", "../../css-tree/lib/lexer/units.js", "../../css-tree/lib/definition-syntax/index.js", "../../css-tree/lib/definition-syntax/SyntaxError.js", "../../css-tree/lib/definition-syntax/tokenizer.js", "../../css-tree/lib/definition-syntax/parse.js", "../../css-tree/lib/definition-syntax/walk.js", "../../css-tree/lib/lexer/prepare-tokens.js", "../../css-tree/lib/lexer/match-graph.js", "../../css-tree/lib/lexer/match.js", "../../css-tree/lib/lexer/trace.js", "../../css-tree/lib/lexer/search.js", "../../css-tree/lib/lexer/structure.js", "../../css-tree/lib/lexer/Lexer.js", "../../css-tree/lib/syntax/config/mix.js", "../../css-tree/lib/syntax/create.js", "../../css-tree/dist/data.js", "../../css-tree/lib/syntax/node/index.js", "../../css-tree/lib/syntax/node/AnPlusB.js", "../../css-tree/lib/syntax/node/Atrule.js", "../../css-tree/lib/syntax/node/AtrulePrelude.js", "../../css-tree/lib/syntax/node/AttributeSelector.js", "../../css-tree/lib/syntax/node/Block.js", "../../css-tree/lib/syntax/node/Brackets.js", "../../css-tree/lib/syntax/node/CDC.js", "../../css-tree/lib/syntax/node/CDO.js", "../../css-tree/lib/syntax/node/ClassSelector.js", "../../css-tree/lib/syntax/node/Combinator.js", "../../css-tree/lib/syntax/node/Comment.js", "../../css-tree/lib/syntax/node/Declaration.js", "../../css-tree/lib/syntax/node/DeclarationList.js", "../../css-tree/lib/syntax/node/Dimension.js", "../../css-tree/lib/syntax/node/Function.js", "../../css-tree/lib/syntax/node/Hash.js", "../../css-tree/lib/syntax/node/Identifier.js", "../../css-tree/lib/syntax/node/IdSelector.js", "../../css-tree/lib/syntax/node/MediaFeature.js", "../../css-tree/lib/syntax/node/MediaQuery.js", "../../css-tree/lib/syntax/node/MediaQueryList.js", "../../css-tree/lib/syntax/node/NestingSelector.js", "../../css-tree/lib/syntax/node/Nth.js", "../../css-tree/lib/syntax/node/Number.js", "../../css-tree/lib/syntax/node/Operator.js", "../../css-tree/lib/syntax/node/Parentheses.js", "../../css-tree/lib/syntax/node/Percentage.js", "../../css-tree/lib/syntax/node/PseudoClassSelector.js", "../../css-tree/lib/syntax/node/PseudoElementSelector.js", "../../css-tree/lib/syntax/node/Ratio.js", "../../css-tree/lib/syntax/node/Raw.js", "../../css-tree/lib/syntax/node/Rule.js", "../../css-tree/lib/syntax/node/Selector.js", "../../css-tree/lib/syntax/node/SelectorList.js", "../../css-tree/lib/syntax/node/String.js", "../../css-tree/lib/utils/string.js", "../../css-tree/lib/syntax/node/StyleSheet.js", "../../css-tree/lib/syntax/node/TypeSelector.js", "../../css-tree/lib/syntax/node/UnicodeRange.js", "../../css-tree/lib/syntax/node/Url.js", "../../css-tree/lib/utils/url.js", "../../css-tree/lib/syntax/node/Value.js", "../../css-tree/lib/syntax/node/WhiteSpace.js", "../../css-tree/lib/syntax/config/lexer.js", "../../css-tree/lib/syntax/scope/index.js", "../../css-tree/lib/syntax/scope/default.js", "../../css-tree/lib/syntax/scope/atrulePrelude.js", "../../css-tree/lib/syntax/scope/selector.js", "../../css-tree/lib/syntax/function/expression.js", "../../css-tree/lib/syntax/function/var.js", "../../css-tree/lib/syntax/scope/value.js", "../../css-tree/lib/syntax/atrule/font-face.js", "../../css-tree/lib/syntax/atrule/import.js", "../../css-tree/lib/syntax/atrule/media.js", "../../css-tree/lib/syntax/atrule/nest.js", "../../css-tree/lib/syntax/atrule/page.js", "../../css-tree/lib/syntax/atrule/supports.js", "../../css-tree/lib/syntax/atrule/index.js", "../../css-tree/lib/syntax/pseudo/index.js", "../../css-tree/lib/syntax/node/index-parse.js", "../../css-tree/lib/syntax/config/parser.js", "../../css-tree/lib/syntax/config/walker.js", "../../css-tree/lib/syntax/index.js", "../../css-tree/dist/version.js", "../../css-tree/lib/utils/clone.js", "../../css-tree/lib/utils/ident.js", "../../css-tree/lib/index.js"],
  "sourcesContent": ["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "//\n//                              list\n//                            ┌──────┐\n//             ┌──────────────┼─head │\n//             │              │ tail─┼──────────────┐\n//             │              └──────┘              │\n//             ▼                                    ▼\n//            item        item        item        item\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\n//          │ data │    │ data │    │ data │    │ data │\n//          └──────┘    └──────┘    └──────┘    └──────┘\n//\n\nlet releasedCursors = null;\n\nexport class List {\n    static createItem(data) {\n        return {\n            prev: null,\n            next: null,\n            data\n        };\n    }\n\n    constructor() {\n        this.head = null;\n        this.tail = null;\n        this.cursor = null;\n    }\n    createItem(data) {\n        return List.createItem(data);\n    }\n\n    // cursor helpers\n    allocateCursor(prev, next) {\n        let cursor;\n\n        if (releasedCursors !== null) {\n            cursor = releasedCursors;\n            releasedCursors = releasedCursors.cursor;\n            cursor.prev = prev;\n            cursor.next = next;\n            cursor.cursor = this.cursor;\n        } else {\n            cursor = {\n                prev,\n                next,\n                cursor: this.cursor\n            };\n        }\n\n        this.cursor = cursor;\n\n        return cursor;\n    }\n    releaseCursor() {\n        const { cursor } = this;\n\n        this.cursor = cursor.cursor;\n        cursor.prev = null;\n        cursor.next = null;\n        cursor.cursor = releasedCursors;\n        releasedCursors = cursor;\n    }\n    updateCursors(prevOld, prevNew, nextOld, nextNew) {\n        let { cursor } = this;\n\n        while (cursor !== null) {\n            if (cursor.prev === prevOld) {\n                cursor.prev = prevNew;\n            }\n\n            if (cursor.next === nextOld) {\n                cursor.next = nextNew;\n            }\n\n            cursor = cursor.cursor;\n        }\n    }\n    *[Symbol.iterator]() {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            yield cursor.data;\n        }\n    }\n\n    // getters\n    get size() {\n        let size = 0;\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            size++;\n        }\n\n        return size;\n    }\n    get isEmpty() {\n        return this.head === null;\n    }\n    get first() {\n        return this.head && this.head.data;\n    }\n    get last() {\n        return this.tail && this.tail.data;\n    }\n\n    // convertors\n    fromArray(array) {\n        let cursor = null;\n        this.head = null;\n\n        for (let data of array) {\n            const item = List.createItem(data);\n\n            if (cursor !== null) {\n                cursor.next = item;\n            } else {\n                this.head = item;\n            }\n\n            item.prev = cursor;\n            cursor = item;\n        }\n\n        this.tail = cursor;\n        return this;\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return [...this];\n    }\n\n    // array-like methods\n    forEach(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(null, this.head);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    forEachRight(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(this.tail, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    reduce(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(null, this.head);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.next !== null) {\n            item = cursor.next;\n            cursor.next = item.next;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    reduceRight(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(this.tail, null);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.prev !== null) {\n            item = cursor.prev;\n            cursor.prev = item.prev;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    some(fn, thisArg = this) {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    map(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            result.appendData(fn.call(thisArg, cursor.data, cursor, this));\n        }\n\n        return result;\n    }\n    filter(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                result.appendData(cursor.data);\n            }\n        }\n\n        return result;\n    }\n\n    nextUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(null, start);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    prevUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(start, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n\n    // mutation\n    clear() {\n        this.head = null;\n        this.tail = null;\n    }\n    copy() {\n        const result = new List();\n\n        for (let data of this) {\n            result.appendData(data);\n        }\n\n        return result;\n    }\n    prepend(item) {\n        //      head\n        //    ^\n        // item\n        this.updateCursors(null, item, this.head, item);\n\n        // insert to the beginning of the list\n        if (this.head !== null) {\n            // new item <- first item\n            this.head.prev = item;\n            // new item -> first item\n            item.next = this.head;\n        } else {\n            // if list has no head, then it also has no tail\n            // in this case tail points to the new item\n            this.tail = item;\n        }\n\n        // head always points to new item\n        this.head = item;\n        return this;\n    }\n    prependData(data) {\n        return this.prepend(List.createItem(data));\n    }\n    append(item) {\n        return this.insert(item);\n    }\n    appendData(data) {\n        return this.insert(List.createItem(data));\n    }\n    insert(item, before = null) {\n        if (before !== null) {\n            // prev   before\n            //      ^\n            //     item\n            this.updateCursors(before.prev, item, before, item);\n\n            if (before.prev === null) {\n                // insert to the beginning of list\n                if (this.head !== before) {\n                    throw new Error('before doesn\\'t belong to list');\n                }\n                // since head points to before therefore list doesn't empty\n                // no need to check tail\n                this.head = item;\n                before.prev = item;\n                item.next = before;\n                this.updateCursors(null, item);\n            } else {\n                // insert between two items\n                before.prev.next = item;\n                item.prev = before.prev;\n                before.prev = item;\n                item.next = before;\n            }\n        } else {\n            // tail\n            //      ^\n            //      item\n            this.updateCursors(this.tail, item, null, item);\n\n            // insert to the ending of the list\n            if (this.tail !== null) {\n                // last item -> new item\n                this.tail.next = item;\n                // last item <- new item\n                item.prev = this.tail;\n            } else {\n                // if list has no tail, then it also has no head\n                // in this case head points to new item\n                this.head = item;\n            }\n\n            // tail always points to new item\n            this.tail = item;\n        }\n\n        return this;\n    }\n    insertData(data, before) {\n        return this.insert(List.createItem(data), before);\n    }\n    remove(item) {\n        //      item\n        //       ^\n        // prev     next\n        this.updateCursors(item, item.prev, item, item.next);\n\n        if (item.prev !== null) {\n            item.prev.next = item.next;\n        } else {\n            if (this.head !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.head = item.next;\n        }\n\n        if (item.next !== null) {\n            item.next.prev = item.prev;\n        } else {\n            if (this.tail !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.tail = item.prev;\n        }\n\n        item.prev = null;\n        item.next = null;\n\n        return item;\n    }\n    push(data) {\n        this.insert(List.createItem(data));\n    }\n    pop() {\n        return this.tail !== null ? this.remove(this.tail) : null;\n    }\n    unshift(data) {\n        this.prepend(List.createItem(data));\n    }\n    shift() {\n        return this.head !== null ? this.remove(this.head) : null;\n    }\n    prependList(list) {\n        return this.insertList(list, this.head);\n    }\n    appendList(list) {\n        return this.insertList(list);\n    }\n    insertList(list, before) {\n        // ignore empty lists\n        if (list.head === null) {\n            return this;\n        }\n\n        if (before !== undefined && before !== null) {\n            this.updateCursors(before.prev, list.tail, before, list.head);\n\n            // insert in the middle of dist list\n            if (before.prev !== null) {\n                // before.prev <-> list.head\n                before.prev.next = list.head;\n                list.head.prev = before.prev;\n            } else {\n                this.head = list.head;\n            }\n\n            before.prev = list.tail;\n            list.tail.next = before;\n        } else {\n            this.updateCursors(this.tail, list.tail, null, list.head);\n\n            // insert to end of the list\n            if (this.tail !== null) {\n                // if destination list has a tail, then it also has a head,\n                // but head doesn't change\n                // dest tail -> source head\n                this.tail.next = list.head;\n                // dest tail <- source head\n                list.head.prev = this.tail;\n            } else {\n                // if list has no a tail, then it also has no a head\n                // in this case points head to new item\n                this.head = list.head;\n            }\n\n            // tail always start point to new item\n            this.tail = list.tail;\n        }\n\n        list.head = null;\n        list.tail = null;\n        return this;\n    }\n    replace(oldItem, newItemOrList) {\n        if ('head' in newItemOrList) {\n            this.insertList(newItemOrList, oldItem);\n        } else {\n            this.insert(newItemOrList, oldItem);\n        }\n\n        this.remove(oldItem);\n    }\n}\n", "export function createCustomError(name, message) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    const error = Object.create(SyntaxError.prototype);\n    const errorStack = new Error();\n\n    return Object.assign(error, {\n        name,\n        message,\n        get stack() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, `${name}: ${message}\\n`);\n        }\n    });\n};\n", "import { createCustomError } from '../utils/create-custom-error.js';\n\nconst MAX_LINE_LENGTH = 100;\nconst OFFSET_CORRECTION = 60;\nconst TAB_REPLACEMENT = '    ';\n\nfunction sourceFragment({ source, line, column }, extraLines) {\n    function processLines(start, end) {\n        return lines\n            .slice(start, end)\n            .map((line, idx) =>\n                String(start + idx + 1).padStart(maxNumLength) + ' |' + line\n            ).join('\\n');\n    }\n\n    const lines = source.split(/\\r\\n?|\\n|\\f/);\n    const startLine = Math.max(1, line - extraLines) - 1;\n    const endLine = Math.min(line + extraLines, lines.length + 1);\n    const maxNumLength = Math.max(4, String(endLine).length) + 1;\n    let cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n        cutLeft = column - OFFSET_CORRECTION + 3;\n        column = OFFSET_CORRECTION - 2;\n    }\n\n    for (let i = startLine; i <= endLine; i++) {\n        if (i >= 0 && i < lines.length) {\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n            lines[i] =\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\n        }\n    }\n\n    return [\n        processLines(startLine, line),\n        new Array(column + maxNumLength + 2).join('-') + '^',\n        processLines(line, endLine)\n    ].filter(Boolean).join('\\n');\n}\n\nexport function SyntaxError(message, source, offset, line, column) {\n    const error = Object.assign(createCustomError('SyntaxError', message), {\n        source,\n        offset,\n        line,\n        column,\n        sourceFragment(extraLines) {\n            return sourceFragment({ source, line, column }, isNaN(extraLines) ? 0 : extraLines);\n        },\n        get formattedMessage() {\n            return (\n                `Parse error: ${message}\\n` +\n                sourceFragment({ source, line, column }, 2)\n            );\n        }\n    });\n\n    return error;\n}\n", "import { WhiteSpace, Comment } from '../tokenizer/index.js';\n\nexport function readSequence(recognizer) {\n    const children = this.createList();\n    let space = false;\n    const context = {\n        recognizer\n    };\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n                this.next();\n                continue;\n\n            case WhiteSpace:\n                space = true;\n                this.next();\n                continue;\n        }\n\n        let child = recognizer.getNode.call(this, context);\n\n        if (child === undefined) {\n            break;\n        }\n\n        if (space) {\n            if (recognizer.onWhiteSpace) {\n                recognizer.onWhiteSpace.call(this, child, children, context);\n            }\n            space = false;\n        }\n\n        children.push(child);\n    }\n\n    if (space && recognizer.onWhiteSpace) {\n        recognizer.onWhiteSpace.call(this, null, children, context);\n    }\n\n    return children;\n};\n", "import { List } from '../utils/List.js';\nimport { SyntaxError } from './SyntaxError.js';\nimport {\n    tokenize,\n    OffsetToLocation,\n    TokenStream,\n    tokenNames,\n\n    consumeNumber,\n    findWhiteSpaceStart,\n    cmpChar,\n    cmpStr,\n\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Percentage,\n    Number as NumberToken\n} from '../tokenizer/index.js';\nimport { readSequence } from './sequence.js';\n\nconst NOOP = () => {};\nconst EXCLAMATIONMARK = 0x0021;  // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;       // U+0023 NUMBER SIGN (#)\nconst SEMICOLON = 0x003B;        // U+003B SEMICOLON (;)\nconst LEFTCURLYBRACKET = 0x007B; // U+007B LEFT CURLY BRACKET ({)\nconst NULL = 0;\n\nfunction createParseContext(name) {\n    return function() {\n        return this[name]();\n    };\n}\n\nfunction fetchParseValues(dict) {\n    const result = Object.create(null);\n\n    for (const name in dict) {\n        const item = dict[name];\n        const fn = item.parse || item;\n\n        if (fn) {\n            result[name] = fn;\n        }\n    }\n\n    return result;\n}\n\nfunction processConfig(config) {\n    const parseConfig = {\n        context: Object.create(null),\n        scope: Object.assign(Object.create(null), config.scope),\n        atrule: fetchParseValues(config.atrule),\n        pseudo: fetchParseValues(config.pseudo),\n        node: fetchParseValues(config.node)\n    };\n\n    for (const name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n            case 'function':\n                parseConfig.context[name] = config.parseContext[name];\n                break;\n\n            case 'string':\n                parseConfig.context[name] = createParseContext(config.parseContext[name]);\n                break;\n        }\n    }\n\n    return {\n        config: parseConfig,\n        ...parseConfig,\n        ...parseConfig.node\n    };\n}\n\nexport function createParser(config) {\n    let source = '';\n    let filename = '<unknown>';\n    let needPositions = false;\n    let onParseError = NOOP;\n    let onParseErrorThrow = false;\n\n    const locationMap = new OffsetToLocation();\n    const parser = Object.assign(new TokenStream(), processConfig(config || {}), {\n        parseAtrulePrelude: true,\n        parseRulePrelude: true,\n        parseValue: true,\n        parseCustomProperty: false,\n\n        readSequence,\n\n        consumeUntilBalanceEnd: () => 0,\n        consumeUntilLeftCurlyBracket(code) {\n            return code === LEFTCURLYBRACKET ? 1 : 0;\n        },\n        consumeUntilLeftCurlyBracketOrSemicolon(code) {\n            return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilExclamationMarkOrSemicolon(code) {\n            return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilSemicolonIncluded(code) {\n            return code === SEMICOLON ? 2 : 0;\n        },\n\n        createList() {\n            return new List();\n        },\n        createSingleNodeList(node) {\n            return new List().appendData(node);\n        },\n        getFirstListNode(list) {\n            return list && list.first;\n        },\n        getLastListNode(list) {\n            return list && list.last;\n        },\n\n        parseWithFallback(consumer, fallback) {\n            const startToken = this.tokenIndex;\n\n            try {\n                return consumer.call(this);\n            } catch (e) {\n                if (onParseErrorThrow) {\n                    throw e;\n                }\n\n                const fallbackNode = fallback.call(this, startToken);\n\n                onParseErrorThrow = true;\n                onParseError(e, fallbackNode);\n                onParseErrorThrow = false;\n\n                return fallbackNode;\n            }\n        },\n\n        lookupNonWSType(offset) {\n            let type;\n\n            do {\n                type = this.lookupType(offset++);\n                if (type !== WhiteSpace) {\n                    return type;\n                }\n            } while (type !== NULL);\n\n            return NULL;\n        },\n\n        charCodeAt(offset) {\n            return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;\n        },\n        substring(offsetStart, offsetEnd) {\n            return source.substring(offsetStart, offsetEnd);\n        },\n        substrToCursor(start) {\n            return this.source.substring(start, this.tokenStart);\n        },\n\n        cmpChar(offset, charCode) {\n            return cmpChar(source, offset, charCode);\n        },\n        cmpStr(offsetStart, offsetEnd, str) {\n            return cmpStr(source, offsetStart, offsetEnd, str);\n        },\n\n        consume(tokenType) {\n            const start = this.tokenStart;\n\n            this.eat(tokenType);\n\n            return this.substrToCursor(start);\n        },\n        consumeFunctionName() {\n            const name = source.substring(this.tokenStart, this.tokenEnd - 1);\n\n            this.eat(FunctionToken);\n\n            return name;\n        },\n        consumeNumber(type) {\n            const number = source.substring(this.tokenStart, consumeNumber(source, this.tokenStart));\n\n            this.eat(type);\n\n            return number;\n        },\n\n        eat(tokenType) {\n            if (this.tokenType !== tokenType) {\n                const tokenName = tokenNames[tokenType].slice(0, -6).replace(/-/g, ' ').replace(/^./, m => m.toUpperCase());\n                let message = `${/[[\\](){}]/.test(tokenName) ? `\"${tokenName}\"` : tokenName} is expected`;\n                let offset = this.tokenStart;\n\n                // tweak message and offset\n                switch (tokenType) {\n                    case Ident:\n                        // when identifier is expected but there is a function or url\n                        if (this.tokenType === FunctionToken || this.tokenType === Url) {\n                            offset = this.tokenEnd - 1;\n                            message = 'Identifier is expected but function found';\n                        } else {\n                            message = 'Identifier is expected';\n                        }\n                        break;\n\n                    case Hash:\n                        if (this.isDelim(NUMBERSIGN)) {\n                            this.next();\n                            offset++;\n                            message = 'Name is expected';\n                        }\n                        break;\n\n                    case Percentage:\n                        if (this.tokenType === NumberToken) {\n                            offset = this.tokenEnd;\n                            message = 'Percent sign is expected';\n                        }\n                        break;\n                }\n\n                this.error(message, offset);\n            }\n\n            this.next();\n        },\n        eatIdent(name) {\n            if (this.tokenType !== Ident || this.lookupValue(0, name) === false) {\n                this.error(`Identifier \"${name}\" is expected`);\n            }\n\n            this.next();\n        },\n        eatDelim(code) {\n            if (!this.isDelim(code)) {\n                this.error(`Delim \"${String.fromCharCode(code)}\" is expected`);\n            }\n\n            this.next();\n        },\n\n        getLocation(start, end) {\n            if (needPositions) {\n                return locationMap.getLocationRange(\n                    start,\n                    end,\n                    filename\n                );\n            }\n\n            return null;\n        },\n        getLocationFromList(list) {\n            if (needPositions) {\n                const head = this.getFirstListNode(list);\n                const tail = this.getLastListNode(list);\n                return locationMap.getLocationRange(\n                    head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,\n                    tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,\n                    filename\n                );\n            }\n\n            return null;\n        },\n\n        error(message, offset) {\n            const location = typeof offset !== 'undefined' && offset < source.length\n                ? locationMap.getLocation(offset)\n                : this.eof\n                    ? locationMap.getLocation(findWhiteSpaceStart(source, source.length - 1))\n                    : locationMap.getLocation(this.tokenStart);\n\n            throw new SyntaxError(\n                message || 'Unexpected input',\n                source,\n                location.offset,\n                location.line,\n                location.column\n            );\n        }\n    });\n\n    const parse = function(source_, options) {\n        source = source_;\n        options = options || {};\n\n        parser.setSource(source, tokenize);\n        locationMap.setSource(\n            source,\n            options.offset,\n            options.line,\n            options.column\n        );\n\n        filename = options.filename || '<unknown>';\n        needPositions = Boolean(options.positions);\n        onParseError = typeof options.onParseError === 'function' ? options.onParseError : NOOP;\n        onParseErrorThrow = false;\n\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n        const { context = 'default', onComment } = options;\n\n        if (context in parser.context === false) {\n            throw new Error('Unknown context `' + context + '`');\n        }\n\n        if (typeof onComment === 'function') {\n            parser.forEachToken((type, start, end) => {\n                if (type === Comment) {\n                    const loc = parser.getLocation(start, end);\n                    const value = cmpStr(source, end - 2, end, '*/')\n                        ? source.slice(start + 2, end - 2)\n                        : source.slice(start + 2, end);\n\n                    onComment(value, loc);\n                }\n            });\n        }\n\n        const ast = parser.context[context].call(parser, options);\n\n        if (!parser.eof) {\n            parser.error();\n        }\n\n        return ast;\n    };\n\n    return Object.assign(parse, {\n        SyntaxError,\n        config: parser.config\n    });\n};\n", "import { SourceMapGenerator } from 'source-map-js/lib/source-map-generator.js';\n\nconst trackNodes = new Set(['Atrule', 'Selector', 'Declaration']);\n\nexport function generateSourceMap(handlers) {\n    const map = new SourceMapGenerator();\n    const generated = {\n        line: 1,\n        column: 0\n    };\n    const original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    const activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    const activatedMapping = {\n        generated: activatedGenerated\n    };\n    let line = 1;\n    let column = 0;\n    let sourceMappingActive = false;\n\n    const origHandlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.has(node.type)) {\n            const nodeLine = node.loc.start.line;\n            const nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original,\n                    generated\n                });\n            }\n        }\n\n        origHandlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.has(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    const origHandlersEmit = handlers.emit;\n    handlers.emit = function(value, type, auto) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        origHandlersEmit(value, type, auto);\n    };\n\n    const origHandlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: origHandlersResult(),\n            map\n        };\n    };\n\n    return handlers;\n};\n", "import {\n    WhiteSpace,\n    Delim,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    BadUrl,\n    AtKeyword,\n    Hash,\n    Percentage,\n    Dimension,\n    Number as NumberToken,\n    String as StringToken,\n    Colon,\n    LeftParenthesis,\n    RightParenthesis,\n    CDC\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n\nconst code = (type, value) => {\n    if (type === Delim) {\n        type = value;\n    }\n\n    if (typeof type === 'string') {\n        const charCode = type.charCodeAt(0);\n        return charCode > 0x7F ? 0x8000 : charCode << 8;\n    }\n\n    return type;\n};\n\n// https://www.w3.org/TR/css-syntax-3/#serialization\n// The only requirement for serialization is that it must \"round-trip\" with parsing,\n// that is, parsing the stylesheet must produce the same data structures as parsing,\n// serializing, and parsing again, except for consecutive <whitespace-token>s,\n// which may be collapsed into a single token.\n\nconst specPairs = [\n    [Ident, Ident],\n    [Ident, FunctionToken],\n    [Ident, Url],\n    [Ident, BadUrl],\n    [Ident, '-'],\n    [Ident, NumberToken],\n    [Ident, Percentage],\n    [Ident, Dimension],\n    [Ident, CDC],\n    [Ident, LeftParenthesis],\n\n    [AtKeyword, Ident],\n    [AtKeyword, FunctionToken],\n    [AtKeyword, Url],\n    [AtKeyword, BadUrl],\n    [AtKeyword, '-'],\n    [AtKeyword, NumberToken],\n    [AtKeyword, Percentage],\n    [AtKeyword, Dimension],\n    [AtKeyword, CDC],\n\n    [Hash, Ident],\n    [Hash, FunctionToken],\n    [Hash, Url],\n    [Hash, BadUrl],\n    [Hash, '-'],\n    [Hash, NumberToken],\n    [Hash, Percentage],\n    [Hash, Dimension],\n    [Hash, CDC],\n\n    [Dimension, Ident],\n    [Dimension, FunctionToken],\n    [Dimension, Url],\n    [Dimension, BadUrl],\n    [Dimension, '-'],\n    [Dimension, NumberToken],\n    [Dimension, Percentage],\n    [Dimension, Dimension],\n    [Dimension, CDC],\n\n    ['#', Ident],\n    ['#', FunctionToken],\n    ['#', Url],\n    ['#', BadUrl],\n    ['#', '-'],\n    ['#', NumberToken],\n    ['#', Percentage],\n    ['#', Dimension],\n    ['#', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['-', Ident],\n    ['-', FunctionToken],\n    ['-', Url],\n    ['-', BadUrl],\n    ['-', '-'],\n    ['-', NumberToken],\n    ['-', Percentage],\n    ['-', Dimension],\n    ['-', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    [NumberToken, Ident],\n    [NumberToken, FunctionToken],\n    [NumberToken, Url],\n    [NumberToken, BadUrl],\n    [NumberToken, NumberToken],\n    [NumberToken, Percentage],\n    [NumberToken, Dimension],\n    [NumberToken, '%'],\n    [NumberToken, CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['@', Ident],\n    ['@', FunctionToken],\n    ['@', Url],\n    ['@', BadUrl],\n    ['@', '-'],\n    ['@', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['.', NumberToken],\n    ['.', Percentage],\n    ['.', Dimension],\n\n    ['+', NumberToken],\n    ['+', Percentage],\n    ['+', Dimension],\n\n    ['/', '*']\n];\n// validate with scripts/generate-safe\nconst safePairs = specPairs.concat([\n    [Ident, Hash],\n\n    [Dimension, Hash],\n\n    [Hash, Hash],\n\n    [AtKeyword, LeftParenthesis],\n    [AtKeyword, StringToken],\n    [AtKeyword, Colon],\n\n    [Percentage, Percentage],\n    [Percentage, Dimension],\n    [Percentage, FunctionToken],\n    [Percentage, '-'],\n\n    [RightParenthesis, Ident],\n    [RightParenthesis, FunctionToken],\n    [RightParenthesis, Percentage],\n    [RightParenthesis, Dimension],\n    [RightParenthesis, Hash],\n    [RightParenthesis, '-']\n]);\n\nfunction createMap(pairs) {\n    const isWhiteSpaceRequired = new Set(\n        pairs.map(([prev, next]) => (code(prev) << 16 | code(next)))\n    );\n\n    return function(prevCode, type, value) {\n        const nextCode = code(type, value);\n        const nextCharCode = value.charCodeAt(0);\n        const emitWs =\n            (nextCharCode === HYPHENMINUS &&\n                type !== Ident &&\n                type !== FunctionToken &&\n                type !== CDC) ||\n            (nextCharCode === PLUSSIGN)\n                ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8)\n                : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);\n\n        if (emitWs) {\n            this.emit(' ', WhiteSpace, true);\n        }\n\n        return nextCode;\n    };\n}\n\nexport const spec = createMap(specPairs);\nexport const safe = createMap(safePairs);\n", "import { tokenize, Delim, WhiteSpace } from '../tokenizer/index.js';\nimport { generateSourceMap } from './sourceMap.js';\nimport * as tokenBefore from './token-before.js';\n\nconst REVERSESOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nfunction processChildren(node, delimeter) {\n    if (typeof delimeter === 'function') {\n        let prev = null;\n\n        node.children.forEach(node => {\n            if (prev !== null) {\n                delimeter.call(this, prev);\n            }\n\n            this.node(node);\n            prev = node;\n        });\n\n        return;\n    }\n\n    node.children.forEach(this.node, this);\n}\n\nfunction processChunk(chunk) {\n    tokenize(chunk, (type, start, end) => {\n        this.token(type, chunk.slice(start, end));\n    });\n}\n\nexport function createGenerator(config) {\n    const types = new Map();\n\n    for (let name in config.node) {\n        const item = config.node[name];\n        const fn = item.generate || item;\n\n        if (typeof fn === 'function') {\n            types.set(name, item.generate || item);\n        }\n    }\n\n    return function(node, options) {\n        let buffer = '';\n        let prevCode = 0;\n        let handlers = {\n            node(node) {\n                if (types.has(node.type)) {\n                    types.get(node.type).call(publicApi, node);\n                } else {\n                    throw new Error('Unknown node type: ' + node.type);\n                }\n            },\n            tokenBefore: tokenBefore.safe,\n            token(type, value) {\n                prevCode = this.tokenBefore(prevCode, type, value);\n\n                this.emit(value, type, false);\n\n                if (type === Delim && value.charCodeAt(0) === REVERSESOLIDUS) {\n                    this.emit('\\n', WhiteSpace, true);\n                }\n            },\n            emit(value) {\n                buffer += value;\n            },\n            result() {\n                return buffer;\n            }\n        };\n\n        if (options) {\n            if (typeof options.decorator === 'function') {\n                handlers = options.decorator(handlers);\n            }\n\n            if (options.sourceMap) {\n                handlers = generateSourceMap(handlers);\n            }\n\n            if (options.mode in tokenBefore) {\n                handlers.tokenBefore = tokenBefore[options.mode];\n            }\n        }\n\n        const publicApi = {\n            node: (node) => handlers.node(node),\n            children: processChildren,\n            token: (type, value) => handlers.token(type, value),\n            tokenize: processChunk\n        };\n\n        handlers.node(node);\n\n        return handlers.result();\n    };\n};\n", "import { List } from '../utils/List.js';\n\nexport function createConvertor(walk) {\n    return {\n        fromPlainObject(ast) {\n            walk(ast, {\n                enter(node) {\n                    if (node.children && node.children instanceof List === false) {\n                        node.children = new List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject(ast) {\n            walk(ast, {\n                leave(node) {\n                    if (node.children && node.children instanceof List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n};\n", "const { hasOwnProperty } = Object.prototype;\nconst noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const walkers = [];\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        let fieldTypes = structure[key];\n        const walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(fieldTypes)) {\n            fieldTypes = [fieldTypes];\n        }\n\n        for (const fieldType of fieldTypes) {\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    const types = {};\n\n    for (const name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            const nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    const fields = config.fields.slice();\n    const contextName = config.context;\n    const useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk, walkReducer) {\n        let prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (const field of fields) {\n            const ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    const breakWalk = reverse\n                        ? ref.reduceRight(walkReducer, false)\n                        : ref.reduce(walkReducer, false);\n\n                    if (breakWalk) {\n                        return true;\n                    }\n                } else if (walk(ref)) {\n                    return true;\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap({\n    StyleSheet,\n    Atrule,\n    Rule,\n    Block,\n    DeclarationList\n}) {\n    return {\n        Atrule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Rule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Declaration: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block,\n            DeclarationList\n        }\n    };\n}\n\nexport function createWalker(config) {\n    const types = getTypesFromConfig(config);\n    const iteratorsNatural = {};\n    const iteratorsReverse = {};\n    const breakWalk = Symbol('break-walk');\n    const skipNode = Symbol('skip-node');\n\n    for (const name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    const walk = function(root, options) {\n        function walkNode(node, item, list) {\n            const enterRet = enter.call(context, node, item, list);\n\n            if (enterRet === breakWalk) {\n                return true;\n            }\n\n            if (enterRet === skipNode) {\n                return false;\n            }\n\n            if (iterators.hasOwnProperty(node.type)) {\n                if (iterators[node.type](node, context, walkNode, walkReducer)) {\n                    return true;\n                }\n            }\n\n            if (leave.call(context, node, item, list) === breakWalk) {\n                return true;\n            }\n\n            return false;\n        }\n\n        let enter = noop;\n        let leave = noop;\n        let iterators = iteratorsNatural;\n        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n        const context = {\n            break: breakWalk,\n            skip: skipNode,\n\n            root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).sort().join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        walkNode(root);\n    };\n\n    walk.break = breakWalk;\n    walk.skip = skipNode;\n\n    walk.find = function(ast, fn) {\n        let found = null;\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found = node;\n                return breakWalk;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        let found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter(node, item, list) {\n                if (fn.call(this, node, item, list)) {\n                    found = node;\n                    return breakWalk;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        const found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n", "function noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    const { min, max, comma } = multiplier;\n\n    if (min === 0 && max === 0) {\n        return comma ? '#?' : '*';\n    }\n\n    if (min === 0 && max === 1) {\n        return '?';\n    }\n\n    if (min === 1 && max === 0) {\n        return comma ? '#' : '+';\n    }\n\n    if (min === 1 && max === 1) {\n        return '';\n    }\n\n    return (\n        (comma ? '#' : '') +\n        (min === max\n            ? '{' + min + '}'\n            : '{' + min + ',' + (max !== 0 ? max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-∞' : node.min) +\n                ',' +\n                (node.max === null ? '∞' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    const combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    const result = node.terms\n        .map(term => internalGenerate(term, decorate, forceBraces, compact))\n        .join(combinator);\n\n    if (node.explicit || forceBraces) {\n        return (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction internalGenerate(node, decorate, forceBraces, compact) {\n    let result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                internalGenerate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nexport function generate(node, options) {\n    let decorate = noop;\n    let forceBraces = false;\n    let compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return internalGenerate(node, decorate, forceBraces, compact);\n};\n", "import { createCustomError } from '../utils/create-custom-error.js';\nimport { generate } from '../definition-syntax/generate.js';\n\nconst defaultLoc = { offset: 0, line: 1, column: 1 };\n\nfunction locateMismatch(matchResult, node) {\n    const tokens = matchResult.tokens;\n    const longestMatch = matchResult.longestMatch;\n    const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    const badNode = mismatchNode !== node ? mismatchNode : null;\n    let mismatchOffset = 0;\n    let mismatchLength = 0;\n    let entries = 0;\n    let css = '';\n    let start;\n    let end;\n\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i].value;\n\n        if (i === longestMatch) {\n            mismatchLength = token.length;\n            mismatchOffset = css.length;\n        }\n\n        if (badNode !== null && tokens[i].node === badNode) {\n            if (i <= longestMatch) {\n                entries++;\n            } else {\n                entries = 0;\n            }\n        }\n\n        css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) { // last\n        start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n        end = buildLoc(start);\n    } else {\n        start = fromLoc(badNode, 'start') ||\n            buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n        end = fromLoc(badNode, 'end') ||\n            buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    };\n}\n\nfunction fromLoc(node, point) {\n    const value = node && node.loc && node.loc[point];\n\n    if (value) {\n        return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n}\n\nfunction buildLoc({ offset, line, column }, extra) {\n    const loc = {\n        offset,\n        line,\n        column\n    };\n\n    if (extra) {\n        const lines = extra.split(/\\n|\\r\\n?|\\f/);\n\n        loc.offset += extra.length;\n        loc.line += lines.length - 1;\n        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n}\n\nexport const SyntaxReferenceError = function(type, referenceName) {\n    const error = createCustomError(\n        'SyntaxReferenceError',\n        type + (referenceName ? ' `' + referenceName + '`' : '')\n    );\n\n    error.reference = referenceName;\n\n    return error;\n};\n\nexport const SyntaxMatchError = function(message, syntax, node, matchResult) {\n    const error = createCustomError('SyntaxMatchError', message);\n    const {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    } = locateMismatch(matchResult, node);\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' +\n        '  syntax: ' + error.syntax + '\\n' +\n        '   value: ' + (css || '<empty string>') + '\\n' +\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    Object.assign(error, start);\n    error.loc = {\n        source: (node && node.loc && node.loc.source) || '<unknown>',\n        start,\n        end\n    };\n\n    return error;\n};\n", "const keywords = new Map();\nconst properties = new Map();\nconst HYPHENMINUS = 45; // '-'.charCodeAt()\n\nexport const keyword = getKeywordDescriptor;\nexport const property = getPropertyDescriptor;\nexport const vendorPrefix = getVendorPrefix;\nexport function isCustomProperty(str, offset) {\n    offset = offset || 0;\n\n    return str.length - offset >= 2 &&\n           str.charCodeAt(offset) === HYPHENMINUS &&\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\n\nfunction getVendorPrefix(str, offset) {\n    offset = offset || 0;\n\n    // verdor prefix should be at least 3 chars length\n    if (str.length - offset >= 3) {\n        // vendor prefix starts with hyper minus following non-hyper minus\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n            // vendor prefix should contain a hyper minus at the ending\n            const secondDashIndex = str.indexOf('-', offset + 2);\n\n            if (secondDashIndex !== -1) {\n                return str.substring(offset, secondDashIndex + 1);\n            }\n        }\n    }\n\n    return '';\n}\n\nfunction getKeywordDescriptor(keyword) {\n    if (keywords.has(keyword)) {\n        return keywords.get(keyword);\n    }\n\n    const name = keyword.toLowerCase();\n    let descriptor = keywords.get(name);\n\n    if (descriptor === undefined) {\n        const custom = isCustomProperty(name, 0);\n        const vendor = !custom ? getVendorPrefix(name, 0) : '';\n        descriptor = Object.freeze({\n            basename: name.substr(vendor.length),\n            name,\n            prefix: vendor,\n            vendor,\n            custom\n        });\n    }\n\n    keywords.set(keyword, descriptor);\n\n    return descriptor;\n}\n\nfunction getPropertyDescriptor(property) {\n    if (properties.has(property)) {\n        return properties.get(property);\n    }\n\n    let name = property;\n    let hack = property[0];\n\n    if (hack === '/') {\n        hack = property[1] === '/' ? '//' : '/';\n    } else if (hack !== '_' &&\n               hack !== '*' &&\n               hack !== '$' &&\n               hack !== '#' &&\n               hack !== '+' &&\n               hack !== '&') {\n        hack = '';\n    }\n\n    const custom = isCustomProperty(name, hack.length);\n\n    // re-use result when possible (the same as for lower case)\n    if (!custom) {\n        name = name.toLowerCase();\n        if (properties.has(name)) {\n            const descriptor = properties.get(name);\n            properties.set(property, descriptor);\n            return descriptor;\n        }\n    }\n\n    const vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n    const prefix = name.substr(0, hack.length + vendor.length);\n    const descriptor = Object.freeze({\n        basename: name.substr(prefix.length),\n        name: name.substr(hack.length),\n        hack,\n        vendor,\n        prefix,\n        custom\n    });\n\n    properties.set(property, descriptor);\n\n    return descriptor;\n}\n", "// https://drafts.csswg.org/css-cascade-5/\nexport const cssWideKeywords = [\n    'initial',\n    'inherit',\n    'unset',\n    'revert',\n    'revert-layer'\n];\n", "import {\n    isDigit,\n    cmpChar,\n    Delim,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WhiteSpace || token.type === Comment)) {\n        token = getNextToken(++offset);\n    }\n\n    return offset;\n}\n\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n        return 0;\n    }\n\n    const code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            // Number sign is not allowed\n            return 0;\n        }\n        valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\n            // Integer is expected\n            return 0;\n        }\n    }\n\n    return offset + 1;\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB(token, offset_, getNextToken) {\n    let sign = false;\n    let offset = skipSC(token, offset_, getNextToken);\n\n    token = getNextToken(offset);\n\n    if (token === null) {\n        return offset_;\n    }\n\n    if (token.type !== NumberToken) {\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n            sign = true;\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\n            token = getNextToken(offset);\n\n            if (token === null || token.type !== NumberToken) {\n                return 0;\n            }\n        } else {\n            return offset_;\n        }\n    }\n\n    if (!sign) {\n        const code = token.value.charCodeAt(0);\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n            // Number sign is expected\n            return 0;\n        }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport default function anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    let offset = 0;\n\n    if (!token) {\n        return 0;\n    }\n\n    // <integer>\n    if (token.type === NumberToken) {\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === Ident && token.value.charCodeAt(0) === HYPHENMINUS) {\n        // expect 1st char is N\n        if (!cmpChar(token.value, 1, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // -n- <signless-integer>\n            case 3:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // <dashndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === Ident || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === Ident)) {\n        // just ignore a plus\n        if (token.type !== Ident) {\n            token = getNextToken(++offset);\n        }\n\n        if (token === null || !cmpChar(token.value, 0, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // '+'? n- <signless-integer>\n            case 2:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // '+'? <ndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === Dimension) {\n        let code = token.value.charCodeAt(0);\n        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n        let i = sign;\n\n        for (; i < token.value.length; i++) {\n            if (!isDigit(token.value.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === sign) {\n            // Integer is expected\n            return 0;\n        }\n\n        if (!cmpChar(token.value, i, N)) {\n            return 0;\n        }\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === token.value.length) {\n            return consumeB(getNextToken(++offset), offset, getNextToken);\n        } else {\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n                return 0;\n            }\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === token.value.length) {\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n            }\n            // <ndashdigit-dimension>\n            else {\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n            }\n        }\n    }\n\n    return 0;\n};\n", "import {\n    isHexDigit,\n    cmpChar,\n    Ident,\n    Delim,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nconst U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n}\n\nfunction hexSequence(token, offset, allowDash) {\n    let hexlen = 0;\n\n    for (let pos = offset; pos < token.value.length; pos++) {\n        const code = token.value.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n            hexSequence(token, offset + hexlen + 1, false);\n            return 6; // dissallow following question marks\n        }\n\n        if (!isHexDigit(code)) {\n            return 0; // not a hex digit\n        }\n\n        if (++hexlen > 6) {\n            return 0; // too many hex digits\n        };\n    }\n\n    return hexlen;\n}\n\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n        return 0; // nothing consumed\n    }\n\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n        if (++consumed > 6) {\n            return 0; // too many question marks\n        }\n\n        length++;\n    }\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nexport default function urange(token, getNextToken) {\n    let length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== Ident || !cmpChar(token.value, 0, U)) {\n        return 0;\n    }\n\n    token = getNextToken(++length);\n    if (token === null) {\n        return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n        token = getNextToken(++length);\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === Ident) {\n            // u '+' <ident-token> '?'*\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n        }\n\n        if (isDelim(token, QUESTIONMARK)) {\n            // u '+' '?'+\n            return withQuestionMarkSequence(1, ++length, getNextToken);\n        }\n\n        // Hex digit or question mark is expected\n        return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === NumberToken) {\n        const consumedHexLength = hexSequence(token, 1, true);\n        if (consumedHexLength === 0) {\n            return 0;\n        }\n\n        token = getNextToken(++length);\n        if (token === null) {\n            // u <number-token> <eof>\n            return length;\n        }\n\n        if (token.type === Dimension || token.type === NumberToken) {\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n                return 0;\n            }\n\n            return length + 1;\n        }\n\n        // u <number-token> '?'*\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === Dimension) {\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n\n    return 0;\n};\n", "import { cssWideKeywords } from './generic-const.js';\nimport anPlusB from './generic-an-plus-b.js';\nimport urange from './generic-urange.js';\nimport {\n    isIdentifierStart,\n    isHexDigit,\n    isDigit,\n    cmpStr,\n    consumeNumber,\n\n    Ident,\n    Function as FunctionToken,\n    AtKeyword,\n    Hash,\n    String as StringToken,\n    BadString,\n    Url,\n    BadUrl,\n    Delim,\n    Number as NumberToken,\n    Percentage,\n    Dimension,\n    WhiteSpace,\n    CDO,\n    CDC,\n    Colon,\n    Semicolon,\n    Comma,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../tokenizer/index.js';\n\nconst calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\n// safe char code getter\nfunction charCodeAt(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (let i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        charCodeAt(str, offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(charCodeAt(str, offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        const num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        // FIXME: when opts.min is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.min !== null && num < opts.min && typeof opts.min !== 'string') {\n            return true;\n        }\n\n        // FIXME: when opts.max is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.max !== null && num > opts.max && typeof opts.max !== 'string') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // balanced token consuming\n    scan:\n    do {\n        switch (token.type) {\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n\n                if (balanceStash.length === 0) {\n                    length++;\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === FunctionToken && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    const name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCodeAt(token.value, 0) !== 0x002D || charCodeAt(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    const length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (let i = 1; i < length; i++) {\n        if (!isHexDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCodeAt(token.value, 1), charCodeAt(token.value, 2), charCodeAt(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence does not contain ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case Semicolon:\n                if (balanceCloseType === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case Delim:\n                if (balanceCloseType === 0 && token.value === '!') {\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    if (type) {\n        type = new Set(type);\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== Dimension) {\n            return 0;\n        }\n\n        const numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            const reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.has(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === NumberToken) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    const numberEnd = consumeNumber(token.value, 0);\n    const isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== NumberToken) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    let i = charCodeAt(token.value, 0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            charCodeAt(token.value, 0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// token types\nexport const tokenTypes = {\n    'ident-token': tokenType(Ident),\n    'function-token': tokenType(FunctionToken),\n    'at-keyword-token': tokenType(AtKeyword),\n    'hash-token': tokenType(Hash),\n    'string-token': tokenType(StringToken),\n    'bad-string-token': tokenType(BadString),\n    'url-token': tokenType(Url),\n    'bad-url-token': tokenType(BadUrl),\n    'delim-token': tokenType(Delim),\n    'number-token': tokenType(NumberToken),\n    'percentage-token': tokenType(Percentage),\n    'dimension-token': tokenType(Dimension),\n    'whitespace-token': tokenType(WhiteSpace),\n    'CDO-token': tokenType(CDO),\n    'CDC-token': tokenType(CDC),\n    'colon-token': tokenType(Colon),\n    'semicolon-token': tokenType(Semicolon),\n    'comma-token': tokenType(Comma),\n    '[-token': tokenType(LeftSquareBracket),\n    ']-token': tokenType(RightSquareBracket),\n    '(-token': tokenType(LeftParenthesis),\n    ')-token': tokenType(RightParenthesis),\n    '{-token': tokenType(LeftCurlyBracket),\n    '}-token': tokenType(RightCurlyBracket)\n};\n\n// token production types\nexport const productionTypes = {\n    // token type aliases\n    'string': tokenType(StringToken),\n    'ident': tokenType(Ident),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue\n};\n\nexport const unitGroups = [\n    'length',\n    'angle',\n    'time',\n    'frequency',\n    'resolution',\n    'flex',\n    'decibel',\n    'semitones'\n];\n\n// dimensions types depend on units set\nexport function createDemensionTypes(units) {\n    const {\n        angle,\n        decibel,\n        frequency,\n        flex,\n        length,\n        resolution,\n        semitones,\n        time\n    } = units || {};\n\n    return {\n        'dimension': calc(dimension(null)),\n        'angle': calc(dimension(angle)),\n        'decibel': calc(dimension(decibel)),\n        'frequency': calc(dimension(frequency)),\n        'flex': calc(dimension(flex)),\n        'length': calc(zero(dimension(length))),\n        'resolution': calc(dimension(resolution)),\n        'semitones': calc(dimension(semitones)),\n        'time': calc(dimension(time))\n    };\n}\n\nexport function createGenericTypes(units) {\n    return {\n        ...tokenTypes,\n        ...productionTypes,\n        ...createDemensionTypes(units)\n    };\n};\n", "export const length = [\n    // absolute length units https://www.w3.org/TR/css-values-3/#lengths\n    'cm', 'mm', 'q', 'in', 'pt', 'pc', 'px',\n    // font-relative length units https://drafts.csswg.org/css-values-4/#font-relative-lengths\n    'em', 'rem',\n    'ex', 'rex',\n    'cap', 'rcap',\n    'ch', 'rch',\n    'ic', 'ric',\n    'lh', 'rlh',\n    // viewport-percentage lengths https://drafts.csswg.org/css-values-4/#viewport-relative-lengths\n    'vw', 'svw', 'lvw', 'dvw',\n    'vh', 'svh', 'lvh', 'dvh',\n    'vi', 'svi', 'lvi', 'dvi',\n    'vb', 'svb', 'lvb', 'dvb',\n    'vmin', 'svmin', 'lvmin', 'dvmin',\n    'vmax', 'svmax', 'lvmax', 'dvmax',\n    // container relative lengths https://drafts.csswg.org/css-contain-3/#container-lengths\n    'cqw', 'cqh', 'cqi', 'cqb', 'cqmin', 'cqmax'\n];\nexport const angle = ['deg', 'grad', 'rad', 'turn'];    // https://www.w3.org/TR/css-values-3/#angles\nexport const time = ['s', 'ms'];                        // https://www.w3.org/TR/css-values-3/#time\nexport const frequency = ['hz', 'khz'];                 // https://www.w3.org/TR/css-values-3/#frequency\nexport const resolution = ['dpi', 'dpcm', 'dppx', 'x']; // https://www.w3.org/TR/css-values-3/#resolution\nexport const flex = ['fr'];                             // https://drafts.csswg.org/css-grid/#fr-unit\nexport const decibel = ['db'];                          // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nexport const semitones = ['st'];                        // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n", "export { SyntaxError } from './SyntaxError.js';\nexport { generate } from './generate.js';\nexport { parse } from './parse.js';\nexport { walk } from './walk.js';\n", "import { createCustomError } from '../utils/create-custom-error.js';\n\nexport function SyntaxError(message, input, offset) {\n    return Object.assign(createCustomError('SyntaxError', message), {\n        input,\n        offset,\n        rawMessage: message,\n        message: message + '\\n' +\n            '  ' + input + '\\n' +\n            '--' + new Array((offset || input.length) + 1).join('-') + '^'\n    });\n};\n", "import { SyntaxError } from './SyntaxError.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\n\nexport class Tokenizer {\n    constructor(str) {\n        this.str = str;\n        this.pos = 0;\n    }\n    charCodeAt(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    }\n    charCode() {\n        return this.charCodeAt(this.pos);\n    }\n    nextCharCode() {\n        return this.charCodeAt(this.pos + 1);\n    }\n    nextNonWsCode(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    }\n    findWsEnd(pos) {\n        for (; pos < this.str.length; pos++) {\n            const code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    }\n    substringToPos(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    }\n    eat(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    }\n    peek() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    }\n    error(message) {\n        throw new SyntaxError(message, this.str, this.pos);\n    }\n};\n", "import { Tokenizer } from './tokenizer.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\nconst EXCLAMATIONMARK = 33;    // !\nconst NUMBERSIGN = 35;         // #\nconst AMPERSAND = 38;          // &\nconst APOSTROPHE = 39;         // '\nconst LEFTPARENTHESIS = 40;    // (\nconst RIGHTPARENTHESIS = 41;   // )\nconst ASTERISK = 42;           // *\nconst PLUSSIGN = 43;           // +\nconst COMMA = 44;              // ,\nconst HYPERMINUS = 45;         // -\nconst LESSTHANSIGN = 60;       // <\nconst GREATERTHANSIGN = 62;    // >\nconst QUESTIONMARK = 63;       // ?\nconst COMMERCIALAT = 64;       // @\nconst LEFTSQUAREBRACKET = 91;  // [\nconst RIGHTSQUAREBRACKET = 93; // ]\nconst LEFTCURLYBRACKET = 123;  // {\nconst VERTICALLINE = 124;      // |\nconst RIGHTCURLYBRACKET = 125; // }\nconst INFINITY = 8734;         // ∞\nconst NAME_CHAR = new Uint8Array(128).map((_, idx) =>\n    /[a-zA-Z0-9\\-]/.test(String.fromCharCode(idx)) ? 1 : 0\n);\nconst COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n};\n\nfunction scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(\n        tokenizer.findWsEnd(tokenizer.pos)\n    );\n}\n\nfunction scanWord(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code >= 128 || NAME_CHAR[code] === 0) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a keyword');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanNumber(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code < 48 || code > 57) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a number');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanString(tokenizer) {\n    const end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n\n    if (end === -1) {\n        tokenizer.pos = tokenizer.str.length;\n        tokenizer.error('Expect an apostrophe');\n    }\n\n    return tokenizer.substringToPos(end + 1);\n}\n\nfunction readMultiplierRange(tokenizer) {\n    let min = null;\n    let max = null;\n\n    tokenizer.eat(LEFTCURLYBRACKET);\n\n    min = scanNumber(tokenizer);\n\n    if (tokenizer.charCode() === COMMA) {\n        tokenizer.pos++;\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n            max = scanNumber(tokenizer);\n        }\n    } else {\n        max = min;\n    }\n\n    tokenizer.eat(RIGHTCURLYBRACKET);\n\n    return {\n        min: Number(min),\n        max: max ? Number(max) : 0\n    };\n}\n\nfunction readMultiplier(tokenizer) {\n    let range = null;\n    let comma = false;\n\n    switch (tokenizer.charCode()) {\n        case ASTERISK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 0\n            };\n\n            break;\n\n        case PLUSSIGN:\n            tokenizer.pos++;\n\n            range = {\n                min: 1,\n                max: 0\n            };\n\n            break;\n\n        case QUESTIONMARK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 1\n            };\n\n            break;\n\n        case NUMBERSIGN:\n            tokenizer.pos++;\n\n            comma = true;\n\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n                range = readMultiplierRange(tokenizer);\n            } else if (tokenizer.charCode() === QUESTIONMARK) {\n                // https://www.w3.org/TR/css-values-4/#component-multipliers\n                // > the # and ? multipliers may be stacked as #?\n                // In this case just treat \"#?\" as a single multiplier\n                // { min: 0, max: 0, comma: true }\n                tokenizer.pos++;\n                range = {\n                    min: 0,\n                    max: 0\n                };\n            } else {\n                range = {\n                    min: 1,\n                    max: 0\n                };\n            }\n\n            break;\n\n        case LEFTCURLYBRACKET:\n            range = readMultiplierRange(tokenizer);\n            break;\n\n        default:\n            return null;\n    }\n\n    return {\n        type: 'Multiplier',\n        comma,\n        min: range.min,\n        max: range.max,\n        term: null\n    };\n}\n\nfunction maybeMultiplied(tokenizer, node) {\n    const multiplier = readMultiplier(tokenizer);\n\n    if (multiplier !== null) {\n        multiplier.term = node;\n\n        // https://www.w3.org/TR/css-values-4/#component-multipliers\n        // > The + and # multipliers may be stacked as +#;\n        // Represent \"+#\" as nested multipliers:\n        // { ...<multiplier #>,\n        //   term: {\n        //     ...<multipler +>,\n        //     term: node\n        //   }\n        // }\n        if (tokenizer.charCode() === NUMBERSIGN &&\n            tokenizer.charCodeAt(tokenizer.pos - 1) === PLUSSIGN) {\n            return maybeMultiplied(tokenizer, multiplier);\n        }\n\n        return multiplier;\n    }\n\n    return node;\n}\n\nfunction maybeToken(tokenizer) {\n    const ch = tokenizer.peek();\n\n    if (ch === '') {\n        return null;\n    }\n\n    return {\n        type: 'Token',\n        value: ch\n    };\n}\n\nfunction readProperty(tokenizer) {\n    let name;\n\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n\n    name = scanWord(tokenizer);\n\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Property',\n        name\n    });\n}\n\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\n// 4.1. Range Restrictions and Range Definition Notation\n//\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\n// indicating a closed range between (and including) min and max.\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\nfunction readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    let min = null; // -Infinity\n    let max = null; // Infinity\n    let sign = 1;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n\n    if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n    }\n\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        min = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            min += scanWord(tokenizer);\n        }\n    }\n\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n\n    if (tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        sign = 1;\n\n        if (tokenizer.charCode() === HYPERMINUS) {\n            tokenizer.peek();\n            sign = -1;\n        }\n\n        max = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            max += scanWord(tokenizer);\n        }\n    }\n\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    return {\n        type: 'Range',\n        min,\n        max\n    };\n}\n\nfunction readType(tokenizer) {\n    let name;\n    let opts = null;\n\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n        tokenizer.pos += 2;\n        name += '()';\n    }\n\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n        scanSpaces(tokenizer);\n        opts = readTypeRange(tokenizer);\n    }\n\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Type',\n        name,\n        opts\n    });\n}\n\nfunction readKeywordOrFunction(tokenizer) {\n    const name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n        tokenizer.pos++;\n\n        return {\n            type: 'Function',\n            name\n        };\n    }\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Keyword',\n        name\n    });\n}\n\nfunction regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n        return {\n            type: 'Group',\n            terms,\n            combinator,\n            disallowEmpty: false,\n            explicit: false\n        };\n    }\n\n    let combinator;\n\n    combinators = Object.keys(combinators)\n        .sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);\n\n    while (combinators.length > 0) {\n        combinator = combinators.shift();\n\n        let i = 0;\n        let subgroupStart = 0;\n\n        for (; i < terms.length; i++) {\n            const term = terms[i];\n\n            if (term.type === 'Combinator') {\n                if (term.value === combinator) {\n                    if (subgroupStart === -1) {\n                        subgroupStart = i - 1;\n                    }\n                    terms.splice(i, 1);\n                    i--;\n                } else {\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\n                        terms.splice(\n                            subgroupStart,\n                            i - subgroupStart,\n                            createGroup(terms.slice(subgroupStart, i), combinator)\n                        );\n                        i = subgroupStart + 1;\n                    }\n                    subgroupStart = -1;\n                }\n            }\n        }\n\n        if (subgroupStart !== -1 && combinators.length) {\n            terms.splice(\n                subgroupStart,\n                i - subgroupStart,\n                createGroup(terms.slice(subgroupStart, i), combinator)\n            );\n        }\n    }\n\n    return combinator;\n}\n\nfunction readImplicitGroup(tokenizer) {\n    const terms = [];\n    const combinators = {};\n    let token;\n    let prevToken = null;\n    let prevTokenPos = tokenizer.pos;\n\n    while (token = peek(tokenizer)) {\n        if (token.type !== 'Spaces') {\n            if (token.type === 'Combinator') {\n                // check for combinator in group beginning and double combinator sequence\n                if (prevToken === null || prevToken.type === 'Combinator') {\n                    tokenizer.pos = prevTokenPos;\n                    tokenizer.error('Unexpected combinator');\n                }\n\n                combinators[token.value] = true;\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n                combinators[' '] = true;  // a b\n                terms.push({\n                    type: 'Combinator',\n                    value: ' '\n                });\n            }\n\n            terms.push(token);\n            prevToken = token;\n            prevTokenPos = tokenizer.pos;\n        }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n        tokenizer.pos -= prevTokenPos;\n        tokenizer.error('Unexpected combinator');\n    }\n\n    return {\n        type: 'Group',\n        terms,\n        combinator: regroupTerms(terms, combinators) || ' ',\n        disallowEmpty: false,\n        explicit: false\n    };\n}\n\nfunction readGroup(tokenizer) {\n    let result;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    result.explicit = true;\n\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n        tokenizer.pos++;\n        result.disallowEmpty = true;\n    }\n\n    return result;\n}\n\nfunction peek(tokenizer) {\n    let code = tokenizer.charCode();\n\n    if (code < 128 && NAME_CHAR[code] === 1) {\n        return readKeywordOrFunction(tokenizer);\n    }\n\n    switch (code) {\n        case RIGHTSQUAREBRACKET:\n            // don't eat, stop scan a group\n            break;\n\n        case LEFTSQUAREBRACKET:\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\n\n        case LESSTHANSIGN:\n            return tokenizer.nextCharCode() === APOSTROPHE\n                ? readProperty(tokenizer)\n                : readType(tokenizer);\n\n        case VERTICALLINE:\n            return {\n                type: 'Combinator',\n                value: tokenizer.substringToPos(\n                    tokenizer.pos + (tokenizer.nextCharCode() === VERTICALLINE ? 2 : 1)\n                )\n            };\n\n        case AMPERSAND:\n            tokenizer.pos++;\n            tokenizer.eat(AMPERSAND);\n\n            return {\n                type: 'Combinator',\n                value: '&&'\n            };\n\n        case COMMA:\n            tokenizer.pos++;\n            return {\n                type: 'Comma'\n            };\n\n        case APOSTROPHE:\n            return maybeMultiplied(tokenizer, {\n                type: 'String',\n                value: scanString(tokenizer)\n            });\n\n        case SPACE:\n        case TAB:\n        case N:\n        case R:\n        case F:\n            return {\n                type: 'Spaces',\n                value: scanSpaces(tokenizer)\n            };\n\n        case COMMERCIALAT:\n            code = tokenizer.nextCharCode();\n\n            if (code < 128 && NAME_CHAR[code] === 1) {\n                tokenizer.pos++;\n                return {\n                    type: 'AtKeyword',\n                    name: scanWord(tokenizer)\n                };\n            }\n\n            return maybeToken(tokenizer);\n\n        case ASTERISK:\n        case PLUSSIGN:\n        case QUESTIONMARK:\n        case NUMBERSIGN:\n        case EXCLAMATIONMARK:\n            // prohibited tokens (used as a multiplier start)\n            break;\n\n        case LEFTCURLYBRACKET:\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n            // check next char isn't a number, because it's likely a disjoined multiplier\n            code = tokenizer.nextCharCode();\n\n            if (code < 48 || code > 57) {\n                return maybeToken(tokenizer);\n            }\n\n            break;\n\n        default:\n            return maybeToken(tokenizer);\n    }\n}\n\nexport function parse(source) {\n    const tokenizer = new Tokenizer(source);\n    const result = readImplicitGroup(tokenizer);\n\n    if (tokenizer.pos !== source.length) {\n        tokenizer.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n        return result.terms[0];\n    }\n\n    return result;\n};\n", "const noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nexport function walk(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    let enter = noop;\n    let leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n", "import { tokenize } from '../tokenizer/index.js';\n\nconst astToTokens = {\n    decorator(handlers) {\n        const tokens = [];\n        let curNode = null;\n\n        return {\n            ...handlers,\n            node(node) {\n                const tmp = curNode;\n                curNode = node;\n                handlers.node.call(this, node);\n                curNode = tmp;\n            },\n            emit(value, type, auto) {\n                tokens.push({\n                    type,\n                    value,\n                    node: auto ? null : curNode\n                });\n            },\n            result() {\n                return tokens;\n            }\n        };\n    }\n};\n\nfunction stringToTokens(str) {\n    const tokens = [];\n\n    tokenize(str, (type, start, end) =>\n        tokens.push({\n            type,\n            value: str.slice(start, end),\n            node: null\n        })\n    );\n\n    return tokens;\n}\n\nexport default function(value, syntax) {\n    if (typeof value === 'string') {\n        return stringToTokens(value);\n    }\n\n    return syntax.generate(value, astToTokens);\n};\n", "import { parse } from '../definition-syntax/parse.js';\n\nexport const MATCH = { type: 'Match' };\nexport const MISMATCH = { type: 'Mismatch' };\nexport const DISALLOW_EMPTY = { type: 'DisallowEmpty' };\n\nconst LEFTPARENTHESIS = 40;  // (\nconst RIGHTPARENTHESIS = 41; // )\n\nfunction createCondition(match, thenBranch, elseBranch) {\n    // reduce node count\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\n        return match;\n    }\n\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\n        return match;\n    }\n\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\n        thenBranch = match.then;\n        match = match.match;\n    }\n\n    return {\n        type: 'If',\n        match,\n        then: thenBranch,\n        else: elseBranch\n    };\n}\n\nfunction isFunctionType(name) {\n    return (\n        name.length > 2 &&\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\n    );\n}\n\nfunction isEnumCapatible(term) {\n    return (\n        term.type === 'Keyword' ||\n        term.type === 'AtKeyword' ||\n        term.type === 'Function' ||\n        term.type === 'Type' && isFunctionType(term.name)\n    );\n}\n\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\n    switch (combinator) {\n        case ' ': {\n            // Juxtaposing components means that all of them must occur, in the given order.\n            //\n            // a b c\n            // =\n            // match a\n            //   then match b\n            //     then match c\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            //   else MISMATCH\n            let result = MATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n\n                result = createCondition(\n                    term,\n                    result,\n                    MISMATCH\n                );\n            };\n\n            return result;\n        }\n\n        case '|': {\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\n            //\n            // a | b | c\n            // =\n            // match a\n            //   then MATCH\n            //   else match b\n            //     then MATCH\n            //     else match c\n            //       then MATCH\n            //       else MISMATCH\n\n            let result = MISMATCH;\n            let map = null;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                let term = terms[i];\n\n                // reduce sequence of keywords into a Enum\n                if (isEnumCapatible(term)) {\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\n                        map = Object.create(null);\n                        result = createCondition(\n                            {\n                                type: 'Enum',\n                                map\n                            },\n                            MATCH,\n                            result\n                        );\n                    }\n\n                    if (map !== null) {\n                        const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\n                        if (key in map === false) {\n                            map[key] = term;\n                            continue;\n                        }\n                    }\n                }\n\n                map = null;\n\n                // create a new conditonal node\n                result = createCondition(\n                    term,\n                    MATCH,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '&&': {\n            // A double ampersand (&&) separates two or more components,\n            // all of which must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since &&-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: true\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a && b && c\n            // =\n            // match a\n            //   then [b && c]\n            //   else match b\n            //     then [a && c]\n            //     else match c\n            //       then [a && b]\n            //       else MISMATCH\n            //\n            // a && b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MISMATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            let result = MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        false\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '||': {\n            // A double bar (||) separates two or more options:\n            // one or more of them must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since ||-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: false\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a || b || c\n            // =\n            // match a\n            //   then [b || c]\n            //   else match b\n            //     then [a || c]\n            //     else match c\n            //       then [a || b]\n            //       else MISMATCH\n            //\n            // a || b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MATCH\n            //     else MISMATCH\n            let result = atLeastOneTermMatched ? MATCH : MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        true\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n    }\n}\n\nfunction buildMultiplierMatchGraph(node) {\n    let result = MATCH;\n    let matchTerm = buildMatchGraphInternal(node.term);\n\n    if (node.max === 0) {\n        // disable repeating of empty match to prevent infinite loop\n        matchTerm = createCondition(\n            matchTerm,\n            DISALLOW_EMPTY,\n            MISMATCH\n        );\n\n        // an occurrence count is not limited, make a cycle;\n        // to collect more terms on each following matching mismatch\n        result = createCondition(\n            matchTerm,\n            null, // will be a loop\n            MISMATCH\n        );\n\n        result.then = createCondition(\n            MATCH,\n            MATCH,\n            result // make a loop\n        );\n\n        if (node.comma) {\n            result.then.else = createCondition(\n                { type: 'Comma', syntax: node },\n                result,\n                MISMATCH\n            );\n        }\n    } else {\n        // create a match node chain for [min .. max] interval with optional matches\n        for (let i = node.min || 1; i <= node.max; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                createCondition(\n                    MATCH,\n                    MATCH,\n                    result\n                ),\n                MISMATCH\n            );\n        }\n    }\n\n    if (node.min === 0) {\n        // allow zero match\n        result = createCondition(\n            MATCH,\n            MATCH,\n            result\n        );\n    } else {\n        // create a match node chain to collect [0 ... min - 1] required matches\n        for (let i = 0; i < node.min - 1; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                result,\n                MISMATCH\n            );\n        }\n    }\n\n    return result;\n}\n\nfunction buildMatchGraphInternal(node) {\n    if (typeof node === 'function') {\n        return {\n            type: 'Generic',\n            fn: node\n        };\n    }\n\n    switch (node.type) {\n        case 'Group': {\n            let result = buildGroupMatchGraph(\n                node.combinator,\n                node.terms.map(buildMatchGraphInternal),\n                false\n            );\n\n            if (node.disallowEmpty) {\n                result = createCondition(\n                    result,\n                    DISALLOW_EMPTY,\n                    MISMATCH\n                );\n            }\n\n            return result;\n        }\n\n        case 'Multiplier':\n            return buildMultiplierMatchGraph(node);\n\n        case 'Type':\n        case 'Property':\n            return {\n                type: node.type,\n                name: node.name,\n                syntax: node\n            };\n\n        case 'Keyword':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'AtKeyword':\n            return {\n                type: node.type,\n                name: '@' + node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'Function':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase() + '(',\n                syntax: node\n            };\n\n        case 'String':\n            // convert a one char length String to a Token\n            if (node.value.length === 3) {\n                return {\n                    type: 'Token',\n                    value: node.value.charAt(1),\n                    syntax: node\n                };\n            }\n\n            // otherwise use it as is\n            return {\n                type: node.type,\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\n                syntax: node\n            };\n\n        case 'Token':\n            return {\n                type: node.type,\n                value: node.value,\n                syntax: node\n            };\n\n        case 'Comma':\n            return {\n                type: node.type,\n                syntax: node\n            };\n\n        default:\n            throw new Error('Unknown node type:', node.type);\n    }\n}\n\nexport function buildMatchGraph(syntaxTree, ref) {\n    if (typeof syntaxTree === 'string') {\n        syntaxTree = parse(syntaxTree);\n    }\n\n    return {\n        type: 'MatchGraph',\n        match: buildMatchGraphInternal(syntaxTree),\n        syntax: ref || null,\n        source: syntaxTree\n    };\n}\n", "import { MATCH, MISMATCH, DISALLOW_EMPTY } from './match-graph.js';\nimport * as TYPE from '../tokenizer/types.js';\n\nconst { hasOwnProperty } = Object.prototype;\nconst STUB = 0;\nconst TOKEN = 1;\nconst OPEN_SYNTAX = 2;\nconst CLOSE_SYNTAX = 3;\n\nconst EXIT_REASON_MATCH = 'Match';\nconst EXIT_REASON_MISMATCH = 'Mismatch';\nconst EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\n\nconst ITERATION_LIMIT = 15000;\nexport let totalIterationCount = 0;\n\nfunction reverseList(list) {\n    let prev = null;\n    let next = null;\n    let item = list;\n\n    while (item !== null) {\n        next = item.prev;\n        item.prev = prev;\n        prev = item;\n        item = next;\n    }\n\n    return prev;\n}\n\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\n    if (testStr.length !== referenceStr.length) {\n        return false;\n    }\n\n    for (let i = 0; i < testStr.length; i++) {\n        const referenceCode = referenceStr.charCodeAt(i);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isContextEdgeDelim(token) {\n    if (token.type !== TYPE.Delim) {\n        return false;\n    }\n\n    // Fix matching for unicode-range: U+30??, U+FF00-FF9F\n    // Probably we need to check out previous match instead\n    return token.value !== '?';\n}\n\nfunction isCommaContextStart(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.Comma ||\n        token.type === TYPE.Function ||\n        token.type === TYPE.LeftParenthesis ||\n        token.type === TYPE.LeftSquareBracket ||\n        token.type === TYPE.LeftCurlyBracket ||\n        isContextEdgeDelim(token)\n    );\n}\n\nfunction isCommaContextEnd(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.RightParenthesis ||\n        token.type === TYPE.RightSquareBracket ||\n        token.type === TYPE.RightCurlyBracket ||\n        (token.type === TYPE.Delim && token.value === '/')\n    );\n}\n\nfunction internalMatch(tokens, state, syntaxes) {\n    function moveToNextToken() {\n        do {\n            tokenIndex++;\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\n    }\n\n    function getNextToken(offset) {\n        const nextIndex = tokenIndex + offset;\n\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\n    }\n\n    function stateSnapshotFromSyntax(nextState, prev) {\n        return {\n            nextState,\n            matchStack,\n            syntaxStack,\n            thenStack,\n            tokenIndex,\n            prev\n        };\n    }\n\n    function pushThenStack(nextState) {\n        thenStack = {\n            nextState,\n            matchStack,\n            syntaxStack,\n            prev: thenStack\n        };\n    }\n\n    function pushElseStack(nextState) {\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\n    }\n\n    function addTokenToMatch() {\n        matchStack = {\n            type: TOKEN,\n            syntax: state.syntax,\n            token,\n            prev: matchStack\n        };\n\n        moveToNextToken();\n        syntaxStash = null;\n\n        if (tokenIndex > longestMatch) {\n            longestMatch = tokenIndex;\n        }\n    }\n\n    function openSyntax() {\n        syntaxStack = {\n            syntax: state.syntax,\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\n            prev: syntaxStack\n        };\n\n        matchStack = {\n            type: OPEN_SYNTAX,\n            syntax: state.syntax,\n            token: matchStack.token,\n            prev: matchStack\n        };\n    }\n\n    function closeSyntax() {\n        if (matchStack.type === OPEN_SYNTAX) {\n            matchStack = matchStack.prev;\n        } else {\n            matchStack = {\n                type: CLOSE_SYNTAX,\n                syntax: syntaxStack.syntax,\n                token: matchStack.token,\n                prev: matchStack\n            };\n        }\n\n        syntaxStack = syntaxStack.prev;\n    }\n\n    let syntaxStack = null;\n    let thenStack = null;\n    let elseStack = null;\n\n    // null – stashing allowed, nothing stashed\n    // false – stashing disabled, nothing stashed\n    // anithing else – fail stashable syntaxes, some syntax stashed\n    let syntaxStash = null;\n\n    let iterationCount = 0; // count iterations and prevent infinite loop\n    let exitReason = null;\n\n    let token = null;\n    let tokenIndex = -1;\n    let longestMatch = 0;\n    let matchStack = {\n        type: STUB,\n        syntax: null,\n        token: null,\n        prev: null\n    };\n\n    moveToNextToken();\n\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\n        // function mapList(list, fn) {\n        //     const result = [];\n        //     while (list) {\n        //         result.unshift(fn(list));\n        //         list = list.prev;\n        //     }\n        //     return result;\n        // }\n        // console.log('--\\n',\n        //     '#' + iterationCount,\n        //     require('util').inspect({\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\n        //         token: token && token.value,\n        //         tokenIndex,\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\n        //     }, { depth: null })\n        // );\n        switch (state.type) {\n            case 'Match':\n                if (thenStack === null) {\n                    // turn to MISMATCH when some tokens left unmatched\n                    if (token !== null) {\n                        // doesn't mismatch if just one token left and it's an IE hack\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\n                            state = MISMATCH;\n                            break;\n                        }\n                    }\n\n                    // break the main loop, return a result - MATCH\n                    exitReason = EXIT_REASON_MATCH;\n                    break;\n                }\n\n                // go to next syntax (`then` branch)\n                state = thenStack.nextState;\n\n                // check match is not empty\n                if (state === DISALLOW_EMPTY) {\n                    if (thenStack.matchStack === matchStack) {\n                        state = MISMATCH;\n                        break;\n                    } else {\n                        state = MATCH;\n                    }\n                }\n\n                // close syntax if needed\n                while (thenStack.syntaxStack !== syntaxStack) {\n                    closeSyntax();\n                }\n\n                // pop stack\n                thenStack = thenStack.prev;\n                break;\n\n            case 'Mismatch':\n                // when some syntax is stashed\n                if (syntaxStash !== null && syntaxStash !== false) {\n                    // there is no else branches or a branch reduce match stack\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\n                        // restore state from the stash\n                        elseStack = syntaxStash;\n                        syntaxStash = false; // disable stashing\n                    }\n                } else if (elseStack === null) {\n                    // no else branches -> break the main loop\n                    // return a result - MISMATCH\n                    exitReason = EXIT_REASON_MISMATCH;\n                    break;\n                }\n\n                // go to next syntax (`else` branch)\n                state = elseStack.nextState;\n\n                // restore all the rest stack states\n                thenStack = elseStack.thenStack;\n                syntaxStack = elseStack.syntaxStack;\n                matchStack = elseStack.matchStack;\n                tokenIndex = elseStack.tokenIndex;\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n\n                // pop stack\n                elseStack = elseStack.prev;\n                break;\n\n            case 'MatchGraph':\n                state = state.match;\n                break;\n\n            case 'If':\n                // IMPORTANT: else stack push must go first,\n                // since it stores the state of thenStack before changes\n                if (state.else !== MISMATCH) {\n                    pushElseStack(state.else);\n                }\n\n                if (state.then !== MATCH) {\n                    pushThenStack(state.then);\n                }\n\n                state = state.match;\n                break;\n\n            case 'MatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state,\n                    index: 0,\n                    mask: 0\n                };\n                break;\n\n            case 'MatchOnceBuffer': {\n                const terms = state.syntax.terms;\n\n                if (state.index === terms.length) {\n                    // no matches at all or it's required all terms to be matched\n                    if (state.mask === 0 || state.syntax.all) {\n                        state = MISMATCH;\n                        break;\n                    }\n\n                    // a partial match is ok\n                    state = MATCH;\n                    break;\n                }\n\n                // all terms are matched\n                if (state.mask === (1 << terms.length) - 1) {\n                    state = MATCH;\n                    break;\n                }\n\n                for (; state.index < terms.length; state.index++) {\n                    const matchFlag = 1 << state.index;\n\n                    if ((state.mask & matchFlag) === 0) {\n                        // IMPORTANT: else stack push must go first,\n                        // since it stores the state of thenStack before changes\n                        pushElseStack(state);\n                        pushThenStack({\n                            type: 'AddMatchOnce',\n                            syntax: state.syntax,\n                            mask: state.mask | matchFlag\n                        });\n\n                        // match\n                        state = terms[state.index++];\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case 'AddMatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state.syntax,\n                    index: 0,\n                    mask: state.mask\n                };\n                break;\n\n            case 'Enum':\n                if (token !== null) {\n                    let name = token.value.toLowerCase();\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (name.indexOf('\\\\') !== -1) {\n                        name = name.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (hasOwnProperty.call(state.map, name)) {\n                        state = state.map[name];\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Generic': {\n                const opts = syntaxStack !== null ? syntaxStack.opts : null;\n                const lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\n\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n            }\n\n            case 'Type':\n            case 'Property': {\n                const syntaxDict = state.type === 'Type' ? 'types' : 'properties';\n                const dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\n\n                if (!dictSyntax || !dictSyntax.match) {\n                    throw new Error(\n                        'Bad syntax reference: ' +\n                        (state.type === 'Type'\n                            ? '<' + state.name + '>'\n                            : '<\\'' + state.name + '\\'>')\n                    );\n                }\n\n                // stash a syntax for types with low priority\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\n                    const lowPriorityMatching =\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\n                        // can only claim the keyword if no other unfulfilled production can claim it.\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\n\n                        // https://drafts.csswg.org/css-values-4/#lengths\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\n                        // it must parse as a <number>\n                        (state.name === 'length' && token.value === '0');\n\n                    if (lowPriorityMatching) {\n                        if (syntaxStash === null) {\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\n                        }\n\n                        state = MISMATCH;\n                        break;\n                    }\n                }\n\n                openSyntax();\n                state = dictSyntax.match;\n                break;\n            }\n\n            case 'Keyword': {\n                const name = state.name;\n\n                if (token !== null) {\n                    let keywordName = token.value;\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (keywordName.indexOf('\\\\') !== -1) {\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\n                        addTokenToMatch();\n                        state = MATCH;\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n            }\n\n            case 'AtKeyword':\n            case 'Function':\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Token':\n                if (token !== null && token.value === state.value) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Comma':\n                if (token !== null && token.type === TYPE.Comma) {\n                    if (isCommaContextStart(matchStack.token)) {\n                        state = MISMATCH;\n                    } else {\n                        addTokenToMatch();\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\n                    }\n                } else {\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\n                }\n\n                break;\n\n            case 'String':\n                let string = '';\n                let lastTokenIndex = tokenIndex;\n\n                for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\n                    string += tokens[lastTokenIndex].value;\n                }\n\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n\n            default:\n                throw new Error('Unknown node type: ' + state.type);\n        }\n    }\n\n    totalIterationCount += iterationCount;\n\n    switch (exitReason) {\n        case null:\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\n            matchStack = null;\n            break;\n\n        case EXIT_REASON_MATCH:\n            while (syntaxStack !== null) {\n                closeSyntax();\n            }\n            break;\n\n        default:\n            matchStack = null;\n    }\n\n    return {\n        tokens,\n        reason: exitReason,\n        iterations: iterationCount,\n        match: matchStack,\n        longestMatch\n    };\n}\n\nexport function matchAsList(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match !== null) {\n        let item = reverseList(matchResult.match).prev;\n\n        matchResult.match = [];\n\n        while (item !== null) {\n            switch (item.type) {\n                case OPEN_SYNTAX:\n                case CLOSE_SYNTAX:\n                    matchResult.match.push({\n                        type: item.type,\n                        syntax: item.syntax\n                    });\n                    break;\n\n                default:\n                    matchResult.match.push({\n                        token: item.token.value,\n                        node: item.token.node\n                    });\n                    break;\n            }\n\n            item = item.prev;\n        }\n    }\n\n    return matchResult;\n}\n\nexport function matchAsTree(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match === null) {\n        return matchResult;\n    }\n\n    let item = matchResult.match;\n    let host = matchResult.match = {\n        syntax: matchGraph.syntax || null,\n        match: []\n    };\n    const hostStack = [host];\n\n    // revert a list and start with 2nd item since 1st is a stub item\n    item = reverseList(item).prev;\n\n    // build a tree\n    while (item !== null) {\n        switch (item.type) {\n            case OPEN_SYNTAX:\n                host.match.push(host = {\n                    syntax: item.syntax,\n                    match: []\n                });\n                hostStack.push(host);\n                break;\n\n            case CLOSE_SYNTAX:\n                hostStack.pop();\n                host = hostStack[hostStack.length - 1];\n                break;\n\n            default:\n                host.match.push({\n                    syntax: item.syntax || null,\n                    token: item.token.value,\n                    node: item.token.node\n                });\n        }\n\n        item = item.prev;\n    }\n\n    return matchResult;\n}\n", "export function getTrace(node) {\n    function shouldPutToTrace(syntax) {\n        if (syntax === null) {\n            return false;\n        }\n\n        return (\n            syntax.type === 'Type' ||\n            syntax.type === 'Property' ||\n            syntax.type === 'Keyword'\n        );\n    }\n\n    function hasMatch(matchNode) {\n        if (Array.isArray(matchNode.match)) {\n            // use for-loop for better perfomance\n            for (let i = 0; i < matchNode.match.length; i++) {\n                if (hasMatch(matchNode.match[i])) {\n                    if (shouldPutToTrace(matchNode.syntax)) {\n                        result.unshift(matchNode.syntax);\n                    }\n\n                    return true;\n                }\n            }\n        } else if (matchNode.node === node) {\n            result = shouldPutToTrace(matchNode.syntax)\n                ? [matchNode.syntax]\n                : [];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    let result = null;\n\n    if (this.matched !== null) {\n        hasMatch(this.matched);\n    }\n\n    return result;\n}\n\nexport function isType(node, type) {\n    return testNode(this, node, match => match.type === 'Type' && match.name === type);\n}\n\nexport function isProperty(node, property) {\n    return testNode(this, node, match => match.type === 'Property' && match.name === property);\n}\n\nexport function isKeyword(node) {\n    return testNode(this, node, match => match.type === 'Keyword');\n}\n\nfunction testNode(match, node, fn) {\n    const trace = getTrace.call(match, node);\n\n    if (trace === null) {\n        return false;\n    }\n\n    return trace.some(fn);\n}\n", "import { List } from '../utils/List.js';\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nexport function matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            const start = getFirstMatchNode(matchNode);\n            const end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    const nodes = new List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    const fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n", "import { List } from '../utils/List.js';\n\nconst { hasOwnProperty } = Object.prototype;\n\nfunction isValidNumber(value) {\n    // Number.isInteger(value) && value >= 0\n    return (\n        typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value &&\n        value >= 0\n    );\n}\n\nfunction isValidLocation(loc) {\n    return (\n        Boolean(loc) &&\n        isValidNumber(loc.offset) &&\n        isValidNumber(loc.line) &&\n        isValidNumber(loc.column)\n    );\n}\n\nfunction createNodeStructureChecker(type, fields) {\n    return function checkNode(node, warn) {\n        if (!node || node.constructor !== Object) {\n            return warn(node, 'Type of node should be an Object');\n        }\n\n        for (let key in node) {\n            let valid = true;\n\n            if (hasOwnProperty.call(node, key) === false) {\n                continue;\n            }\n\n            if (key === 'type') {\n                if (node.type !== type) {\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\n                }\n            } else if (key === 'loc') {\n                if (node.loc === null) {\n                    continue;\n                } else if (node.loc && node.loc.constructor === Object) {\n                    if (typeof node.loc.source !== 'string') {\n                        key += '.source';\n                    } else if (!isValidLocation(node.loc.start)) {\n                        key += '.start';\n                    } else if (!isValidLocation(node.loc.end)) {\n                        key += '.end';\n                    } else {\n                        continue;\n                    }\n                }\n\n                valid = false;\n            } else if (fields.hasOwnProperty(key)) {\n                valid = false;\n\n                for (let i = 0; !valid && i < fields[key].length; i++) {\n                    const fieldType = fields[key][i];\n\n                    switch (fieldType) {\n                        case String:\n                            valid = typeof node[key] === 'string';\n                            break;\n\n                        case Boolean:\n                            valid = typeof node[key] === 'boolean';\n                            break;\n\n                        case null:\n                            valid = node[key] === null;\n                            break;\n\n                        default:\n                            if (typeof fieldType === 'string') {\n                                valid = node[key] && node[key].type === fieldType;\n                            } else if (Array.isArray(fieldType)) {\n                                valid = node[key] instanceof List;\n                            }\n                    }\n                }\n            } else {\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\n            }\n\n            if (!valid) {\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\n            }\n        }\n\n        for (const key in fields) {\n            if (hasOwnProperty.call(fields, key) &&\n                hasOwnProperty.call(node, key) === false) {\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\n            }\n        }\n    };\n}\n\nfunction processStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const fields = {\n        type: String,\n        loc: true\n    };\n    const docs = {\n        type: '\"' + name + '\"'\n    };\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        const docsTypes = [];\n        const fieldTypes = fields[key] = Array.isArray(structure[key])\n            ? structure[key].slice()\n            : [structure[key]];\n\n        for (let i = 0; i < fieldTypes.length; i++) {\n            const fieldType = fieldTypes[i];\n            if (fieldType === String || fieldType === Boolean) {\n                docsTypes.push(fieldType.name);\n            } else if (fieldType === null) {\n                docsTypes.push('null');\n            } else if (typeof fieldType === 'string') {\n                docsTypes.push('<' + fieldType + '>');\n            } else if (Array.isArray(fieldType)) {\n                docsTypes.push('List'); // TODO: use type enum\n            } else {\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\n            }\n        }\n\n        docs[key] = docsTypes.join(' | ');\n    }\n\n    return {\n        docs,\n        check: createNodeStructureChecker(name, fields)\n    };\n}\n\nexport function getStructureFromConfig(config) {\n    const structure = {};\n\n    if (config.node) {\n        for (const name in config.node) {\n            if (hasOwnProperty.call(config.node, name)) {\n                const nodeType = config.node[name];\n\n                if (nodeType.structure) {\n                    structure[name] = processStructure(name, nodeType);\n                } else {\n                    throw new Error('Missed `structure` field in `' + name + '` node type definition');\n                }\n            }\n        }\n    }\n\n    return structure;\n};\n", "import { SyntaxReferenceError, SyntaxMatchError } from './error.js';\nimport * as names from '../utils/names.js';\nimport { cssWideKeywords } from './generic-const.js';\nimport { createGenericTypes } from './generic.js';\nimport * as units from './units.js';\nimport { parse, generate, walk } from '../definition-syntax/index.js';\nimport prepareTokens from './prepare-tokens.js';\nimport { buildMatchGraph } from './match-graph.js';\nimport { matchAsTree } from './match.js';\nimport * as trace from './trace.js';\nimport { matchFragments } from './search.js';\nimport { getStructureFromConfig } from './structure.js';\n\nconst cssWideKeywordsSyntax = buildMatchGraph(cssWideKeywords.join(' | '));\n\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const name in map) {\n        if (map[name].syntax) {\n            result[name] = syntaxAsAst\n                ? map[name].syntax\n                : generate(map[name].syntax, { compact });\n        }\n    }\n\n    return result;\n}\n\nfunction dumpAtruleMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const [name, atrule] of Object.entries(map)) {\n        result[name] = {\n            prelude: atrule.prelude && (\n                syntaxAsAst\n                    ? atrule.prelude.syntax\n                    : generate(atrule.prelude.syntax, { compact })\n            ),\n            descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)\n        };\n    }\n\n    return result;\n}\n\nfunction valueHasVar(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].value.toLowerCase() === 'var(') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction buildMatchResult(matched, error, iterations) {\n    return {\n        matched,\n        iterations,\n        error,\n        ...trace\n    };\n}\n\nfunction matchSyntax(lexer, syntax, value, useCssWideKeywords) {\n    const tokens = prepareTokens(value, lexer.syntax);\n    let result;\n\n    if (valueHasVar(tokens)) {\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\n    }\n\n    if (useCssWideKeywords) {\n        result = matchAsTree(tokens, lexer.cssWideKeywordsSyntax, lexer);\n    }\n\n    if (!useCssWideKeywords || !result.match) {\n        result = matchAsTree(tokens, syntax.match, lexer);\n        if (!result.match) {\n            return buildMatchResult(\n                null,\n                new SyntaxMatchError(result.reason, syntax.syntax, value, result),\n                result.iterations\n            );\n        }\n    }\n\n    return buildMatchResult(result.match, null, result.iterations);\n}\n\nexport class Lexer {\n    constructor(config, syntax, structure) {\n        this.cssWideKeywordsSyntax = cssWideKeywordsSyntax;\n        this.syntax = syntax;\n        this.generic = false;\n        this.units = { ...units };\n        this.atrules = Object.create(null);\n        this.properties = Object.create(null);\n        this.types = Object.create(null);\n        this.structure = structure || getStructureFromConfig(config);\n\n        if (config) {\n            if (config.units) {\n                for (const group of Object.keys(units)) {\n                    if (Array.isArray(config.units[group])) {\n                        this.units[group] = config.units[group];\n                    }\n                }\n            }\n\n            if (config.types) {\n                for (const name in config.types) {\n                    this.addType_(name, config.types[name]);\n                }\n            }\n\n            if (config.generic) {\n                this.generic = true;\n                for (const [name, value] of Object.entries(createGenericTypes(this.units))) {\n                    this.addType_(name, value);\n                }\n            }\n\n            if (config.atrules) {\n                for (const name in config.atrules) {\n                    this.addAtrule_(name, config.atrules[name]);\n                }\n            }\n\n            if (config.properties) {\n                for (const name in config.properties) {\n                    this.addProperty_(name, config.properties[name]);\n                }\n            }\n        }\n    }\n\n    checkStructure(ast) {\n        function collectWarning(node, message) {\n            warns.push({ node, message });\n        }\n\n        const structure = this.structure;\n        const warns = [];\n\n        this.syntax.walk(ast, function(node) {\n            if (structure.hasOwnProperty(node.type)) {\n                structure[node.type].check(node, collectWarning);\n            } else {\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\n            }\n        });\n\n        return warns.length ? warns : false;\n    }\n\n    createDescriptor(syntax, type, name, parent = null) {\n        const ref = {\n            type,\n            name\n        };\n        const descriptor = {\n            type,\n            name,\n            parent,\n            serializable: typeof syntax === 'string' || (syntax && typeof syntax.type === 'string'),\n            syntax: null,\n            match: null\n        };\n\n        if (typeof syntax === 'function') {\n            descriptor.match = buildMatchGraph(syntax, ref);\n        } else {\n            if (typeof syntax === 'string') {\n                // lazy parsing on first access\n                Object.defineProperty(descriptor, 'syntax', {\n                    get() {\n                        Object.defineProperty(descriptor, 'syntax', {\n                            value: parse(syntax)\n                        });\n\n                        return descriptor.syntax;\n                    }\n                });\n            } else {\n                descriptor.syntax = syntax;\n            }\n\n            // lazy graph build on first access\n            Object.defineProperty(descriptor, 'match', {\n                get() {\n                    Object.defineProperty(descriptor, 'match', {\n                        value: buildMatchGraph(descriptor.syntax, ref)\n                    });\n\n                    return descriptor.match;\n                }\n            });\n        }\n\n        return descriptor;\n    }\n    addAtrule_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.atrules[name] = {\n            type: 'Atrule',\n            name: name,\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\n            descriptors: syntax.descriptors\n                ? Object.keys(syntax.descriptors).reduce(\n                    (map, descName) => {\n                        map[descName] = this.createDescriptor(syntax.descriptors[descName], 'AtruleDescriptor', descName, name);\n                        return map;\n                    },\n                    Object.create(null)\n                )\n                : null\n        };\n    }\n    addProperty_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\n    }\n    addType_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\n    }\n\n    checkAtruleName(atruleName) {\n        if (!this.getAtrule(atruleName)) {\n            return new SyntaxReferenceError('Unknown at-rule', '@' + atruleName);\n        }\n    }\n    checkAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude && prelude) {\n            return new SyntaxError('At-rule `@' + atruleName + '` should not contain a prelude');\n        }\n\n        if (atrule.prelude && !prelude) {\n            if (!matchSyntax(this, atrule.prelude, '', false).matched) {\n                return new SyntaxError('At-rule `@' + atruleName + '` should contain a prelude');\n            }\n        }\n    }\n    checkAtruleDescriptorName(atruleName, descriptorName) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        if (!atrule.descriptors) {\n            return new SyntaxError('At-rule `@' + atruleName + '` has no known descriptors');\n        }\n\n        if (!atrule.descriptors[descriptor.name] &&\n            !atrule.descriptors[descriptor.basename]) {\n            return new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName);\n        }\n    }\n    checkPropertyName(propertyName) {\n        if (!this.getProperty(propertyName)) {\n            return new SyntaxReferenceError('Unknown property', propertyName);\n        }\n    }\n\n    matchAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtrulePrelude(atruleName, prelude);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude) {\n            return buildMatchResult(null, null);\n        }\n\n        return matchSyntax(this, atrule.prelude, prelude || '', false);\n    }\n    matchAtruleDescriptor(atruleName, descriptorName, value) {\n        const error = this.checkAtruleDescriptorName(atruleName, descriptorName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);\n    }\n    matchDeclaration(node) {\n        if (node.type !== 'Declaration') {\n            return buildMatchResult(null, new Error('Not a Declaration node'));\n        }\n\n        return this.matchProperty(node.property, node.value);\n    }\n    matchProperty(propertyName, value) {\n        // don't match syntax for a custom property at the moment\n        if (names.property(propertyName).custom) {\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\n        }\n\n        const error = this.checkPropertyName(propertyName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        return matchSyntax(this, this.getProperty(propertyName), value, true);\n    }\n    matchType(typeName, value) {\n        const typeSyntax = this.getType(typeName);\n\n        if (!typeSyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\n        }\n\n        return matchSyntax(this, typeSyntax, value, false);\n    }\n    match(syntax, value) {\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\n        }\n\n        if (typeof syntax === 'string' || !syntax.match) {\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\n        }\n\n        return matchSyntax(this, syntax, value, false);\n    }\n\n    findValueFragments(propertyName, value, type, name) {\n        return matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\n    }\n    findDeclarationValueFragments(declaration, type, name) {\n        return matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\n    }\n    findAllFragments(ast, type, name) {\n        const result = [];\n\n        this.syntax.walk(ast, {\n            visit: 'Declaration',\n            enter: (declaration) => {\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\n            }\n        });\n\n        return result;\n    }\n\n    getAtrule(atruleName, fallbackBasename = true) {\n        const atrule = names.keyword(atruleName);\n        const atruleEntry = atrule.vendor && fallbackBasename\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\n            : this.atrules[atrule.name];\n\n        return atruleEntry || null;\n    }\n    getAtrulePrelude(atruleName, fallbackBasename = true) {\n        const atrule = this.getAtrule(atruleName, fallbackBasename);\n\n        return atrule && atrule.prelude || null;\n    }\n    getAtruleDescriptor(atruleName, name) {\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\n            ? this.atrules[atruleName].declarators[name] || null\n            : null;\n    }\n    getProperty(propertyName, fallbackBasename = true) {\n        const property = names.property(propertyName);\n        const propertyEntry = property.vendor && fallbackBasename\n            ? this.properties[property.name] || this.properties[property.basename]\n            : this.properties[property.name];\n\n        return propertyEntry || null;\n    }\n    getType(name) {\n        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;\n    }\n\n    validate() {\n        function validate(syntax, name, broken, descriptor) {\n            if (broken.has(name)) {\n                return broken.get(name);\n            }\n\n            broken.set(name, false);\n            if (descriptor.syntax !== null) {\n                walk(descriptor.syntax, function(node) {\n                    if (node.type !== 'Type' && node.type !== 'Property') {\n                        return;\n                    }\n\n                    const map = node.type === 'Type' ? syntax.types : syntax.properties;\n                    const brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\n\n                    if (!hasOwnProperty.call(map, node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\n                        broken.set(name, true);\n                    }\n                }, this);\n            }\n        }\n\n        let brokenTypes = new Map();\n        let brokenProperties = new Map();\n\n        for (const key in this.types) {\n            validate(this, key, brokenTypes, this.types[key]);\n        }\n\n        for (const key in this.properties) {\n            validate(this, key, brokenProperties, this.properties[key]);\n        }\n\n        brokenTypes = [...brokenTypes.keys()].filter(name => brokenTypes.get(name));\n        brokenProperties = [...brokenProperties.keys()].filter(name => brokenProperties.get(name));\n\n        if (brokenTypes.length || brokenProperties.length) {\n            return {\n                types: brokenTypes,\n                properties: brokenProperties\n            };\n        }\n\n        return null;\n    }\n    dump(syntaxAsAst, pretty) {\n        return {\n            generic: this.generic,\n            units: this.units,\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),\n            atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)\n        };\n    }\n    toString() {\n        return JSON.stringify(this.dump());\n    }\n};\n", "function appendOrSet(a, b) {\n    if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n        return typeof a === 'string'\n            ? a + b\n            : b.replace(/^\\s*\\|\\s*/, '');\n    }\n\n    return b || null;\n}\n\nfunction sliceProps(obj, props) {\n    const result = Object.create(null);\n\n    for (const [key, value] of Object.entries(obj)) {\n        if (value) {\n            result[key] = {};\n            for (const prop of Object.keys(value)) {\n                if (props.includes(prop)) {\n                    result[key][prop] = value[prop];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default function mix(dest, src) {\n    const result = { ...dest };\n\n    for (const [prop, value] of Object.entries(src)) {\n        switch (prop) {\n            case 'generic':\n                result[prop] = Boolean(value);\n                break;\n\n            case 'units':\n                result[prop] = { ...dest[prop] };\n                for (const [name, patch] of Object.entries(value)) {\n                    result[prop][name] = Array.isArray(patch) ? patch : [];\n                }\n                break;\n\n            case 'atrules':\n                result[prop] = { ...dest[prop] };\n\n                for (const [name, atrule] of Object.entries(value)) {\n                    const exists = result[prop][name] || {};\n                    const current = result[prop][name] = {\n                        prelude: exists.prelude || null,\n                        descriptors: {\n                            ...exists.descriptors\n                        }\n                    };\n\n                    if (!atrule) {\n                        continue;\n                    }\n\n                    current.prelude = atrule.prelude\n                        ? appendOrSet(current.prelude, atrule.prelude)\n                        : current.prelude || null;\n\n                    for (const [descriptorName, descriptorValue] of Object.entries(atrule.descriptors || {})) {\n                        current.descriptors[descriptorName] = descriptorValue\n                            ? appendOrSet(current.descriptors[descriptorName], descriptorValue)\n                            : null;\n                    }\n\n                    if (!Object.keys(current.descriptors).length) {\n                        current.descriptors = null;\n                    }\n                }\n                break;\n\n            case 'types':\n            case 'properties':\n                result[prop] = { ...dest[prop] };\n                for (const [name, syntax] of Object.entries(value)) {\n                    result[prop][name] = appendOrSet(result[prop][name], syntax);\n                }\n                break;\n\n            case 'scope':\n                result[prop] = { ...dest[prop] };\n                for (const [name, props] of Object.entries(value)) {\n                    result[prop][name] = { ...result[prop][name], ...props };\n                }\n                break;\n\n            case 'parseContext':\n                result[prop] = {\n                    ...dest[prop],\n                    ...value\n                };\n                break;\n\n            case 'atrule':\n            case 'pseudo':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['parse']) };\n                break;\n\n            case 'node':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['name', 'structure', 'parse', 'generate', 'walkContext'])\n                };\n                break;\n        }\n    }\n\n    return result;\n}\n", "import { tokenize } from '../tokenizer/index.js';\nimport { createParser } from '../parser/create.js';\nimport { createGenerator } from '../generator/create.js';\nimport { createConvertor } from '../convertor/create.js';\nimport { createWalker } from '../walker/create.js';\nimport { Lexer } from '../lexer/Lexer.js';\nimport mix from './config/mix.js';\n\nfunction createSyntax(config) {\n    const parse = createParser(config);\n    const walk = createWalker(config);\n    const generate = createGenerator(config);\n    const { fromPlainObject, toPlainObject } = createConvertor(walk);\n\n    const syntax = {\n        lexer: null,\n        createLexer: config => new Lexer(config, syntax, syntax.lexer.structure),\n\n        tokenize,\n        parse,\n        generate,\n\n        walk,\n        find: walk.find,\n        findLast: walk.findLast,\n        findAll: walk.findAll,\n\n        fromPlainObject,\n        toPlainObject,\n\n        fork(extension) {\n            const base = mix({}, config); // copy of config\n\n            return createSyntax(\n                typeof extension === 'function'\n                    ? extension(base, Object.assign)\n                    : mix(base, extension)\n            );\n        }\n    };\n\n    syntax.lexer = new Lexer({\n        generic: true,\n        units: config.units,\n        types: config.types,\n        atrules: config.atrules,\n        properties: config.properties,\n        node: config.node\n    }, syntax);\n\n    return syntax;\n};\n\nexport default config => createSyntax(mix({}, config));\n", "export default {\n    \"generic\": true,\n    \"units\": {\n        \"angle\": [\n            \"deg\",\n            \"grad\",\n            \"rad\",\n            \"turn\"\n        ],\n        \"decibel\": [\n            \"db\"\n        ],\n        \"flex\": [\n            \"fr\"\n        ],\n        \"frequency\": [\n            \"hz\",\n            \"khz\"\n        ],\n        \"length\": [\n            \"cm\",\n            \"mm\",\n            \"q\",\n            \"in\",\n            \"pt\",\n            \"pc\",\n            \"px\",\n            \"em\",\n            \"rem\",\n            \"ex\",\n            \"rex\",\n            \"cap\",\n            \"rcap\",\n            \"ch\",\n            \"rch\",\n            \"ic\",\n            \"ric\",\n            \"lh\",\n            \"rlh\",\n            \"vw\",\n            \"svw\",\n            \"lvw\",\n            \"dvw\",\n            \"vh\",\n            \"svh\",\n            \"lvh\",\n            \"dvh\",\n            \"vi\",\n            \"svi\",\n            \"lvi\",\n            \"dvi\",\n            \"vb\",\n            \"svb\",\n            \"lvb\",\n            \"dvb\",\n            \"vmin\",\n            \"svmin\",\n            \"lvmin\",\n            \"dvmin\",\n            \"vmax\",\n            \"svmax\",\n            \"lvmax\",\n            \"dvmax\",\n            \"cqw\",\n            \"cqh\",\n            \"cqi\",\n            \"cqb\",\n            \"cqmin\",\n            \"cqmax\"\n        ],\n        \"resolution\": [\n            \"dpi\",\n            \"dpcm\",\n            \"dppx\",\n            \"x\"\n        ],\n        \"semitones\": [\n            \"st\"\n        ],\n        \"time\": [\n            \"s\",\n            \"ms\"\n        ]\n    },\n    \"types\": {\n        \"abs()\": \"abs( <calc-sum> )\",\n        \"absolute-size\": \"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large\",\n        \"acos()\": \"acos( <calc-sum> )\",\n        \"alpha-value\": \"<number>|<percentage>\",\n        \"angle-percentage\": \"<angle>|<percentage>\",\n        \"angular-color-hint\": \"<angle-percentage>\",\n        \"angular-color-stop\": \"<color>&&<color-stop-angle>?\",\n        \"angular-color-stop-list\": \"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>\",\n        \"animateable-feature\": \"scroll-position|contents|<custom-ident>\",\n        \"asin()\": \"asin( <calc-sum> )\",\n        \"atan()\": \"atan( <calc-sum> )\",\n        \"atan2()\": \"atan2( <calc-sum> , <calc-sum> )\",\n        \"attachment\": \"scroll|fixed|local\",\n        \"attr()\": \"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )\",\n        \"attr-matcher\": \"['~'|'|'|'^'|'$'|'*']? '='\",\n        \"attr-modifier\": \"i|s\",\n        \"attribute-selector\": \"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'\",\n        \"auto-repeat\": \"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"auto-track-list\": \"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?\",\n        \"axis\": \"block|inline|vertical|horizontal\",\n        \"baseline-position\": \"[first|last]? baseline\",\n        \"basic-shape\": \"<inset()>|<circle()>|<ellipse()>|<polygon()>|<path()>\",\n        \"bg-image\": \"none|<image>\",\n        \"bg-layer\": \"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"bg-position\": \"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]\",\n        \"bg-size\": \"[<length-percentage>|auto]{1,2}|cover|contain\",\n        \"blur()\": \"blur( <length> )\",\n        \"blend-mode\": \"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity\",\n        \"box\": \"border-box|padding-box|content-box\",\n        \"brightness()\": \"brightness( <number-percentage> )\",\n        \"calc()\": \"calc( <calc-sum> )\",\n        \"calc-sum\": \"<calc-product> [['+'|'-'] <calc-product>]*\",\n        \"calc-product\": \"<calc-value> ['*' <calc-value>|'/' <number>]*\",\n        \"calc-value\": \"<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )\",\n        \"calc-constant\": \"e|pi|infinity|-infinity|NaN\",\n        \"cf-final-image\": \"<image>|<color>\",\n        \"cf-mixing-image\": \"<percentage>?&&<image>\",\n        \"circle()\": \"circle( [<shape-radius>]? [at <position>]? )\",\n        \"clamp()\": \"clamp( <calc-sum>#{3} )\",\n        \"class-selector\": \"'.' <ident-token>\",\n        \"clip-source\": \"<url>\",\n        \"color\": \"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<hex-color>|<named-color>|currentcolor|<deprecated-system-color>\",\n        \"color-stop\": \"<color-stop-length>|<color-stop-angle>\",\n        \"color-stop-angle\": \"<angle-percentage>{1,2}\",\n        \"color-stop-length\": \"<length-percentage>{1,2}\",\n        \"color-stop-list\": \"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>\",\n        \"combinator\": \"'>'|'+'|'~'|['||']\",\n        \"common-lig-values\": \"[common-ligatures|no-common-ligatures]\",\n        \"compat-auto\": \"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button\",\n        \"composite-style\": \"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor\",\n        \"compositing-operator\": \"add|subtract|intersect|exclude\",\n        \"compound-selector\": \"[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!\",\n        \"compound-selector-list\": \"<compound-selector>#\",\n        \"complex-selector\": \"<compound-selector> [<combinator>? <compound-selector>]*\",\n        \"complex-selector-list\": \"<complex-selector>#\",\n        \"conic-gradient()\": \"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"contextual-alt-values\": \"[contextual|no-contextual]\",\n        \"content-distribution\": \"space-between|space-around|space-evenly|stretch\",\n        \"content-list\": \"[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+\",\n        \"content-position\": \"center|start|end|flex-start|flex-end\",\n        \"content-replacement\": \"<image>\",\n        \"contrast()\": \"contrast( [<number-percentage>] )\",\n        \"cos()\": \"cos( <calc-sum> )\",\n        \"counter\": \"<counter()>|<counters()>\",\n        \"counter()\": \"counter( <counter-name> , <counter-style>? )\",\n        \"counter-name\": \"<custom-ident>\",\n        \"counter-style\": \"<counter-style-name>|symbols( )\",\n        \"counter-style-name\": \"<custom-ident>\",\n        \"counters()\": \"counters( <counter-name> , <string> , <counter-style>? )\",\n        \"cross-fade()\": \"cross-fade( <cf-mixing-image> , <cf-final-image>? )\",\n        \"cubic-bezier-timing-function\": \"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )\",\n        \"deprecated-system-color\": \"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText\",\n        \"discretionary-lig-values\": \"[discretionary-ligatures|no-discretionary-ligatures]\",\n        \"display-box\": \"contents|none\",\n        \"display-inside\": \"flow|flow-root|table|flex|grid|ruby\",\n        \"display-internal\": \"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container\",\n        \"display-legacy\": \"inline-block|inline-list-item|inline-table|inline-flex|inline-grid\",\n        \"display-listitem\": \"<display-outside>?&&[flow|flow-root]?&&list-item\",\n        \"display-outside\": \"block|inline|run-in\",\n        \"drop-shadow()\": \"drop-shadow( <length>{2,3} <color>? )\",\n        \"east-asian-variant-values\": \"[jis78|jis83|jis90|jis04|simplified|traditional]\",\n        \"east-asian-width-values\": \"[full-width|proportional-width]\",\n        \"element()\": \"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )\",\n        \"ellipse()\": \"ellipse( [<shape-radius>{2}]? [at <position>]? )\",\n        \"ending-shape\": \"circle|ellipse\",\n        \"env()\": \"env( <custom-ident> , <declaration-value>? )\",\n        \"exp()\": \"exp( <calc-sum> )\",\n        \"explicit-track-list\": \"[<line-names>? <track-size>]+ <line-names>?\",\n        \"family-name\": \"<string>|<custom-ident>+\",\n        \"feature-tag-value\": \"<string> [<integer>|on|off]?\",\n        \"feature-type\": \"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation\",\n        \"feature-value-block\": \"<feature-type> '{' <feature-value-declaration-list> '}'\",\n        \"feature-value-block-list\": \"<feature-value-block>+\",\n        \"feature-value-declaration\": \"<custom-ident> : <integer>+ ;\",\n        \"feature-value-declaration-list\": \"<feature-value-declaration>\",\n        \"feature-value-name\": \"<custom-ident>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"filter-function\": \"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>\",\n        \"filter-function-list\": \"[<filter-function>|<url>]+\",\n        \"final-bg-layer\": \"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"fixed-breadth\": \"<length-percentage>\",\n        \"fixed-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"fixed-size\": \"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )\",\n        \"font-stretch-absolute\": \"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>\",\n        \"font-variant-css21\": \"[normal|small-caps]\",\n        \"font-weight-absolute\": \"normal|bold|<number [1,1000]>\",\n        \"frequency-percentage\": \"<frequency>|<percentage>\",\n        \"general-enclosed\": \"[<function-token> <any-value> )]|( <ident> <any-value> )\",\n        \"generic-family\": \"serif|sans-serif|cursive|fantasy|monospace|-apple-system\",\n        \"generic-name\": \"serif|sans-serif|cursive|fantasy|monospace\",\n        \"geometry-box\": \"<shape-box>|fill-box|stroke-box|view-box\",\n        \"gradient\": \"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>\",\n        \"grayscale()\": \"grayscale( <number-percentage> )\",\n        \"grid-line\": \"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]\",\n        \"historical-lig-values\": \"[historical-ligatures|no-historical-ligatures]\",\n        \"hsl()\": \"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hsla()\": \"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hue\": \"<number>|<angle>\",\n        \"hue-rotate()\": \"hue-rotate( <angle> )\",\n        \"hwb()\": \"hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )\",\n        \"hypot()\": \"hypot( <calc-sum># )\",\n        \"image\": \"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>\",\n        \"image()\": \"image( <image-tags>? [<image-src>? , <color>?]! )\",\n        \"image-set()\": \"image-set( <image-set-option># )\",\n        \"image-set-option\": \"[<image>|<string>] [<resolution>||type( <string> )]\",\n        \"image-src\": \"<url>|<string>\",\n        \"image-tags\": \"ltr|rtl\",\n        \"inflexible-breadth\": \"<length-percentage>|min-content|max-content|auto\",\n        \"inset()\": \"inset( <length-percentage>{1,4} [round <'border-radius'>]? )\",\n        \"invert()\": \"invert( <number-percentage> )\",\n        \"keyframes-name\": \"<custom-ident>|<string>\",\n        \"keyframe-block\": \"<keyframe-selector># { <declaration-list> }\",\n        \"keyframe-block-list\": \"<keyframe-block>+\",\n        \"keyframe-selector\": \"from|to|<percentage>\",\n        \"lab()\": \"lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )\",\n        \"layer()\": \"layer( <layer-name> )\",\n        \"layer-name\": \"<ident> ['.' <ident>]*\",\n        \"lch()\": \"lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )\",\n        \"leader()\": \"leader( <leader-type> )\",\n        \"leader-type\": \"dotted|solid|space|<string>\",\n        \"length-percentage\": \"<length>|<percentage>\",\n        \"line-names\": \"'[' <custom-ident>* ']'\",\n        \"line-name-list\": \"[<line-names>|<name-repeat>]+\",\n        \"line-style\": \"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n        \"line-width\": \"<length>|thin|medium|thick\",\n        \"linear-color-hint\": \"<length-percentage>\",\n        \"linear-color-stop\": \"<color> <color-stop-length>?\",\n        \"linear-gradient()\": \"linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"log()\": \"log( <calc-sum> , <calc-sum>? )\",\n        \"mask-layer\": \"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>\",\n        \"mask-position\": \"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?\",\n        \"mask-reference\": \"none|<image>|<mask-source>\",\n        \"mask-source\": \"<url>\",\n        \"masking-mode\": \"alpha|luminance|match-source\",\n        \"matrix()\": \"matrix( <number>#{6} )\",\n        \"matrix3d()\": \"matrix3d( <number>#{16} )\",\n        \"max()\": \"max( <calc-sum># )\",\n        \"media-and\": \"<media-in-parens> [and <media-in-parens>]+\",\n        \"media-condition\": \"<media-not>|<media-and>|<media-or>|<media-in-parens>\",\n        \"media-condition-without-or\": \"<media-not>|<media-and>|<media-in-parens>\",\n        \"media-feature\": \"( [<mf-plain>|<mf-boolean>|<mf-range>] )\",\n        \"media-in-parens\": \"( <media-condition> )|<media-feature>|<general-enclosed>\",\n        \"media-not\": \"not <media-in-parens>\",\n        \"media-or\": \"<media-in-parens> [or <media-in-parens>]+\",\n        \"media-query\": \"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?\",\n        \"media-query-list\": \"<media-query>#\",\n        \"media-type\": \"<ident>\",\n        \"mf-boolean\": \"<mf-name>\",\n        \"mf-name\": \"<ident>\",\n        \"mf-plain\": \"<mf-name> : <mf-value>\",\n        \"mf-range\": \"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\",\n        \"mf-value\": \"<number>|<dimension>|<ident>|<ratio>\",\n        \"min()\": \"min( <calc-sum># )\",\n        \"minmax()\": \"minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )\",\n        \"mod()\": \"mod( <calc-sum> , <calc-sum> )\",\n        \"name-repeat\": \"repeat( [<integer [1,∞]>|auto-fill] , <line-names>+ )\",\n        \"named-color\": \"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|<-non-standard-color>\",\n        \"namespace-prefix\": \"<ident>\",\n        \"ns-prefix\": \"[<ident-token>|'*']? '|'\",\n        \"number-percentage\": \"<number>|<percentage>\",\n        \"numeric-figure-values\": \"[lining-nums|oldstyle-nums]\",\n        \"numeric-fraction-values\": \"[diagonal-fractions|stacked-fractions]\",\n        \"numeric-spacing-values\": \"[proportional-nums|tabular-nums]\",\n        \"nth\": \"<an-plus-b>|even|odd\",\n        \"opacity()\": \"opacity( [<number-percentage>] )\",\n        \"overflow-position\": \"unsafe|safe\",\n        \"outline-radius\": \"<length>|<percentage>\",\n        \"page-body\": \"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>\",\n        \"page-margin-box\": \"<page-margin-box-type> '{' <declaration-list> '}'\",\n        \"page-margin-box-type\": \"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom\",\n        \"page-selector-list\": \"[<page-selector>#]?\",\n        \"page-selector\": \"<pseudo-page>+|<ident> <pseudo-page>*\",\n        \"page-size\": \"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger\",\n        \"path()\": \"path( [<fill-rule> ,]? <string> )\",\n        \"paint()\": \"paint( <ident> , <declaration-value>? )\",\n        \"perspective()\": \"perspective( [<length [0,∞]>|none] )\",\n        \"polygon()\": \"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )\",\n        \"position\": \"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]\",\n        \"pow()\": \"pow( <calc-sum> , <calc-sum> )\",\n        \"pseudo-class-selector\": \"':' <ident-token>|':' <function-token> <any-value> ')'\",\n        \"pseudo-element-selector\": \"':' <pseudo-class-selector>\",\n        \"pseudo-page\": \": [left|right|first|blank]\",\n        \"quote\": \"open-quote|close-quote|no-open-quote|no-close-quote\",\n        \"radial-gradient()\": \"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"ratio\": \"<number [0,∞]> [/ <number [0,∞]>]?\",\n        \"relative-selector\": \"<combinator>? <complex-selector>\",\n        \"relative-selector-list\": \"<relative-selector>#\",\n        \"relative-size\": \"larger|smaller\",\n        \"rem()\": \"rem( <calc-sum> , <calc-sum> )\",\n        \"repeat-style\": \"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}\",\n        \"repeating-conic-gradient()\": \"repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"repeating-linear-gradient()\": \"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"repeating-radial-gradient()\": \"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"reversed-counter-name\": \"reversed( <counter-name> )\",\n        \"rgb()\": \"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )\",\n        \"rgba()\": \"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )\",\n        \"rotate()\": \"rotate( [<angle>|<zero>] )\",\n        \"rotate3d()\": \"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )\",\n        \"rotateX()\": \"rotateX( [<angle>|<zero>] )\",\n        \"rotateY()\": \"rotateY( [<angle>|<zero>] )\",\n        \"rotateZ()\": \"rotateZ( [<angle>|<zero>] )\",\n        \"round()\": \"round( <rounding-strategy>? , <calc-sum> , <calc-sum> )\",\n        \"rounding-strategy\": \"nearest|up|down|to-zero\",\n        \"saturate()\": \"saturate( <number-percentage> )\",\n        \"scale()\": \"scale( [<number>|<percentage>]#{1,2} )\",\n        \"scale3d()\": \"scale3d( [<number>|<percentage>]#{3} )\",\n        \"scaleX()\": \"scaleX( [<number>|<percentage>] )\",\n        \"scaleY()\": \"scaleY( [<number>|<percentage>] )\",\n        \"scaleZ()\": \"scaleZ( [<number>|<percentage>] )\",\n        \"scroller\": \"root|nearest\",\n        \"self-position\": \"center|start|end|self-start|self-end|flex-start|flex-end\",\n        \"shape-radius\": \"<length-percentage>|closest-side|farthest-side\",\n        \"sign()\": \"sign( <calc-sum> )\",\n        \"skew()\": \"skew( [<angle>|<zero>] , [<angle>|<zero>]? )\",\n        \"skewX()\": \"skewX( [<angle>|<zero>] )\",\n        \"skewY()\": \"skewY( [<angle>|<zero>] )\",\n        \"sepia()\": \"sepia( <number-percentage> )\",\n        \"shadow\": \"inset?&&<length>{2,4}&&<color>?\",\n        \"shadow-t\": \"[<length>{2,3}&&<color>?]\",\n        \"shape\": \"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )\",\n        \"shape-box\": \"<box>|margin-box\",\n        \"side-or-corner\": \"[left|right]||[top|bottom]\",\n        \"sin()\": \"sin( <calc-sum> )\",\n        \"single-animation\": \"<time>||<easing-function>||<time>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]\",\n        \"single-animation-direction\": \"normal|reverse|alternate|alternate-reverse\",\n        \"single-animation-fill-mode\": \"none|forwards|backwards|both\",\n        \"single-animation-iteration-count\": \"infinite|<number>\",\n        \"single-animation-play-state\": \"running|paused\",\n        \"single-animation-timeline\": \"auto|none|<timeline-name>|scroll( <axis>? <scroller>? )\",\n        \"single-transition\": \"[none|<single-transition-property>]||<time>||<easing-function>||<time>\",\n        \"single-transition-property\": \"all|<custom-ident>\",\n        \"size\": \"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}\",\n        \"sqrt()\": \"sqrt( <calc-sum> )\",\n        \"step-position\": \"jump-start|jump-end|jump-none|jump-both|start|end\",\n        \"step-timing-function\": \"step-start|step-end|steps( <integer> [, <step-position>]? )\",\n        \"subclass-selector\": \"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>\",\n        \"supports-condition\": \"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*\",\n        \"supports-in-parens\": \"( <supports-condition> )|<supports-feature>|<general-enclosed>\",\n        \"supports-feature\": \"<supports-decl>|<supports-selector-fn>\",\n        \"supports-decl\": \"( <declaration> )\",\n        \"supports-selector-fn\": \"selector( <complex-selector> )\",\n        \"symbol\": \"<string>|<image>|<custom-ident>\",\n        \"tan()\": \"tan( <calc-sum> )\",\n        \"target\": \"<target-counter()>|<target-counters()>|<target-text()>\",\n        \"target-counter()\": \"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )\",\n        \"target-counters()\": \"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )\",\n        \"target-text()\": \"target-text( [<string>|<url>] , [content|before|after|first-letter]? )\",\n        \"time-percentage\": \"<time>|<percentage>\",\n        \"timeline-name\": \"<custom-ident>|<string>\",\n        \"easing-function\": \"linear|<cubic-bezier-timing-function>|<step-timing-function>\",\n        \"track-breadth\": \"<length-percentage>|<flex>|min-content|max-content|auto\",\n        \"track-list\": \"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?\",\n        \"track-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <track-size>]+ <line-names>? )\",\n        \"track-size\": \"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )\",\n        \"transform-function\": \"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>\",\n        \"transform-list\": \"<transform-function>+\",\n        \"translate()\": \"translate( <length-percentage> , <length-percentage>? )\",\n        \"translate3d()\": \"translate3d( <length-percentage> , <length-percentage> , <length> )\",\n        \"translateX()\": \"translateX( <length-percentage> )\",\n        \"translateY()\": \"translateY( <length-percentage> )\",\n        \"translateZ()\": \"translateZ( <length> )\",\n        \"type-or-unit\": \"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%\",\n        \"type-selector\": \"<wq-name>|<ns-prefix>? '*'\",\n        \"var()\": \"var( <custom-property-name> , <declaration-value>? )\",\n        \"viewport-length\": \"auto|<length-percentage>\",\n        \"visual-box\": \"content-box|padding-box|border-box\",\n        \"wq-name\": \"<ns-prefix>? <ident-token>\",\n        \"-legacy-gradient\": \"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>\",\n        \"-legacy-linear-gradient\": \"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-repeating-linear-gradient\": \"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-linear-gradient-arguments\": \"[<angle>|<side-or-corner>]? , <color-stop-list>\",\n        \"-legacy-radial-gradient\": \"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-repeating-radial-gradient\": \"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-radial-gradient-arguments\": \"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>\",\n        \"-legacy-radial-gradient-size\": \"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover\",\n        \"-legacy-radial-gradient-shape\": \"circle|ellipse\",\n        \"-non-standard-font\": \"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body\",\n        \"-non-standard-color\": \"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text\",\n        \"-non-standard-image-rendering\": \"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast\",\n        \"-non-standard-overflow\": \"-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable\",\n        \"-non-standard-width\": \"fill-available|min-intrinsic|intrinsic|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content|-webkit-min-content|-webkit-max-content\",\n        \"-webkit-gradient()\": \"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )\",\n        \"-webkit-gradient-color-stop\": \"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )\",\n        \"-webkit-gradient-point\": \"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]\",\n        \"-webkit-gradient-radius\": \"<length>|<percentage>\",\n        \"-webkit-gradient-type\": \"linear|radial\",\n        \"-webkit-mask-box-repeat\": \"repeat|stretch|round\",\n        \"-webkit-mask-clip-style\": \"border|border-box|padding|padding-box|content|content-box|text\",\n        \"-ms-filter-function-list\": \"<-ms-filter-function>+\",\n        \"-ms-filter-function\": \"<-ms-filter-function-progid>|<-ms-filter-function-legacy>\",\n        \"-ms-filter-function-progid\": \"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]\",\n        \"-ms-filter-function-legacy\": \"<ident-token>|<function-token> <any-value>? )\",\n        \"-ms-filter\": \"<string>\",\n        \"age\": \"child|young|old\",\n        \"attr-name\": \"<wq-name>\",\n        \"attr-fallback\": \"<any-value>\",\n        \"bg-clip\": \"<box>|border|text\",\n        \"bottom\": \"<length>|auto\",\n        \"generic-voice\": \"[<age>? <gender> <integer>?]\",\n        \"gender\": \"male|female|neutral\",\n        \"left\": \"<length>|auto\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"paint\": \"none|<color>|<url> [none|<color>]?|context-fill|context-stroke\",\n        \"right\": \"<length>|auto\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"single-animation-composition\": \"replace|add|accumulate\",\n        \"svg-length\": \"<percentage>|<length>|<number>\",\n        \"svg-writing-mode\": \"lr-tb|rl-tb|tb-rl|lr|rl|tb\",\n        \"top\": \"<length>|auto\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\",\n        \"declaration\": \"<ident-token> : <declaration-value>? ['!' important]?\",\n        \"declaration-list\": \"[<declaration>? ';']* <declaration>?\",\n        \"url\": \"url( <string> <url-modifier>* )|<url-token>\",\n        \"url-modifier\": \"<ident>|<function-token> <any-value> )\",\n        \"number-zero-one\": \"<number [0,1]>\",\n        \"number-one-or-greater\": \"<number [1,∞]>\",\n        \"-non-standard-display\": \"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box\"\n    },\n    \"properties\": {\n        \"--*\": \"<declaration-value>\",\n        \"-ms-accelerator\": \"false|true\",\n        \"-ms-block-progression\": \"tb|rl|bt|lr\",\n        \"-ms-content-zoom-chaining\": \"none|chained\",\n        \"-ms-content-zooming\": \"none|zoom\",\n        \"-ms-content-zoom-limit\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n        \"-ms-content-zoom-limit-max\": \"<percentage>\",\n        \"-ms-content-zoom-limit-min\": \"<percentage>\",\n        \"-ms-content-zoom-snap\": \"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>\",\n        \"-ms-content-zoom-snap-points\": \"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )\",\n        \"-ms-content-zoom-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-filter\": \"<string>\",\n        \"-ms-flow-from\": \"[none|<custom-ident>]#\",\n        \"-ms-flow-into\": \"[none|<custom-ident>]#\",\n        \"-ms-grid-columns\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-grid-rows\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-high-contrast-adjust\": \"auto|none\",\n        \"-ms-hyphenate-limit-chars\": \"auto|<integer>{1,3}\",\n        \"-ms-hyphenate-limit-lines\": \"no-limit|<integer>\",\n        \"-ms-hyphenate-limit-zone\": \"<percentage>|<length>\",\n        \"-ms-ime-align\": \"auto|after\",\n        \"-ms-overflow-style\": \"auto|none|scrollbar|-ms-autohiding-scrollbar\",\n        \"-ms-scrollbar-3dlight-color\": \"<color>\",\n        \"-ms-scrollbar-arrow-color\": \"<color>\",\n        \"-ms-scrollbar-base-color\": \"<color>\",\n        \"-ms-scrollbar-darkshadow-color\": \"<color>\",\n        \"-ms-scrollbar-face-color\": \"<color>\",\n        \"-ms-scrollbar-highlight-color\": \"<color>\",\n        \"-ms-scrollbar-shadow-color\": \"<color>\",\n        \"-ms-scrollbar-track-color\": \"<color>\",\n        \"-ms-scroll-chaining\": \"chained|none\",\n        \"-ms-scroll-limit\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n        \"-ms-scroll-limit-x-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-x-min\": \"<length>\",\n        \"-ms-scroll-limit-y-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-y-min\": \"<length>\",\n        \"-ms-scroll-rails\": \"none|railed\",\n        \"-ms-scroll-snap-points-x\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-points-y\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-scroll-snap-x\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n        \"-ms-scroll-snap-y\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n        \"-ms-scroll-translation\": \"none|vertical-to-horizontal\",\n        \"-ms-text-autospace\": \"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\",\n        \"-ms-touch-select\": \"grippers|none\",\n        \"-ms-user-select\": \"none|element|text\",\n        \"-ms-wrap-flow\": \"auto|both|start|end|maximum|clear\",\n        \"-ms-wrap-margin\": \"<length>\",\n        \"-ms-wrap-through\": \"wrap|none\",\n        \"-moz-appearance\": \"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized\",\n        \"-moz-binding\": \"<url>|none\",\n        \"-moz-border-bottom-colors\": \"<color>+|none\",\n        \"-moz-border-left-colors\": \"<color>+|none\",\n        \"-moz-border-right-colors\": \"<color>+|none\",\n        \"-moz-border-top-colors\": \"<color>+|none\",\n        \"-moz-context-properties\": \"none|[fill|fill-opacity|stroke|stroke-opacity]#\",\n        \"-moz-float-edge\": \"border-box|content-box|margin-box|padding-box\",\n        \"-moz-force-broken-image-icon\": \"0|1\",\n        \"-moz-image-region\": \"<shape>|auto\",\n        \"-moz-orient\": \"inline|block|horizontal|vertical\",\n        \"-moz-outline-radius\": \"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?\",\n        \"-moz-outline-radius-bottomleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-bottomright\": \"<outline-radius>\",\n        \"-moz-outline-radius-topleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-topright\": \"<outline-radius>\",\n        \"-moz-stack-sizing\": \"ignore|stretch-to-fit\",\n        \"-moz-text-blink\": \"none|blink\",\n        \"-moz-user-focus\": \"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none\",\n        \"-moz-user-input\": \"auto|none|enabled|disabled\",\n        \"-moz-user-modify\": \"read-only|read-write|write-only\",\n        \"-moz-window-dragging\": \"drag|no-drag\",\n        \"-moz-window-shadow\": \"default|menu|tooltip|sheet|none\",\n        \"-webkit-appearance\": \"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button\",\n        \"-webkit-border-before\": \"<'border-width'>||<'border-style'>||<color>\",\n        \"-webkit-border-before-color\": \"<color>\",\n        \"-webkit-border-before-style\": \"<'border-style'>\",\n        \"-webkit-border-before-width\": \"<'border-width'>\",\n        \"-webkit-box-reflect\": \"[above|below|right|left]? <length>? <image>?\",\n        \"-webkit-line-clamp\": \"none|<integer>\",\n        \"-webkit-mask\": \"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#\",\n        \"-webkit-mask-attachment\": \"<attachment>#\",\n        \"-webkit-mask-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-mask-composite\": \"<composite-style>#\",\n        \"-webkit-mask-image\": \"<mask-reference>#\",\n        \"-webkit-mask-origin\": \"[<box>|border|padding|content]#\",\n        \"-webkit-mask-position\": \"<position>#\",\n        \"-webkit-mask-position-x\": \"[<length-percentage>|left|center|right]#\",\n        \"-webkit-mask-position-y\": \"[<length-percentage>|top|center|bottom]#\",\n        \"-webkit-mask-repeat\": \"<repeat-style>#\",\n        \"-webkit-mask-repeat-x\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-repeat-y\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-size\": \"<bg-size>#\",\n        \"-webkit-overflow-scrolling\": \"auto|touch\",\n        \"-webkit-tap-highlight-color\": \"<color>\",\n        \"-webkit-text-fill-color\": \"<color>\",\n        \"-webkit-text-stroke\": \"<length>||<color>\",\n        \"-webkit-text-stroke-color\": \"<color>\",\n        \"-webkit-text-stroke-width\": \"<length>\",\n        \"-webkit-touch-callout\": \"default|none\",\n        \"-webkit-user-modify\": \"read-only|read-write|read-write-plaintext-only\",\n        \"accent-color\": \"auto|<color>\",\n        \"align-content\": \"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>\",\n        \"align-items\": \"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]\",\n        \"align-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>\",\n        \"align-tracks\": \"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#\",\n        \"all\": \"initial|inherit|unset|revert|revert-layer\",\n        \"animation\": \"<single-animation>#\",\n        \"animation-composition\": \"<single-animation-composition>#\",\n        \"animation-delay\": \"<time>#\",\n        \"animation-direction\": \"<single-animation-direction>#\",\n        \"animation-duration\": \"<time>#\",\n        \"animation-fill-mode\": \"<single-animation-fill-mode>#\",\n        \"animation-iteration-count\": \"<single-animation-iteration-count>#\",\n        \"animation-name\": \"[none|<keyframes-name>]#\",\n        \"animation-play-state\": \"<single-animation-play-state>#\",\n        \"animation-timing-function\": \"<easing-function>#\",\n        \"animation-timeline\": \"<single-animation-timeline>#\",\n        \"appearance\": \"none|auto|textfield|menulist-button|<compat-auto>\",\n        \"aspect-ratio\": \"auto|<ratio>\",\n        \"azimuth\": \"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards\",\n        \"backdrop-filter\": \"none|<filter-function-list>\",\n        \"backface-visibility\": \"visible|hidden\",\n        \"background\": \"[<bg-layer> ,]* <final-bg-layer>\",\n        \"background-attachment\": \"<attachment>#\",\n        \"background-blend-mode\": \"<blend-mode>#\",\n        \"background-clip\": \"<bg-clip>#\",\n        \"background-color\": \"<color>\",\n        \"background-image\": \"<bg-image>#\",\n        \"background-origin\": \"<box>#\",\n        \"background-position\": \"<bg-position>#\",\n        \"background-position-x\": \"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#\",\n        \"background-position-y\": \"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#\",\n        \"background-repeat\": \"<repeat-style>#\",\n        \"background-size\": \"<bg-size>#\",\n        \"block-overflow\": \"clip|ellipsis|<string>\",\n        \"block-size\": \"<'width'>\",\n        \"border\": \"<line-width>||<line-style>||<color>\",\n        \"border-block\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-color\": \"<'border-top-color'>{1,2}\",\n        \"border-block-style\": \"<'border-top-style'>\",\n        \"border-block-width\": \"<'border-top-width'>\",\n        \"border-block-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-end-color\": \"<'border-top-color'>\",\n        \"border-block-end-style\": \"<'border-top-style'>\",\n        \"border-block-end-width\": \"<'border-top-width'>\",\n        \"border-block-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-start-color\": \"<'border-top-color'>\",\n        \"border-block-start-style\": \"<'border-top-style'>\",\n        \"border-block-start-width\": \"<'border-top-width'>\",\n        \"border-bottom\": \"<line-width>||<line-style>||<color>\",\n        \"border-bottom-color\": \"<'border-top-color'>\",\n        \"border-bottom-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-style\": \"<line-style>\",\n        \"border-bottom-width\": \"<line-width>\",\n        \"border-collapse\": \"collapse|separate\",\n        \"border-color\": \"<color>{1,4}\",\n        \"border-end-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-end-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-image\": \"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>\",\n        \"border-image-outset\": \"[<length>|<number>]{1,4}\",\n        \"border-image-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"border-image-slice\": \"<number-percentage>{1,4}&&fill?\",\n        \"border-image-source\": \"none|<image>\",\n        \"border-image-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"border-inline\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-color\": \"<'border-top-color'>{1,2}\",\n        \"border-inline-style\": \"<'border-top-style'>\",\n        \"border-inline-width\": \"<'border-top-width'>\",\n        \"border-inline-end-color\": \"<'border-top-color'>\",\n        \"border-inline-end-style\": \"<'border-top-style'>\",\n        \"border-inline-end-width\": \"<'border-top-width'>\",\n        \"border-inline-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-start-color\": \"<'border-top-color'>\",\n        \"border-inline-start-style\": \"<'border-top-style'>\",\n        \"border-inline-start-width\": \"<'border-top-width'>\",\n        \"border-left\": \"<line-width>||<line-style>||<color>\",\n        \"border-left-color\": \"<color>\",\n        \"border-left-style\": \"<line-style>\",\n        \"border-left-width\": \"<line-width>\",\n        \"border-radius\": \"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?\",\n        \"border-right\": \"<line-width>||<line-style>||<color>\",\n        \"border-right-color\": \"<color>\",\n        \"border-right-style\": \"<line-style>\",\n        \"border-right-width\": \"<line-width>\",\n        \"border-spacing\": \"<length> <length>?\",\n        \"border-start-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-start-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-style\": \"<line-style>{1,4}\",\n        \"border-top\": \"<line-width>||<line-style>||<color>\",\n        \"border-top-color\": \"<color>\",\n        \"border-top-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-style\": \"<line-style>\",\n        \"border-top-width\": \"<line-width>\",\n        \"border-width\": \"<line-width>{1,4}\",\n        \"bottom\": \"<length>|<percentage>|auto\",\n        \"box-align\": \"start|center|end|baseline|stretch\",\n        \"box-decoration-break\": \"slice|clone\",\n        \"box-direction\": \"normal|reverse|inherit\",\n        \"box-flex\": \"<number>\",\n        \"box-flex-group\": \"<integer>\",\n        \"box-lines\": \"single|multiple\",\n        \"box-ordinal-group\": \"<integer>\",\n        \"box-orient\": \"horizontal|vertical|inline-axis|block-axis|inherit\",\n        \"box-pack\": \"start|center|end|justify\",\n        \"box-shadow\": \"none|<shadow>#\",\n        \"box-sizing\": \"content-box|border-box\",\n        \"break-after\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-before\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-inside\": \"auto|avoid|avoid-page|avoid-column|avoid-region\",\n        \"caption-side\": \"top|bottom|block-start|block-end|inline-start|inline-end\",\n        \"caret\": \"<'caret-color'>||<'caret-shape'>\",\n        \"caret-color\": \"auto|<color>\",\n        \"caret-shape\": \"auto|bar|block|underscore\",\n        \"clear\": \"none|left|right|both|inline-start|inline-end\",\n        \"clip\": \"<shape>|auto\",\n        \"clip-path\": \"<clip-source>|[<basic-shape>||<geometry-box>]|none\",\n        \"color\": \"<color>\",\n        \"print-color-adjust\": \"economy|exact\",\n        \"color-scheme\": \"normal|[light|dark|<custom-ident>]+&&only?\",\n        \"column-count\": \"<integer>|auto\",\n        \"column-fill\": \"auto|balance|balance-all\",\n        \"column-gap\": \"normal|<length-percentage>\",\n        \"column-rule\": \"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>\",\n        \"column-rule-color\": \"<color>\",\n        \"column-rule-style\": \"<'border-style'>\",\n        \"column-rule-width\": \"<'border-width'>\",\n        \"column-span\": \"none|all\",\n        \"column-width\": \"<length>|auto\",\n        \"columns\": \"<'column-width'>||<'column-count'>\",\n        \"contain\": \"none|strict|content|[[size||inline-size]||layout||style||paint]\",\n        \"contain-intrinsic-size\": \"[none|<length>|auto <length>]{1,2}\",\n        \"contain-intrinsic-block-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-height\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-inline-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-width\": \"none|<length>|auto <length>\",\n        \"content\": \"normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?\",\n        \"content-visibility\": \"visible|auto|hidden\",\n        \"counter-increment\": \"[<counter-name> <integer>?]+|none\",\n        \"counter-reset\": \"[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none\",\n        \"counter-set\": \"[<counter-name> <integer>?]+|none\",\n        \"cursor\": \"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]\",\n        \"direction\": \"ltr|rtl\",\n        \"display\": \"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>\",\n        \"empty-cells\": \"show|hide\",\n        \"filter\": \"none|<filter-function-list>|<-ms-filter-function-list>\",\n        \"flex\": \"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]\",\n        \"flex-basis\": \"content|<'width'>\",\n        \"flex-direction\": \"row|row-reverse|column|column-reverse\",\n        \"flex-flow\": \"<'flex-direction'>||<'flex-wrap'>\",\n        \"flex-grow\": \"<number>\",\n        \"flex-shrink\": \"<number>\",\n        \"flex-wrap\": \"nowrap|wrap|wrap-reverse\",\n        \"float\": \"left|right|none|inline-start|inline-end\",\n        \"font\": \"[[<'font-style'>||<font-variant-css21>||<'font-weight'>||<'font-stretch'>]? <'font-size'> [/ <'line-height'>]? <'font-family'>]|caption|icon|menu|message-box|small-caption|status-bar\",\n        \"font-family\": \"[<family-name>|<generic-family>]#\",\n        \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n        \"font-kerning\": \"auto|normal|none\",\n        \"font-language-override\": \"normal|<string>\",\n        \"font-optical-sizing\": \"auto|none\",\n        \"font-variation-settings\": \"normal|[<string> <number>]#\",\n        \"font-size\": \"<absolute-size>|<relative-size>|<length-percentage>\",\n        \"font-size-adjust\": \"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]\",\n        \"font-smooth\": \"auto|never|always|<absolute-size>|<length>\",\n        \"font-stretch\": \"<font-stretch-absolute>\",\n        \"font-style\": \"normal|italic|oblique <angle>?\",\n        \"font-synthesis\": \"none|[weight||style||small-caps]\",\n        \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-alternates\": \"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]\",\n        \"font-variant-caps\": \"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps\",\n        \"font-variant-east-asian\": \"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-ligatures\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]\",\n        \"font-variant-numeric\": \"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]\",\n        \"font-variant-position\": \"normal|sub|super\",\n        \"font-weight\": \"<font-weight-absolute>|bolder|lighter\",\n        \"forced-color-adjust\": \"auto|none\",\n        \"gap\": \"<'row-gap'> <'column-gap'>?\",\n        \"grid\": \"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n        \"grid-area\": \"<grid-line> [/ <grid-line>]{0,3}\",\n        \"grid-auto-columns\": \"<track-size>+\",\n        \"grid-auto-flow\": \"[row|column]||dense\",\n        \"grid-auto-rows\": \"<track-size>+\",\n        \"grid-column\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-column-end\": \"<grid-line>\",\n        \"grid-column-gap\": \"<length-percentage>\",\n        \"grid-column-start\": \"<grid-line>\",\n        \"grid-gap\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n        \"grid-row\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-row-end\": \"<grid-line>\",\n        \"grid-row-gap\": \"<length-percentage>\",\n        \"grid-row-start\": \"<grid-line>\",\n        \"grid-template\": \"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?\",\n        \"grid-template-areas\": \"none|<string>+\",\n        \"grid-template-columns\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"grid-template-rows\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"hanging-punctuation\": \"none|[first||[force-end|allow-end]||last]\",\n        \"height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"hyphenate-character\": \"auto|<string>\",\n        \"hyphens\": \"none|manual|auto\",\n        \"image-orientation\": \"from-image|<angle>|[<angle>? flip]\",\n        \"image-rendering\": \"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>\",\n        \"image-resolution\": \"[from-image||<resolution>]&&snap?\",\n        \"ime-mode\": \"auto|normal|active|inactive|disabled\",\n        \"initial-letter\": \"normal|[<number> <integer>?]\",\n        \"initial-letter-align\": \"[auto|alphabetic|hanging|ideographic]\",\n        \"inline-size\": \"<'width'>\",\n        \"input-security\": \"auto|none\",\n        \"inset\": \"<'top'>{1,4}\",\n        \"inset-block\": \"<'top'>{1,2}\",\n        \"inset-block-end\": \"<'top'>\",\n        \"inset-block-start\": \"<'top'>\",\n        \"inset-inline\": \"<'top'>{1,2}\",\n        \"inset-inline-end\": \"<'top'>\",\n        \"inset-inline-start\": \"<'top'>\",\n        \"isolation\": \"auto|isolate\",\n        \"justify-content\": \"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]\",\n        \"justify-items\": \"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]\",\n        \"justify-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]\",\n        \"justify-tracks\": \"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#\",\n        \"left\": \"<length>|<percentage>|auto\",\n        \"letter-spacing\": \"normal|<length-percentage>\",\n        \"line-break\": \"auto|loose|normal|strict|anywhere\",\n        \"line-clamp\": \"none|<integer>\",\n        \"line-height\": \"normal|<number>|<length>|<percentage>\",\n        \"line-height-step\": \"<length>\",\n        \"list-style\": \"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>\",\n        \"list-style-image\": \"<image>|none\",\n        \"list-style-position\": \"inside|outside\",\n        \"list-style-type\": \"<counter-style>|<string>|none\",\n        \"margin\": \"[<length>|<percentage>|auto]{1,4}\",\n        \"margin-block\": \"<'margin-left'>{1,2}\",\n        \"margin-block-end\": \"<'margin-left'>\",\n        \"margin-block-start\": \"<'margin-left'>\",\n        \"margin-bottom\": \"<length>|<percentage>|auto\",\n        \"margin-inline\": \"<'margin-left'>{1,2}\",\n        \"margin-inline-end\": \"<'margin-left'>\",\n        \"margin-inline-start\": \"<'margin-left'>\",\n        \"margin-left\": \"<length>|<percentage>|auto\",\n        \"margin-right\": \"<length>|<percentage>|auto\",\n        \"margin-top\": \"<length>|<percentage>|auto\",\n        \"margin-trim\": \"none|in-flow|all\",\n        \"mask\": \"<mask-layer>#\",\n        \"mask-border\": \"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>\",\n        \"mask-border-mode\": \"luminance|alpha\",\n        \"mask-border-outset\": \"[<length>|<number>]{1,4}\",\n        \"mask-border-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"mask-border-slice\": \"<number-percentage>{1,4} fill?\",\n        \"mask-border-source\": \"none|<image>\",\n        \"mask-border-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"mask-clip\": \"[<geometry-box>|no-clip]#\",\n        \"mask-composite\": \"<compositing-operator>#\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"mask-mode\": \"<masking-mode>#\",\n        \"mask-origin\": \"<geometry-box>#\",\n        \"mask-position\": \"<position>#\",\n        \"mask-repeat\": \"<repeat-style>#\",\n        \"mask-size\": \"<bg-size>#\",\n        \"mask-type\": \"luminance|alpha\",\n        \"masonry-auto-flow\": \"[pack|next]||[definite-first|ordered]\",\n        \"math-depth\": \"auto-add|add( <integer> )|<integer>\",\n        \"math-shift\": \"normal|compact\",\n        \"math-style\": \"normal|compact\",\n        \"max-block-size\": \"<'max-width'>\",\n        \"max-height\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"max-inline-size\": \"<'max-width'>\",\n        \"max-lines\": \"none|<integer>\",\n        \"max-width\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"min-block-size\": \"<'min-width'>\",\n        \"min-height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"min-inline-size\": \"<'min-width'>\",\n        \"min-width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"mix-blend-mode\": \"<blend-mode>|plus-lighter\",\n        \"object-fit\": \"fill|contain|cover|none|scale-down\",\n        \"object-position\": \"<position>\",\n        \"offset\": \"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?\",\n        \"offset-anchor\": \"auto|<position>\",\n        \"offset-distance\": \"<length-percentage>\",\n        \"offset-path\": \"none|ray( [<angle>&&<size>&&contain?] )|<path()>|<url>|[<basic-shape>||<geometry-box>]\",\n        \"offset-position\": \"auto|<position>\",\n        \"offset-rotate\": \"[auto|reverse]||<angle>\",\n        \"opacity\": \"<alpha-value>\",\n        \"order\": \"<integer>\",\n        \"orphans\": \"<integer>\",\n        \"outline\": \"[<'outline-color'>||<'outline-style'>||<'outline-width'>]\",\n        \"outline-color\": \"<color>|invert\",\n        \"outline-offset\": \"<length>\",\n        \"outline-style\": \"auto|<'border-style'>\",\n        \"outline-width\": \"<line-width>\",\n        \"overflow\": \"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>\",\n        \"overflow-anchor\": \"auto|none\",\n        \"overflow-block\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-clip-box\": \"padding-box|content-box\",\n        \"overflow-clip-margin\": \"<visual-box>||<length [0,∞]>\",\n        \"overflow-inline\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-wrap\": \"normal|break-word|anywhere\",\n        \"overflow-x\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-y\": \"visible|hidden|clip|scroll|auto\",\n        \"overscroll-behavior\": \"[contain|none|auto]{1,2}\",\n        \"overscroll-behavior-block\": \"contain|none|auto\",\n        \"overscroll-behavior-inline\": \"contain|none|auto\",\n        \"overscroll-behavior-x\": \"contain|none|auto\",\n        \"overscroll-behavior-y\": \"contain|none|auto\",\n        \"padding\": \"[<length>|<percentage>]{1,4}\",\n        \"padding-block\": \"<'padding-left'>{1,2}\",\n        \"padding-block-end\": \"<'padding-left'>\",\n        \"padding-block-start\": \"<'padding-left'>\",\n        \"padding-bottom\": \"<length>|<percentage>\",\n        \"padding-inline\": \"<'padding-left'>{1,2}\",\n        \"padding-inline-end\": \"<'padding-left'>\",\n        \"padding-inline-start\": \"<'padding-left'>\",\n        \"padding-left\": \"<length>|<percentage>\",\n        \"padding-right\": \"<length>|<percentage>\",\n        \"padding-top\": \"<length>|<percentage>\",\n        \"page-break-after\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-before\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-inside\": \"auto|avoid\",\n        \"paint-order\": \"normal|[fill||stroke||markers]\",\n        \"perspective\": \"none|<length>\",\n        \"perspective-origin\": \"<position>\",\n        \"place-content\": \"<'align-content'> <'justify-content'>?\",\n        \"place-items\": \"<'align-items'> <'justify-items'>?\",\n        \"place-self\": \"<'align-self'> <'justify-self'>?\",\n        \"pointer-events\": \"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit\",\n        \"position\": \"static|relative|absolute|sticky|fixed|-webkit-sticky\",\n        \"quotes\": \"none|auto|[<string> <string>]+\",\n        \"resize\": \"none|both|horizontal|vertical|block|inline\",\n        \"right\": \"<length>|<percentage>|auto\",\n        \"rotate\": \"none|<angle>|[x|y|z|<number>{3}]&&<angle>\",\n        \"row-gap\": \"normal|<length-percentage>\",\n        \"ruby-align\": \"start|center|space-between|space-around\",\n        \"ruby-merge\": \"separate|collapse|auto\",\n        \"ruby-position\": \"[alternate||[over|under]]|inter-character\",\n        \"scale\": \"none|<number>{1,3}\",\n        \"scrollbar-color\": \"auto|<color>{2}\",\n        \"scrollbar-gutter\": \"auto|stable&&both-edges?\",\n        \"scrollbar-width\": \"auto|thin|none\",\n        \"scroll-behavior\": \"auto|smooth\",\n        \"scroll-margin\": \"<length>{1,4}\",\n        \"scroll-margin-block\": \"<length>{1,2}\",\n        \"scroll-margin-block-start\": \"<length>\",\n        \"scroll-margin-block-end\": \"<length>\",\n        \"scroll-margin-bottom\": \"<length>\",\n        \"scroll-margin-inline\": \"<length>{1,2}\",\n        \"scroll-margin-inline-start\": \"<length>\",\n        \"scroll-margin-inline-end\": \"<length>\",\n        \"scroll-margin-left\": \"<length>\",\n        \"scroll-margin-right\": \"<length>\",\n        \"scroll-margin-top\": \"<length>\",\n        \"scroll-padding\": \"[auto|<length-percentage>]{1,4}\",\n        \"scroll-padding-block\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-block-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-block-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-bottom\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-inline-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-left\": \"auto|<length-percentage>\",\n        \"scroll-padding-right\": \"auto|<length-percentage>\",\n        \"scroll-padding-top\": \"auto|<length-percentage>\",\n        \"scroll-snap-align\": \"[none|start|end|center]{1,2}\",\n        \"scroll-snap-coordinate\": \"none|<position>#\",\n        \"scroll-snap-destination\": \"<position>\",\n        \"scroll-snap-points-x\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-points-y\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-stop\": \"normal|always\",\n        \"scroll-snap-type\": \"none|[x|y|block|inline|both] [mandatory|proximity]?\",\n        \"scroll-snap-type-x\": \"none|mandatory|proximity\",\n        \"scroll-snap-type-y\": \"none|mandatory|proximity\",\n        \"scroll-timeline\": \"<scroll-timeline-name>||<scroll-timeline-axis>\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"shape-image-threshold\": \"<alpha-value>\",\n        \"shape-margin\": \"<length-percentage>\",\n        \"shape-outside\": \"none|[<shape-box>||<basic-shape>]|<image>\",\n        \"tab-size\": \"<integer>|<length>\",\n        \"table-layout\": \"auto|fixed\",\n        \"text-align\": \"start|end|left|right|center|justify|match-parent\",\n        \"text-align-last\": \"auto|start|end|left|right|center|justify\",\n        \"text-combine-upright\": \"none|all|[digits <integer>?]\",\n        \"text-decoration\": \"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>\",\n        \"text-decoration-color\": \"<color>\",\n        \"text-decoration-line\": \"none|[underline||overline||line-through||blink]|spelling-error|grammar-error\",\n        \"text-decoration-skip\": \"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]\",\n        \"text-decoration-skip-ink\": \"auto|all|none\",\n        \"text-decoration-style\": \"solid|double|dotted|dashed|wavy\",\n        \"text-decoration-thickness\": \"auto|from-font|<length>|<percentage>\",\n        \"text-emphasis\": \"<'text-emphasis-style'>||<'text-emphasis-color'>\",\n        \"text-emphasis-color\": \"<color>\",\n        \"text-emphasis-position\": \"[over|under]&&[right|left]\",\n        \"text-emphasis-style\": \"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>\",\n        \"text-indent\": \"<length-percentage>&&hanging?&&each-line?\",\n        \"text-justify\": \"auto|inter-character|inter-word|none\",\n        \"text-orientation\": \"mixed|upright|sideways\",\n        \"text-overflow\": \"[clip|ellipsis|<string>]{1,2}\",\n        \"text-rendering\": \"auto|optimizeSpeed|optimizeLegibility|geometricPrecision\",\n        \"text-shadow\": \"none|<shadow-t>#\",\n        \"text-size-adjust\": \"none|auto|<percentage>\",\n        \"text-transform\": \"none|capitalize|uppercase|lowercase|full-width|full-size-kana\",\n        \"text-underline-offset\": \"auto|<length>|<percentage>\",\n        \"text-underline-position\": \"auto|from-font|[under||[left|right]]\",\n        \"top\": \"<length>|<percentage>|auto\",\n        \"touch-action\": \"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation\",\n        \"transform\": \"none|<transform-list>\",\n        \"transform-box\": \"content-box|border-box|fill-box|stroke-box|view-box\",\n        \"transform-origin\": \"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?\",\n        \"transform-style\": \"flat|preserve-3d\",\n        \"transition\": \"<single-transition>#\",\n        \"transition-delay\": \"<time>#\",\n        \"transition-duration\": \"<time>#\",\n        \"transition-property\": \"none|<single-transition-property>#\",\n        \"transition-timing-function\": \"<easing-function>#\",\n        \"translate\": \"none|<length-percentage> [<length-percentage> <length>?]?\",\n        \"unicode-bidi\": \"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext\",\n        \"user-select\": \"auto|text|none|contain|all\",\n        \"vertical-align\": \"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>\",\n        \"visibility\": \"visible|hidden|collapse\",\n        \"white-space\": \"normal|pre|nowrap|pre-wrap|pre-line|break-spaces\",\n        \"widows\": \"<integer>\",\n        \"width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|fill|stretch|intrinsic|-moz-max-content|-webkit-max-content|-moz-fit-content|-webkit-fit-content\",\n        \"will-change\": \"auto|<animateable-feature>#\",\n        \"word-break\": \"normal|break-all|keep-all|break-word\",\n        \"word-spacing\": \"normal|<length>\",\n        \"word-wrap\": \"normal|break-word\",\n        \"writing-mode\": \"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>\",\n        \"z-index\": \"auto|<integer>\",\n        \"zoom\": \"normal|reset|<number>|<percentage>\",\n        \"-moz-background-clip\": \"padding|border\",\n        \"-moz-border-radius-bottomleft\": \"<'border-bottom-left-radius'>\",\n        \"-moz-border-radius-bottomright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-border-radius-topleft\": \"<'border-top-left-radius'>\",\n        \"-moz-border-radius-topright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-control-character-visibility\": \"visible|hidden\",\n        \"-moz-osx-font-smoothing\": \"auto|grayscale\",\n        \"-moz-user-select\": \"none|text|all|-moz-none\",\n        \"-ms-flex-align\": \"start|end|center|baseline|stretch\",\n        \"-ms-flex-item-align\": \"auto|start|end|center|baseline|stretch\",\n        \"-ms-flex-line-pack\": \"start|end|center|justify|distribute|stretch\",\n        \"-ms-flex-negative\": \"<'flex-shrink'>\",\n        \"-ms-flex-pack\": \"start|end|center|justify|distribute\",\n        \"-ms-flex-order\": \"<integer>\",\n        \"-ms-flex-positive\": \"<'flex-grow'>\",\n        \"-ms-flex-preferred-size\": \"<'flex-basis'>\",\n        \"-ms-interpolation-mode\": \"nearest-neighbor|bicubic\",\n        \"-ms-grid-column-align\": \"start|end|center|stretch\",\n        \"-ms-grid-row-align\": \"start|end|center|stretch\",\n        \"-ms-hyphenate-limit-last\": \"none|always|column|page|spread\",\n        \"-webkit-background-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-column-break-after\": \"always|auto|avoid\",\n        \"-webkit-column-break-before\": \"always|auto|avoid\",\n        \"-webkit-column-break-inside\": \"always|auto|avoid\",\n        \"-webkit-font-smoothing\": \"auto|none|antialiased|subpixel-antialiased\",\n        \"-webkit-mask-box-image\": \"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?\",\n        \"-webkit-print-color-adjust\": \"economy|exact\",\n        \"-webkit-text-security\": \"none|circle|disc|square\",\n        \"-webkit-user-drag\": \"none|element|auto\",\n        \"-webkit-user-select\": \"auto|none|text|all\",\n        \"alignment-baseline\": \"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical\",\n        \"baseline-shift\": \"baseline|sub|super|<svg-length>\",\n        \"behavior\": \"<url>+\",\n        \"clip-rule\": \"nonzero|evenodd\",\n        \"cue\": \"<'cue-before'> <'cue-after'>?\",\n        \"cue-after\": \"<url> <decibel>?|none\",\n        \"cue-before\": \"<url> <decibel>?|none\",\n        \"dominant-baseline\": \"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\",\n        \"fill\": \"<paint>\",\n        \"fill-opacity\": \"<number-zero-one>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"glyph-orientation-horizontal\": \"<angle>\",\n        \"glyph-orientation-vertical\": \"<angle>\",\n        \"kerning\": \"auto|<svg-length>\",\n        \"marker\": \"none|<url>\",\n        \"marker-end\": \"none|<url>\",\n        \"marker-mid\": \"none|<url>\",\n        \"marker-start\": \"none|<url>\",\n        \"pause\": \"<'pause-before'> <'pause-after'>?\",\n        \"pause-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"pause-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest\": \"<'rest-before'> <'rest-after'>?\",\n        \"rest-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"shape-rendering\": \"auto|optimizeSpeed|crispEdges|geometricPrecision\",\n        \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n        \"speak\": \"auto|none|normal\",\n        \"speak-as\": \"normal|spell-out||digits||[literal-punctuation|no-punctuation]\",\n        \"stroke\": \"<paint>\",\n        \"stroke-dasharray\": \"none|[<svg-length>+]#\",\n        \"stroke-dashoffset\": \"<svg-length>\",\n        \"stroke-linecap\": \"butt|round|square\",\n        \"stroke-linejoin\": \"miter|round|bevel\",\n        \"stroke-miterlimit\": \"<number-one-or-greater>\",\n        \"stroke-opacity\": \"<number-zero-one>\",\n        \"stroke-width\": \"<svg-length>\",\n        \"text-anchor\": \"start|middle|end\",\n        \"unicode-range\": \"<urange>#\",\n        \"voice-balance\": \"<number>|left|center|right|leftwards|rightwards\",\n        \"voice-duration\": \"auto|<time>\",\n        \"voice-family\": \"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve\",\n        \"voice-pitch\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-range\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-rate\": \"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>\",\n        \"voice-stress\": \"normal|strong|moderate|none|reduced\",\n        \"voice-volume\": \"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]\"\n    },\n    \"atrules\": {\n        \"charset\": {\n            \"prelude\": \"<string>\",\n            \"descriptors\": null\n        },\n        \"counter-style\": {\n            \"prelude\": \"<counter-style-name>\",\n            \"descriptors\": {\n                \"additive-symbols\": \"[<integer>&&<symbol>]#\",\n                \"fallback\": \"<counter-style-name>\",\n                \"negative\": \"<symbol> <symbol>?\",\n                \"pad\": \"<integer>&&<symbol>\",\n                \"prefix\": \"<symbol>\",\n                \"range\": \"[[<integer>|infinite]{2}]#|auto\",\n                \"speak-as\": \"auto|bullets|numbers|words|spell-out|<counter-style-name>\",\n                \"suffix\": \"<symbol>\",\n                \"symbols\": \"<symbol>+\",\n                \"system\": \"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]\"\n            }\n        },\n        \"document\": {\n            \"prelude\": \"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#\",\n            \"descriptors\": null\n        },\n        \"font-face\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"ascent-override\": \"normal|<percentage>\",\n                \"descent-override\": \"normal|<percentage>\",\n                \"font-display\": \"[auto|block|swap|fallback|optional]\",\n                \"font-family\": \"<family-name>\",\n                \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n                \"font-variation-settings\": \"normal|[<string> <number>]#\",\n                \"font-stretch\": \"<font-stretch-absolute>{1,2}\",\n                \"font-style\": \"normal|italic|oblique <angle>{0,2}\",\n                \"font-weight\": \"<font-weight-absolute>{1,2}\",\n                \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n                \"line-gap-override\": \"normal|<percentage>\",\n                \"size-adjust\": \"<percentage>\",\n                \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n                \"unicode-range\": \"<urange>#\"\n            }\n        },\n        \"font-feature-values\": {\n            \"prelude\": \"<family-name>#\",\n            \"descriptors\": null\n        },\n        \"import\": {\n            \"prelude\": \"[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?\",\n            \"descriptors\": null\n        },\n        \"keyframes\": {\n            \"prelude\": \"<keyframes-name>\",\n            \"descriptors\": null\n        },\n        \"layer\": {\n            \"prelude\": \"[<layer-name>#|<layer-name>?]\",\n            \"descriptors\": null\n        },\n        \"media\": {\n            \"prelude\": \"<media-query-list>\",\n            \"descriptors\": null\n        },\n        \"namespace\": {\n            \"prelude\": \"<namespace-prefix>? [<string>|<url>]\",\n            \"descriptors\": null\n        },\n        \"page\": {\n            \"prelude\": \"<page-selector-list>\",\n            \"descriptors\": {\n                \"bleed\": \"auto|<length>\",\n                \"marks\": \"none|[crop||cross]\",\n                \"size\": \"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]\"\n            }\n        },\n        \"property\": {\n            \"prelude\": \"<custom-property-name>\",\n            \"descriptors\": {\n                \"syntax\": \"<string>\",\n                \"inherits\": \"true|false\",\n                \"initial-value\": \"<string>\"\n            }\n        },\n        \"scroll-timeline\": {\n            \"prelude\": \"<timeline-name>\",\n            \"descriptors\": null\n        },\n        \"supports\": {\n            \"prelude\": \"<supports-condition>\",\n            \"descriptors\": null\n        },\n        \"viewport\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"height\": \"<viewport-length>{1,2}\",\n                \"max-height\": \"<viewport-length>\",\n                \"max-width\": \"<viewport-length>\",\n                \"max-zoom\": \"auto|<number>|<percentage>\",\n                \"min-height\": \"<viewport-length>\",\n                \"min-width\": \"<viewport-length>\",\n                \"min-zoom\": \"auto|<number>|<percentage>\",\n                \"orientation\": \"auto|portrait|landscape\",\n                \"user-zoom\": \"zoom|fixed\",\n                \"viewport-fit\": \"auto|contain|cover\",\n                \"width\": \"<viewport-length>{1,2}\",\n                \"zoom\": \"auto|<number>|<percentage>\"\n            }\n        },\n        \"nest\": {\n            \"prelude\": \"<complex-selector-list>\",\n            \"descriptors\": null\n        }\n    }\n};", "export * as AnPlusB from './AnPlusB.js';\nexport * as Atrule from './Atrule.js';\nexport * as AtrulePrelude from './AtrulePrelude.js';\nexport * as AttributeSelector from './AttributeSelector.js';\nexport * as Block from './Block.js';\nexport * as Brackets from './Brackets.js';\nexport * as CDC from './CDC.js';\nexport * as CDO from './CDO.js';\nexport * as ClassSelector from './ClassSelector.js';\nexport * as Combinator from './Combinator.js';\nexport * as Comment from './Comment.js';\nexport * as Declaration from './Declaration.js';\nexport * as DeclarationList from './DeclarationList.js';\nexport * as Dimension from './Dimension.js';\nexport * as Function from './Function.js';\nexport * as Hash from './Hash.js';\nexport * as Identifier from './Identifier.js';\nexport * as IdSelector from './IdSelector.js';\nexport * as MediaFeature from './MediaFeature.js';\nexport * as MediaQuery from './MediaQuery.js';\nexport * as MediaQueryList from './MediaQueryList.js';\nexport * as NestingSelector from './NestingSelector.js';\nexport * as Nth from './Nth.js';\nexport * as Number from './Number.js';\nexport * as Operator from './Operator.js';\nexport * as Parentheses from './Parentheses.js';\nexport * as Percentage from './Percentage.js';\nexport * as PseudoClassSelector from './PseudoClassSelector.js';\nexport * as PseudoElementSelector from './PseudoElementSelector.js';\nexport * as Ratio from './Ratio.js';\nexport * as Raw from './Raw.js';\nexport * as Rule from './Rule.js';\nexport * as Selector from './Selector.js';\nexport * as SelectorList from './SelectorList.js';\nexport * as String from './String.js';\nexport * as StyleSheet from './StyleSheet.js';\nexport * as TypeSelector from './TypeSelector.js';\nexport * as UnicodeRange from './UnicodeRange.js';\nexport * as Url from './Url.js';\nexport * as Value from './Value.js';\nexport * as WhiteSpace from './WhiteSpace.js';\n", "import {\n    isDigit,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction checkInteger(offset, disallowSign) {\n    let pos = this.tokenStart + offset;\n    const code = this.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            this.error('Number sign is not allowed');\n        }\n        pos++;\n    }\n\n    for (; pos < this.tokenEnd; pos++) {\n        if (!isDigit(this.charCodeAt(pos))) {\n            this.error('Integer is expected', pos);\n        }\n    }\n}\n\nfunction checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n}\n\nfunction expectCharCode(offset, code) {\n    if (!this.cmpChar(this.tokenStart + offset, code)) {\n        let msg = '';\n\n        switch (code) {\n            case N:\n                msg = 'N is expected';\n                break;\n            case HYPHENMINUS:\n                msg = 'HyphenMinus is expected';\n                break;\n        }\n\n        this.error(msg, this.tokenStart + offset);\n    }\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB() {\n    let offset = 0;\n    let sign = 0;\n    let type = this.tokenType;\n\n    while (type === WhiteSpace || type === Comment) {\n        type = this.lookupType(++offset);\n    }\n\n    if (type !== Number) {\n        if (this.isDelim(PLUSSIGN, offset) ||\n            this.isDelim(HYPHENMINUS, offset)) {\n            sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n            do {\n                type = this.lookupType(++offset);\n            } while (type === WhiteSpace || type === Comment);\n\n            if (type !== Number) {\n                this.skip(offset);\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (offset > 0) {\n        this.skip(offset);\n    }\n\n    if (sign === 0) {\n        type = this.charCodeAt(this.tokenStart);\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n            this.error('Number sign is expected');\n        }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(Number) : this.consume(Number);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport const name = 'AnPlusB';\nexport const structure = {\n    a: [String, null],\n    b: [String, null]\n};\n\nexport function parse() {\n    /* eslint-disable brace-style*/\n    const start = this.tokenStart;\n    let a = null;\n    let b = null;\n\n    // <integer>\n    if (this.tokenType === Number) {\n        checkTokenIsInteger.call(this, ALLOW_SIGN);\n        b = this.consume(Number);\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (this.tokenType === Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {\n        a = '-1';\n\n        expectCharCode.call(this, 1, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // -n- <signless-integer>\n            case 3:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // <dashndashdigit-ident>\n            default:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n                checkInteger.call(this, 3, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + 2);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (this.tokenType === Ident || (this.isDelim(PLUSSIGN) && this.lookupType(1) === Ident)) {\n        let sign = 0;\n        a = '1';\n\n        // just ignore a plus\n        if (this.isDelim(PLUSSIGN)) {\n            sign = 1;\n            this.next();\n        }\n\n        expectCharCode.call(this, 0, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // '+'? n- <signless-integer>\n            case 2:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // '+'? <ndashdigit-ident>\n            default:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n                checkInteger.call(this, 2, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + sign + 1);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (this.tokenType === Dimension) {\n        const code = this.charCodeAt(this.tokenStart);\n        const sign = code === PLUSSIGN || code === HYPHENMINUS;\n        let i = this.tokenStart + sign;\n\n        for (; i < this.tokenEnd; i++) {\n            if (!isDigit(this.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === this.tokenStart + sign) {\n            this.error('Integer is expected', this.tokenStart + sign);\n        }\n\n        expectCharCode.call(this, i - this.tokenStart, N);\n        a = this.substring(start, i);\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === this.tokenEnd) {\n            this.next();\n            b = consumeB.call(this);\n        } else {\n            expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === this.tokenEnd) {\n                this.next();\n                this.skipSC();\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n                b = '-' + this.consume(Number);\n            }\n            // <ndashdigit-dimension>\n            else {\n                checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);\n                this.next();\n                b = this.substrToCursor(i + 1);\n            }\n        }\n    } else {\n        this.error();\n    }\n\n    if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n        a = a.substr(1);\n    }\n\n    if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n        b = b.substr(1);\n    }\n\n    return {\n        type: 'AnPlusB',\n        loc: this.getLocation(start, this.tokenStart),\n        a,\n        b\n    };\n}\n\nexport function generate(node) {\n    if (node.a) {\n        const a =\n            node.a === '+1' && 'n' ||\n            node.a ===  '1' && 'n' ||\n            node.a === '-1' && '-n' ||\n            node.a + 'n';\n\n        if (node.b) {\n            const b = node.b[0] === '-' || node.b[0] === '+'\n                ? node.b\n                : '+' + node.b;\n            this.tokenize(a + b);\n        } else {\n            this.tokenize(a);\n        }\n    } else {\n        this.tokenize(node.b);\n    }\n}\n", "import {\n    AtKeyword,\n    Semicolon,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (let offset = 1, type; type = this.lookupType(offset); offset++) {\n        if (type === RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === LeftCurlyBracket ||\n            type === AtKeyword) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n\nexport const name = 'Atrule';\nexport const walkContext = 'atrule';\nexport const structure = {\n    name: String,\n    prelude: ['AtrulePrelude', 'Raw', null],\n    block: ['Block', null]\n};\n\nexport function parse(isDeclaration = false) {\n    const start = this.tokenStart;\n    let name;\n    let nameLowerCase;\n    let prelude = null;\n    let block = null;\n\n    this.eat(AtKeyword);\n\n    name = this.substrToCursor(start + 1);\n    nameLowerCase = name.toLowerCase();\n    this.skipSC();\n\n    // parse prelude\n    if (this.eof === false &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        if (this.parseAtrulePrelude) {\n            prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name, isDeclaration), consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, this.tokenIndex);\n        }\n\n        this.skipSC();\n    }\n\n    switch (this.tokenType) {\n        case Semicolon:\n            this.next();\n            break;\n\n        case LeftCurlyBracket:\n            if (hasOwnProperty.call(this.atrule, nameLowerCase) &&\n                typeof this.atrule[nameLowerCase].block === 'function') {\n                block = this.atrule[nameLowerCase].block.call(this, isDeclaration);\n            } else {\n                // TODO: should consume block content as Raw?\n                block = this.Block(isDeclarationBlockAtrule.call(this));\n            }\n\n            break;\n    }\n\n    return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        prelude,\n        block\n    };\n}\n\nexport function generate(node) {\n    this.token(AtKeyword, '@' + node.name);\n\n    if (node.prelude !== null) {\n        this.node(node.prelude);\n    }\n\n    if (node.block) {\n        this.node(node.block);\n    } else {\n        this.token(Semicolon, ';');\n    }\n}\n", "import {\n    Semicolon,\n    LeftCurlyBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'AtrulePrelude';\nexport const walkContext = 'atrulePrelude';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(name) {\n    let children = null;\n\n    if (name !== null) {\n        name = name.toLowerCase();\n    }\n\n    this.skipSC();\n\n    if (hasOwnProperty.call(this.atrule, name) &&\n        typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n    } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n    }\n\n    this.skipSC();\n\n    if (this.eof !== true &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        this.error('Semicolon or block is expected');\n    }\n\n    return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import {\n    Ident,\n    String as StringToken,\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nconst DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\nconst ASTERISK = 0x002A;         // U+002A ASTERISK (*)\nconst EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\nconst CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\nconst VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;            // U+007E TILDE (~)\n\nfunction getAttributeName() {\n    if (this.eof) {\n        this.error('Unexpected end of input');\n    }\n\n    const start = this.tokenStart;\n    let expectIdent = false;\n\n    if (this.isDelim(ASTERISK)) {\n        expectIdent = true;\n        this.next();\n    } else if (!this.isDelim(VERTICALLINE)) {\n        this.eat(Ident);\n    }\n\n    if (this.isDelim(VERTICALLINE)) {\n        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {\n            this.next();\n            this.eat(Ident);\n        } else if (expectIdent) {\n            this.error('Identifier is expected', this.tokenEnd);\n        }\n    } else if (expectIdent) {\n        this.error('Vertical line is expected');\n    }\n\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nfunction getOperator() {\n    const start = this.tokenStart;\n    const code = this.charCodeAt(start);\n\n    if (code !== EQUALSSIGN &&        // =\n        code !== TILDE &&             // ~=\n        code !== CIRCUMFLEXACCENT &&  // ^=\n        code !== DOLLARSIGN &&        // $=\n        code !== ASTERISK &&          // *=\n        code !== VERTICALLINE         // |=\n    ) {\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n\n    this.next();\n\n    if (code !== EQUALSSIGN) {\n        if (!this.isDelim(EQUALSSIGN)) {\n            this.error('Equal sign is expected');\n        }\n\n        this.next();\n    }\n\n    return this.substrToCursor(start);\n}\n\n// '[' <wq-name> ']'\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\nexport const name = 'AttributeSelector';\nexport const structure = {\n    name: 'Identifier',\n    matcher: [String, null],\n    value: ['String', 'Identifier', null],\n    flags: [String, null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let matcher = null;\n    let value = null;\n    let flags = null;\n\n    this.eat(LeftSquareBracket);\n    this.skipSC();\n\n    name = getAttributeName.call(this);\n    this.skipSC();\n\n    if (this.tokenType !== RightSquareBracket) {\n        // avoid case `[name i]`\n        if (this.tokenType !== Ident) {\n            matcher = getOperator.call(this);\n\n            this.skipSC();\n\n            value = this.tokenType === StringToken\n                ? this.String()\n                : this.Identifier();\n\n            this.skipSC();\n        }\n\n        // attribute flags\n        if (this.tokenType === Ident) {\n            flags = this.consume(Ident);\n\n            this.skipSC();\n        }\n    }\n\n    this.eat(RightSquareBracket);\n\n    return {\n        type: 'AttributeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        matcher,\n        value,\n        flags\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.node(node.name);\n\n    if (node.matcher !== null) {\n        this.tokenize(node.matcher);\n        this.node(node.value);\n    }\n\n    if (node.flags !== null) {\n        this.token(Ident, node.flags);\n    }\n\n    this.token(Delim, ']');\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.tokenType === Semicolon) {\n        return consumeRawDeclaration.call(this, this.tokenIndex);\n    }\n\n    const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.tokenType === Semicolon) {\n        this.next();\n    }\n\n    return node;\n}\n\nexport const name = 'Block';\nexport const walkContext = 'block';\nexport const structure = {\n    children: [[\n        'Atrule',\n        'Rule',\n        'Declaration'\n    ]]\n};\n\nexport function parse(isStyleBlock) {\n    const consumer = isStyleBlock ? consumeDeclaration : consumeRule;\n    const start = this.tokenStart;\n    let children = this.createList();\n\n    this.eat(LeftCurlyBracket);\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case RightCurlyBracket:\n                break scan;\n\n            case WhiteSpace:\n            case Comment:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, isStyleBlock), consumeRaw));\n                break;\n\n            default:\n                if (isStyleBlock && this.isDelim(AMPERSAND))  {\n                    children.push(consumeRule.call(this));\n                } else {\n                    children.push(consumer.call(this));\n                }\n        }\n    }\n\n    if (!this.eof) {\n        this.eat(RightCurlyBracket);\n    }\n\n    return {\n        type: 'Block',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftCurlyBracket, '{');\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n    this.token(RightCurlyBracket, '}');\n}\n", "import {\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'Brackets';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftSquareBracket);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightSquareBracket);\n    }\n\n    return {\n        type: 'Brackets',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.children(node);\n    this.token(Delim, ']');\n}\n", "import { CDC } from '../../tokenizer/index.js';\n\nexport const name = 'CDC';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDC); // -->\n\n    return {\n        type: 'CDC',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDC, '-->');\n}\n", "import { CDO } from '../../tokenizer/index.js';\n\nexport const name = 'CDO';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDO); // <!--\n\n    return {\n        type: 'CDO',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDO, '<!--');\n}\n", "import { Delim, Ident } from '../../tokenizer/index.js';\n\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// '.' ident\nexport const name = 'ClassSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    this.eatDelim(FULLSTOP);\n\n    return {\n        type: 'ClassSelector',\n        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '.');\n    this.token(Ident, node.name);\n}\n", "import { WhiteSpace, Delim } from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nexport const name = 'Combinator';\nexport const structure = {\n    name: String\n};\n\n// + | > | ~ | /deep/\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n\n    switch (this.tokenType) {\n        case WhiteSpace:\n            name = ' ';\n            break;\n\n        case Delim:\n            switch (this.charCodeAt(this.tokenStart)) {\n                case GREATERTHANSIGN:\n                case PLUSSIGN:\n                case TILDE:\n                    this.next();\n                    break;\n\n                case SOLIDUS:\n                    this.next();\n                    this.eatIdent('deep');\n                    this.eatDelim(SOLIDUS);\n                    break;\n\n                default:\n                    this.error('Combinator is expected');\n            }\n\n            name = this.substrToCursor(start);\n            break;\n    }\n\n    return {\n        type: 'Combinator',\n        loc: this.getLocation(start, this.tokenStart),\n        name\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n", "import { Comment } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\n\nexport const name = 'Comment';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let end = this.tokenEnd;\n\n    this.eat(Comment);\n\n    if ((end - start + 2) >= 2 &&\n        this.charCodeAt(end - 2) === ASTERISK &&\n        this.charCodeAt(end - 1) === SOLIDUS) {\n        end -= 2;\n    }\n\n    return {\n        type: 'Comment',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substring(start + 2, end)\n    };\n}\n\nexport function generate(node) {\n    this.token(Comment, '/*' + node.value + '*/');\n}\n", "import { isCustomProperty } from '../../utils/names.js';\nimport {\n    Ident,\n    Hash,\n    Colon,\n    Semicolon,\n    Delim,\n    WhiteSpace\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    const startValueToken = this.tokenIndex;\n    const value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isDelim(EXCLAMATIONMARK) === false &&\n        this.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nexport const name = 'Declaration';\nexport const walkContext = 'declaration';\nexport const structure = {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const startToken = this.tokenIndex;\n    const property = readProperty.call(this);\n    const customProperty = isCustomProperty(property);\n    const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    let important = false;\n    let value;\n\n    this.skipSC();\n    this.eat(Colon);\n\n    const valueStart = this.tokenIndex;\n\n    if (!customProperty) {\n        this.skipSC();\n    }\n\n    if (parseValue) {\n        value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n        value = consumeRaw.call(this, this.tokenIndex);\n    }\n\n    if (customProperty && value.type === 'Value' && value.children.isEmpty) {\n        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {\n            if (this.lookupType(offset) === WhiteSpace) {\n                value.children.appendData({\n                    type: 'WhiteSpace',\n                    loc: null,\n                    value: ' '\n                });\n                break;\n            }\n        }\n    }\n\n    if (this.isDelim(EXCLAMATIONMARK)) {\n        important = getImportant.call(this);\n        this.skipSC();\n    }\n\n    // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n    if (this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isBalanceEdge(startToken) === false) {\n        this.error();\n    }\n\n    return {\n        type: 'Declaration',\n        loc: this.getLocation(start, this.tokenStart),\n        important,\n        property,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.property);\n    this.token(Colon, ':');\n    this.node(node.value);\n\n    if (node.important) {\n        this.token(Delim, '!');\n        this.token(Ident, node.important === true ? 'important' : node.important);\n    }\n}\n\nfunction readProperty() {\n    const start = this.tokenStart;\n\n    // hacks\n    if (this.tokenType === Delim) {\n        switch (this.charCodeAt(this.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.next();\n                if (this.isDelim(SOLIDUS)) {\n                    this.next();\n                }\n                break;\n        }\n    }\n\n    if (this.tokenType === Hash) {\n        this.eat(Hash);\n    } else {\n        this.eat(Ident);\n    }\n\n    return this.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(Delim);\n    this.skipSC();\n\n    const important = this.consume(Ident);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\n\nexport const name = 'DeclarationList';\nexport const structure = {\n    children: [[\n        'Declaration',\n        'Atrule',\n        'Rule'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n            case Comment:\n            case Semicolon:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, true), consumeRaw));\n                break;\n\n            default:\n                if (this.isDelim(AMPERSAND))  {\n                    children.push(this.parseWithFallback(this.Rule, consumeRaw));\n                } else {\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n                }\n        }\n    }\n\n    return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n}\n\n", "import { Dimension } from '../../tokenizer/index.js';\n\nexport const name = 'Dimension';\nexport const structure = {\n    value: String,\n    unit: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const value = this.consumeNumber(Dimension);\n\n    return {\n        type: 'Dimension',\n        loc: this.getLocation(start, this.tokenStart),\n        value,\n        unit: this.substring(start + value.length, this.tokenStart)\n    };\n}\n\nexport function generate(node) {\n    this.token(Dimension, node.value + node.unit);\n}\n", "import {\n    Function as FunctionToken,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'Function';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [[]]\n};\n\n// <function-token> <sequence> )\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    const name = this.consumeFunctionName();\n    const nameLowerCase = name.toLowerCase();\n    let children;\n\n    children = recognizer.hasOwnProperty(nameLowerCase)\n        ? recognizer[nameLowerCase].call(this, recognizer)\n        : readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Function',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(FunctionToken, node.name + '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n", "import { Hash } from '../../tokenizer/index.js';\n\n// '#' ident\nexport const xxx = 'XXX';\nexport const name = 'Hash';\nexport const structure = {\n    value: String\n};\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(Hash);\n\n    return {\n        type: 'Hash',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start + 1)\n    };\n}\nexport function generate(node) {\n    this.token(Hash, '#' + node.value);\n}\n\n", "import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Identifier';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.name);\n}\n", "import { Hash, Delim } from '../../tokenizer/index.js';\n\nexport const name = 'IdSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // TODO: check value is an ident\n    this.eat(Hash);\n\n    return {\n        type: 'IdSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start + 1)\n    };\n}\n\nexport function generate(node) {\n    // Using Delim instead of Hash is a hack to avoid for a whitespace between ident and id-selector\n    // in safe mode (e.g. \"a#id\"), because IE11 doesn't allow a sequence <ident-token> <hash-token>\n    // without a whitespace in values (e.g. \"1px solid#000\")\n    this.token(Delim, '#' + node.name);\n}\n", "import {\n    Ident,\n    Number,\n    Dimension,\n    LeftParenthesis,\n    RightParenthesis,\n    Colon,\n    Delim\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaFeature';\nexport const structure = {\n    name: String,\n    value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let value = null;\n\n    this.eat(LeftParenthesis);\n    this.skipSC();\n\n    name = this.consume(Ident);\n    this.skipSC();\n\n    if (this.tokenType !== RightParenthesis) {\n        this.eat(Colon);\n        this.skipSC();\n\n        switch (this.tokenType) {\n            case Number:\n                if (this.lookupNonWSType(1) === Delim) {\n                    value = this.Ratio();\n                } else {\n                    value = this.Number();\n                }\n\n                break;\n\n            case Dimension:\n                value = this.Dimension();\n                break;\n\n            case Ident:\n                value = this.Identifier();\n                break;\n\n            default:\n                this.error('Number, dimension, ratio or identifier is expected');\n        }\n\n        this.skipSC();\n    }\n\n    this.eat(RightParenthesis);\n\n    return {\n        type: 'MediaFeature',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.token(Ident, node.name);\n\n    if (node.value !== null) {\n        this.token(Colon, ':');\n        this.node(node.value);\n    }\n\n    this.token(RightParenthesis, ')');\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaQuery';\nexport const structure = {\n    children: [[\n        'Identifier',\n        'MediaFeature',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n    let child = null;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.MediaFeature();\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n    }\n\n    return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n\n", "import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'MediaQueryList';\nexport const structure = {\n    children: [[\n        'MediaQuery'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    while (!this.eof) {\n        children.push(this.MediaQuery());\n\n        if (this.tokenType !== Comma) {\n            break;\n        }\n\n        this.next();\n    }\n\n    return {\n        type: 'MediaQueryList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n", "import { Delim } from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nexport const name = 'NestingSelector';\nexport const structure = {\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eatDelim(AMPERSAND);\n\n    return {\n        type: 'NestingSelector',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(Delim, '&');\n}\n", "import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Nth';\nexport const structure = {\n    nth: ['AnPlusB', 'Identifier'],\n    selector: ['SelectorList', null]\n};\n\nexport function parse() {\n    this.skipSC();\n\n    const start = this.tokenStart;\n    let end = start;\n    let selector = null;\n    let nth;\n\n    if (this.lookupValue(0, 'odd') || this.lookupValue(0, 'even')) {\n        nth = this.Identifier();\n    } else {\n        nth = this.AnPlusB();\n    }\n\n    end = this.tokenStart;\n    this.skipSC();\n\n    if (this.lookupValue(0, 'of')) {\n        this.next();\n\n        selector = this.SelectorList();\n        end = this.tokenStart;\n    }\n\n    return {\n        type: 'Nth',\n        loc: this.getLocation(start, end),\n        nth,\n        selector\n    };\n}\n\nexport function generate(node) {\n    this.node(node.nth);\n    if (node.selector !== null) {\n        this.token(Ident, 'of');\n        this.node(node.selector);\n    }\n}\n", "import { Number as NumberToken } from '../../tokenizer/index.js';\n\nexport const name = 'Number';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Number',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consume(NumberToken)\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.value);\n}\n", "// '/' | '*' | ',' | ':' | '+' | '-'\nexport const name = 'Operator';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.next();\n\n    return {\n        type: 'Operator',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import {\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Parentheses';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftParenthesis);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Parentheses',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n", "import { Percentage } from '../../tokenizer/index.js';\n\nexport const name = 'Percentage';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Percentage',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consumeNumber(Percentage)\n    };\n}\n\nexport function generate(node) {\n    this.token(Percentage, node.value + '%');\n}\n", "import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'PseudoClassSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// : [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoClassSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n", "import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'PseudoElementSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// :: [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n", "import { isDigit, Delim, Number as NumberToken } from '../../tokenizer/index.js';\n\nconst SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// Terms of <ratio> should be a positive numbers (not zero or negative)\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\n// and this is using by various sites. Therefore we relax checking on parse\n// to test a term is unsigned number without an exponent part.\n// Additional checking may be applied on lexer validation.\nfunction consumeNumber() {\n    this.skipSC();\n\n    const value = this.consume(NumberToken);\n\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if (!isDigit(code) && code !== FULLSTOP) {\n            this.error('Unsigned number is expected', this.tokenStart - value.length + i);\n        }\n    }\n\n    if (Number(value) === 0) {\n        this.error('Zero number is not allowed', this.tokenStart - value.length);\n    }\n\n    return value;\n}\n\nexport const name = 'Ratio';\nexport const structure = {\n    left: String,\n    right: String\n};\n\n// <positive-integer> S* '/' S* <positive-integer>\nexport function parse() {\n    const start = this.tokenStart;\n    const left = consumeNumber.call(this);\n    let right;\n\n    this.skipSC();\n    this.eatDelim(SOLIDUS);\n    right = consumeNumber.call(this);\n\n    return {\n        type: 'Ratio',\n        loc: this.getLocation(start, this.tokenStart),\n        left,\n        right\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.left);\n    this.token(Delim, '/');\n    this.token(NumberToken, node.right);\n}\n", "import { WhiteSpace } from '../../tokenizer/index.js';\n\nfunction getOffsetExcludeWS() {\n    if (this.tokenIndex > 0) {\n        if (this.lookupType(-1) === WhiteSpace) {\n            return this.tokenIndex > 1\n                ? this.getTokenStart(this.tokenIndex - 1)\n                : this.firstCharOffset;\n        }\n    }\n\n    return this.tokenStart;\n}\n\nexport const name = 'Raw';\nexport const structure = {\n    value: String\n};\n\nexport function parse(startToken, consumeUntil, excludeWhiteSpace) {\n    const startOffset = this.getTokenStart(startToken);\n    let endOffset;\n\n    this.skipUntilBalanced(startToken, consumeUntil || this.consumeUntilBalanceEnd);\n\n    if (excludeWhiteSpace && this.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n    } else {\n        endOffset = this.tokenStart;\n    }\n\n    return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.substring(startOffset, endOffset)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import { LeftCurlyBracket } from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    const prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== LeftCurlyBracket) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nexport const name = 'Rule';\nexport const walkContext = 'rule';\nexport const structure = {\n    prelude: ['SelectorList', 'Raw'],\n    block: ['Block']\n};\n\nexport function parse() {\n    const startToken = this.tokenIndex;\n    const startOffset = this.tokenStart;\n    let prelude;\n    let block;\n\n    if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n    } else {\n        prelude = consumeRaw.call(this, startToken);\n    }\n\n    block = this.Block(true);\n\n    return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.tokenStart),\n        prelude,\n        block\n    };\n}\nexport function generate(node) {\n    this.node(node.prelude);\n    this.node(node.block);\n}\n\n", "export const name = 'Selector';\nexport const structure = {\n    children: [[\n        'TypeSelector',\n        'IdSelector',\n        'ClassSelector',\n        'AttributeSelector',\n        'PseudoClassSelector',\n        'PseudoElementSelector',\n        'Combinator',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.readSequence(this.scope.Selector);\n\n    // nothing were consumed\n    if (this.getFirstListNode(children) === null) {\n        this.error('Selector is expected');\n    }\n\n    return {\n        type: 'Selector',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'SelectorList';\nexport const walkContext = 'selector';\nexport const structure = {\n    children: [[\n        'Selector',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    while (!this.eof) {\n        children.push(this.Selector());\n\n        if (this.tokenType === Comma) {\n            this.next();\n            continue;\n        }\n\n        break;\n    }\n\n    return {\n        type: 'SelectorList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n", "import { String as StringToken } from '../../tokenizer/index.js';\nimport { decode, encode } from '../../utils/string.js';\n\nexport const name = 'String';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'String',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: decode(this.consume(StringToken))\n    };\n}\n\nexport function generate(node) {\n    this.token(StringToken, encode(node.value));\n}\n", "import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;  // \"\nconst APOSTROPHE = 0x0027;      // '\n\nexport function decode(str) {\n    const len = str.length;\n    const firstChar = str.charCodeAt(0);\n    const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;\n    const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;\n    let decoded = '';\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last quote as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-a-string\n// § 2.1. Common Serializing Idioms\nexport function encode(str, apostrophe) {\n    const quote = apostrophe ? '\\'' : '\"';\n    const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        // If the character is '\"' (U+0022) or \"\\\" (U+005C), the escaped character.\n        if (code === quoteCode || code === REVERSE_SOLIDUS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && (isHexDigit(code) || isWhiteSpace(code))) {\n                encoded += ' ';\n            }\n\n            // Otherwise, the character itself.\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return quote + encoded + quote;\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    AtKeyword,\n    CDO,\n    CDC\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n}\n\nexport const name = 'StyleSheet';\nexport const walkContext = 'stylesheet';\nexport const structure = {\n    children: [[\n        'Comment',\n        'CDO',\n        'CDC',\n        'Atrule',\n        'Rule',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.createList();\n    let child;\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Comment:\n                // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {\n                    this.next();\n                    continue;\n                }\n\n                child = this.Comment();\n                break;\n\n            case CDO: // <!--\n                child = this.CDO();\n                break;\n\n            case CDC: // -->\n                child = this.CDC();\n                break;\n\n            // CSS Syntax Module Level 3\n            // §2.2 Error handling\n            // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n            case AtKeyword:\n                child = this.parseWithFallback(this.Atrule, consumeRaw);\n                break;\n\n            // Anything else starts a qualified rule ...\n            default:\n                child = this.parseWithFallback(this.Rule, consumeRaw);\n        }\n\n        children.push(child);\n    }\n\n    return {\n        type: 'StyleSheet',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { Ident } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;     // U+002A ASTERISK (*)\nconst VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n\nfunction eatIdentifierOrAsterisk() {\n    if (this.tokenType !== Ident &&\n        this.isDelim(ASTERISK) === false) {\n        this.error('Identifier or asterisk is expected');\n    }\n\n    this.next();\n}\n\nexport const name = 'TypeSelector';\nexport const structure = {\n    name: String\n};\n\n// ident\n// ident|ident\n// ident|*\n// *\n// *|ident\n// *|*\n// |ident\n// |*\nexport function parse() {\n    const start = this.tokenStart;\n\n    if (this.isDelim(VERTICALLINE)) {\n        this.next();\n        eatIdentifierOrAsterisk.call(this);\n    } else {\n        eatIdentifierOrAsterisk.call(this);\n\n        if (this.isDelim(VERTICALLINE)) {\n            this.next();\n            eatIdentifierOrAsterisk.call(this);\n        }\n    }\n\n    return {\n        type: 'TypeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n", "import {\n    isHexDigit,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n\nfunction eatHexSequence(offset, allowDash) {\n    let len = 0;\n\n    for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {\n        const code = this.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\n            eatHexSequence.call(this, offset + len + 1, false);\n            return -1;\n        }\n\n        if (!isHexDigit(code)) {\n            this.error(\n                allowDash && len !== 0\n                    ? 'Hyphen minus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\n                pos\n            );\n        }\n\n        if (++len > 6) {\n            this.error('Too many hex digits', pos);\n        };\n    }\n\n    this.next();\n    return len;\n}\n\nfunction eatQuestionMarkSequence(max) {\n    let count = 0;\n\n    while (this.isDelim(QUESTIONMARK)) {\n        if (++count > max) {\n            this.error('Too many question marks');\n        }\n\n        this.next();\n    }\n}\n\nfunction startsWith(code) {\n    if (this.charCodeAt(this.tokenStart) !== code) {\n        this.error((code === PLUSSIGN ? 'Plus sign' : 'Hyphen minus') + ' is expected');\n    }\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction scanUnicodeRange() {\n    let hexLength = 0;\n\n    switch (this.tokenType) {\n        case Number:\n            // u <number-token> '?'*\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (this.isDelim(QUESTIONMARK)) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n                break;\n            }\n\n            if (this.tokenType === Dimension ||\n                this.tokenType === Number) {\n                startsWith.call(this, HYPHENMINUS);\n                eatHexSequence.call(this, 1, false);\n                break;\n            }\n\n            break;\n\n        case Dimension:\n            // u <dimension-token> '?'*\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (hexLength > 0) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n            }\n\n            break;\n\n        default:\n            // u '+' <ident-token> '?'*\n            // u '+' '?'+\n            this.eatDelim(PLUSSIGN);\n\n            if (this.tokenType === Ident) {\n                hexLength = eatHexSequence.call(this, 0, true);\n                if (hexLength > 0) {\n                    eatQuestionMarkSequence.call(this, 6 - hexLength);\n                }\n                break;\n            }\n\n            if (this.isDelim(QUESTIONMARK)) {\n                this.next();\n                eatQuestionMarkSequence.call(this, 5);\n                break;\n            }\n\n            this.error('Hex digit or question mark is expected');\n    }\n}\n\nexport const name = 'UnicodeRange';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // U or u\n    this.eatIdent('u');\n    scanUnicodeRange.call(this);\n\n    return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import * as url from '../../utils/url.js';\nimport * as string from '../../utils/string.js';\nimport {\n    Function as FunctionToken,\n    String as StringToken,\n    Url,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Url';\nexport const structure = {\n    value: String\n};\n\n// <url-token> | <function-token> <string> )\nexport function parse() {\n    const start = this.tokenStart;\n    let value;\n\n    switch (this.tokenType) {\n        case Url:\n            value = url.decode(this.consume(Url));\n            break;\n\n        case FunctionToken:\n            if (!this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')) {\n                this.error('Function name must be `url`');\n            }\n\n            this.eat(FunctionToken);\n            this.skipSC();\n            value = string.decode(this.consume(StringToken));\n            this.skipSC();\n            if (!this.eof) {\n                this.eat(RightParenthesis);\n            }\n            break;\n\n        default:\n            this.error('Url or Function is expected');\n    }\n\n    return {\n        type: 'Url',\n        loc: this.getLocation(start, this.tokenStart),\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Url, url.encode(node.value));\n}\n", "import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst SPACE = 0x0020;            // U+0020 SPACE\nconst REVERSE_SOLIDUS = 0x005c;  // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;   // \"\nconst APOSTROPHE = 0x0027;       // '\nconst LEFTPARENTHESIS = 0x0028;  // U+0028 LEFT PARENTHESIS (()\nconst RIGHTPARENTHESIS = 0x0029; // U+0029 RIGHT PARENTHESIS ())\n\nexport function decode(str) {\n    const len = str.length;\n    let start = 4; // length of \"url(\"\n    let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;\n    let decoded = '';\n\n    while (start < end && isWhiteSpace(str.charCodeAt(start))) {\n        start++;\n    }\n\n    while (start < end && isWhiteSpace(str.charCodeAt(end))) {\n        end--;\n    }\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last left parenthesis as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\nexport function encode(str) {\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        if (code === SPACE ||\n            code === REVERSE_SOLIDUS ||\n            code === QUOTATION_MARK ||\n            code === APOSTROPHE ||\n            code === LEFTPARENTHESIS ||\n            code === RIGHTPARENTHESIS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && isHexDigit(code)) {\n                encoded += ' ';\n            }\n\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return 'url(' + encoded + ')';\n}\n", "export const name = 'Value';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.readSequence(this.scope.Value);\n\n    return {\n        type: 'Value',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { WhiteSpace } from '../../tokenizer/index.js';\n\nconst SPACE = Object.freeze({\n    type: 'WhiteSpace',\n    loc: null,\n    value: ' '\n});\n\nexport const name = 'WhiteSpace';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    this.eat(WhiteSpace);\n    return SPACE;\n\n    // return {\n    //     type: 'WhiteSpace',\n    //     loc: this.getLocation(this.tokenStart, this.tokenEnd),\n    //     value: this.consume(WHITESPACE)\n    // };\n}\n\nexport function generate(node) {\n    this.token(WhiteSpace, node.value);\n}\n", "import definitions from '../../data.js';\nimport * as node from '../node/index.js';\n\nexport default {\n    generic: true,\n    ...definitions,\n    node\n};\n", "export { default as AtrulePrelude } from './atrulePrelude.js';\nexport { default as Selector } from './selector.js';\nexport { default as Value } from './value.js';\n", "import {\n    Ident,\n    String as StringToken,\n    Number as NumberToken,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Dimension,\n    Percentage,\n    LeftParenthesis,\n    LeftSquareBracket,\n    Comma,\n    Delim\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nconst ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nconst U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nexport default function defaultRecognizer(context) {\n    switch (this.tokenType) {\n        case Hash:\n            return this.Hash();\n\n        case Comma:\n            return this.Operator();\n\n        case LeftParenthesis:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LeftSquareBracket:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case StringToken:\n            return this.String();\n\n        case Dimension:\n            return this.Dimension();\n\n        case Percentage:\n            return this.Percentage();\n\n        case NumberToken:\n            return this.Number();\n\n        case FunctionToken:\n            return this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case Url:\n            return this.Url();\n\n        case Ident:\n            // check for unicode range, it should start with u+ or U+\n            if (this.cmpChar(this.tokenStart, U) &&\n                this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.tokenStart + 1);\n            }\n\n            break;\n        }\n    }\n};\n", "import getNode from './default.js';\n\nexport default {\n    getNode\n};\n", "import {\n    Delim,\n    Ident,\n    Dimension,\n    Percentage,\n    Number as NumberToken,\n    Hash,\n    Colon,\n    LeftSquareBracket\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction onWhiteSpace(next, children) {\n    if (children.last !== null && children.last.type !== 'Combinator' &&\n        next !== null && next.type !== 'Combinator') {\n        children.push({  // FIXME: this.Combinator() should be used instead\n            type: 'Combinator',\n            loc: null,\n            name: ' '\n        });\n    }\n}\n\nfunction getNode() {\n    switch (this.tokenType) {\n        case LeftSquareBracket:\n            return this.AttributeSelector();\n\n        case Hash:\n            return this.IdSelector();\n\n        case Colon:\n            if (this.lookupType(1) === Colon) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case Ident:\n            return this.TypeSelector();\n\n        case NumberToken:\n        case Percentage:\n            return this.Percentage();\n\n        case Dimension:\n            // throws when .123ident\n            if (this.charCodeAt(this.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.tokenStart + 1);\n            }\n            break;\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n\n                case AMPERSAND:\n                    return this.NestingSelector();\n            }\n\n            break;\n        }\n    }\n};\n\nexport default {\n    onWhiteSpace,\n    getNode\n};\n", "// legacy IE function\n// expression( <any-value> )\nexport default function() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n", "import { Comma, WhiteSpace } from '../../tokenizer/index.js';\n\n// var( <ident> , <value>? )\nexport default function() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.skipSC();\n\n    if (this.tokenType === Comma) {\n        children.push(this.Operator());\n\n        const startIndex = this.tokenIndex;\n        const value = this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.tokenIndex, this.consumeUntilExclamationMarkOrSemicolon, false);\n\n        if (value.type === 'Value' && value.children.isEmpty) {\n            for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {\n                if (this.lookupType(offset) === WhiteSpace) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        children.push(value);\n    }\n\n    return children;\n};\n", "import getNode from './default.js';\nimport expressionFn from '../function/expression.js';\nimport varFn from '../function/var.js';\n\nfunction isPlusMinusOperator(node) {\n    return (\n        node !== null &&\n        node.type === 'Operator' &&\n        (node.value[node.value.length - 1] === '-' || node.value[node.value.length - 1] === '+')\n    );\n}\n\nexport default {\n    getNode,\n    onWhiteSpace(next, children) {\n        if (isPlusMinusOperator(next)) {\n            next.value = ' ' + next.value;\n        }\n        if (isPlusMinusOperator(children.last)) {\n            children.last.value += ' ';\n        }\n    },\n    'expression': expressionFn,\n    'var': varFn\n};\n", "export default {\n    parse: {\n        prelude: null,\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "import {\n    String as StringToken,\n    Ident,\n    Url,\n    Function as FunctionToken,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport default {\n    parse: {\n        prelude() {\n            const children = this.createList();\n\n            this.skipSC();\n\n            switch (this.tokenType) {\n                case StringToken:\n                    children.push(this.String());\n                    break;\n\n                case Url:\n                case FunctionToken:\n                    children.push(this.Url());\n                    break;\n\n                default:\n                    this.error('String or url() is expected');\n            }\n\n            if (this.lookupNonWSType(0) === Ident ||\n                this.lookupNonWSType(0) === LeftParenthesis) {\n                children.push(this.MediaQueryList());\n            }\n\n            return children;\n        },\n        block: null\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.MediaQueryList()\n            );\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function,\n    Colon,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n\nfunction parentheses() {\n    this.skipSC();\n\n    if (this.tokenType === Ident &&\n        this.lookupNonWSType(1) === Colon) {\n        return this.createSingleNodeList(\n            this.Declaration()\n        );\n    }\n\n    return readSequence.call(this);\n}\n\nfunction readSequence() {\n    const children = this.createList();\n    let child;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Function:\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n                break;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    return children;\n}\n\nexport default {\n    parse: {\n        prelude() {\n            const children = readSequence.call(this);\n\n            if (this.getFirstListNode(children) === null) {\n                this.error('Condition is expected');\n            }\n\n            return children;\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n", "import fontFace from './font-face.js';\nimport importAtrule from './import.js';\nimport media from './media.js';\nimport nest from './nest.js';\nimport page from './page.js';\nimport supports from './supports.js';\n\nexport default {\n    'font-face': fontFace,\n    'import': importAtrule,\n    media,\n    nest,\n    page,\n    supports\n};\n", "const selectorList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n\nconst selector = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Selector()\n        );\n    }\n};\n\nconst identList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n\nconst nth = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Nth()\n        );\n    }\n};\n\nexport default {\n    'dir': identList,\n    'has': selectorList,\n    'lang': identList,\n    'matches': selectorList,\n    'is': selectorList,\n    '-moz-any': selectorList,\n    '-webkit-any': selectorList,\n    'where': selectorList,\n    'not': selectorList,\n    'nth-child': nth,\n    'nth-last-child': nth,\n    'nth-last-of-type': nth,\n    'nth-of-type': nth,\n    'slotted': selector,\n    'host': selector,\n    'host-context': selector\n};\n", "export { parse as AnPlusB } from './AnPlusB.js';\nexport { parse as Atrule } from './Atrule.js';\nexport { parse as AtrulePrelude } from './AtrulePrelude.js';\nexport { parse as AttributeSelector } from './AttributeSelector.js';\nexport { parse as Block } from './Block.js';\nexport { parse as Brackets } from './Brackets.js';\nexport { parse as CDC } from './CDC.js';\nexport { parse as CDO } from './CDO.js';\nexport { parse as ClassSelector } from './ClassSelector.js';\nexport { parse as Combinator } from './Combinator.js';\nexport { parse as Comment } from './Comment.js';\nexport { parse as Declaration } from './Declaration.js';\nexport { parse as DeclarationList } from './DeclarationList.js';\nexport { parse as Dimension } from './Dimension.js';\nexport { parse as Function } from './Function.js';\nexport { parse as Hash } from './Hash.js';\nexport { parse as Identifier } from './Identifier.js';\nexport { parse as IdSelector } from './IdSelector.js';\nexport { parse as MediaFeature } from './MediaFeature.js';\nexport { parse as MediaQuery } from './MediaQuery.js';\nexport { parse as MediaQueryList } from './MediaQueryList.js';\nexport { parse as NestingSelector } from './NestingSelector.js';\nexport { parse as Nth } from './Nth.js';\nexport { parse as Number } from './Number.js';\nexport { parse as Operator } from './Operator.js';\nexport { parse as Parentheses } from './Parentheses.js';\nexport { parse as Percentage } from './Percentage.js';\nexport { parse as PseudoClassSelector } from './PseudoClassSelector.js';\nexport { parse as PseudoElementSelector } from './PseudoElementSelector.js';\nexport { parse as Ratio } from './Ratio.js';\nexport { parse as Raw } from './Raw.js';\nexport { parse as Rule } from './Rule.js';\nexport { parse as Selector } from './Selector.js';\nexport { parse as SelectorList } from './SelectorList.js';\nexport { parse as String } from './String.js';\nexport { parse as StyleSheet } from './StyleSheet.js';\nexport { parse as TypeSelector } from './TypeSelector.js';\nexport { parse as UnicodeRange } from './UnicodeRange.js';\nexport { parse as Url } from './Url.js';\nexport { parse as Value } from './Value.js';\nexport { parse as WhiteSpace } from './WhiteSpace.js';\n", "import * as scope from '../scope/index.js';\nimport atrule from '../atrule/index.js';\nimport pseudo from '../pseudo/index.js';\nimport * as node from '../node/index-parse.js';\n\nexport default {\n    parseContext: {\n        default: 'StyleSheet',\n        stylesheet: 'StyleSheet',\n        atrule: 'Atrule',\n        atrulePrelude(options) {\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\n        },\n        mediaQueryList: 'MediaQueryList',\n        mediaQuery: 'MediaQuery',\n        rule: 'Rule',\n        selectorList: 'SelectorList',\n        selector: 'Selector',\n        block() {\n            return this.Block(true);\n        },\n        declarationList: 'DeclarationList',\n        declaration: 'Declaration',\n        value: 'Value'\n    },\n    scope,\n    atrule,\n    pseudo,\n    node\n};\n", "import * as node from '../node/index.js';\n\nexport default {\n    node\n};\n", "import createSyntax from './create.js';\nimport lexerConfig from './config/lexer.js';\nimport parserConfig from './config/parser.js';\nimport walkerConfig from './config/walker.js';\n\nexport default createSyntax({\n    ...lexerConfig,\n    ...parserConfig,\n    ...walkerConfig\n});\n", "export const version = \"2.3.1\";", "import { List } from './List.js';\n\nexport function clone(node) {\n    const result = {};\n\n    for (const key in node) {\n        let value = node[key];\n\n        if (value) {\n            if (Array.isArray(value) || value instanceof List) {\n                value = value.map(clone);\n            } else if (value.constructor === Object) {\n                value = clone(value);\n            }\n        }\n\n        result[key] = value;\n    }\n\n    return result;\n}\n", "import {\n    isName,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nexport function decode(str) {\n    const end = str.length - 1;\n    let decoded = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-an-identifier\n// § 2.1. Common Serializing Idioms\nexport function encode(str) {\n    let encoded = '';\n\n    // If the character is the first character and is a \"-\" (U+002D),\n    // and there is no second character, then the escaped character.\n    // Note: That's means a single dash string \"-\" return as escaped dash,\n    // so move the condition out of the main loop\n    if (str.length === 1 && str.charCodeAt(0) === 0x002D) {\n        return '\\\\-';\n    }\n\n    // To serialize an identifier means to create a string represented\n    // by the concatenation of, for each character of the identifier:\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        if (\n            // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F ...\n            // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n            code <= 0x001F || code === 0x007F ||\n            // [or] ... is in the range [0-9] (U+0030 to U+0039),\n            (code >= 0x0030 && code <= 0x0039 && (\n                // If the character is the first character ...\n                i === 0 ||\n                // If the character is the second character ... and the first character is a \"-\" (U+002D)\n                i === 1 && str.charCodeAt(0) === 0x002D\n            ))\n        ) {\n            // ... then the character escaped as code point.\n            encoded += '\\\\' + code.toString(16) + ' ';\n            continue;\n        }\n\n        // If the character is not handled by one of the above rules and is greater\n        // than or equal to U+0080, is \"-\" (U+002D) or \"_\" (U+005F), or is in one\n        // of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to U+005A),\n        // or \\[a-z] (U+0061 to U+007A), then the character itself.\n        if (isName(code)) {\n            encoded += str.charAt(i);\n        } else {\n            // Otherwise, the escaped character.\n            encoded += '\\\\' + str.charAt(i);\n        }\n    }\n\n    return encoded;\n}\n", "import syntax from './syntax/index.js';\n\nexport * from './version.js';\nexport { default as createSyntax } from './syntax/create.js';\nexport { List } from './utils/List.js';\nexport { Lexer } from './lexer/Lexer.js';\nexport { tokenTypes, tokenNames, TokenStream } from './tokenizer/index.js';\nexport * as definitionSyntax from './definition-syntax/index.js';\nexport { clone } from './utils/clone.js';\nexport * from './utils/names.js';\nexport * as ident from './utils/ident.js';\nexport * as string from './utils/string.js';\nexport * as url from './utils/url.js';\nexport const {\n    tokenize,\n    parse,\n    generate,\n    lexer,\n    createLexer,\n\n    walk,\n    find,\n    findLast,\n    findAll,\n\n    toPlainObject,\n    fromPlainObject,\n\n    fork\n} = syntax;\n"],
  "mappings": "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",
  "names": ["number", "zero", "normalize", "length", "SourceMapGenerator", "name", "sourceFile", "name", "line", "SyntaxError", "name", "code", "tokenType", "number", "Number", "SyntaxError", "parse", "Number", "String", "node", "name", "walk", "hasOwnProperty", "name", "structure", "walk", "noop", "HYPHENMINUS", "keyword", "name", "property", "descriptor", "PLUSSIGN", "HYPHENMINUS", "code", "Number", "PLUSSIGN", "HYPHENMINUS", "isDelim", "code", "length", "Number", "length", "name", "Number", "String", "angle", "decibel", "frequency", "flex", "length", "resolution", "semitones", "time", "SyntaxError", "SyntaxError", "N", "code", "SyntaxError", "TAB", "N", "F", "R", "SPACE", "EXCLAMATIONMARK", "NUMBERSIGN", "PLUSSIGN", "QUESTIONMARK", "LEFTCURLYBRACKET", "code", "name", "terms", "combinator", "noop", "ensureFunction", "walk", "node", "LEFTPARENTHESIS", "RIGHTPARENTHESIS", "name", "hasOwnProperty", "name", "lastTokenIndex", "property", "lexer", "name", "hasOwnProperty", "name", "structure", "name", "lexer", "structure", "property", "name", "parse", "walk", "generate", "fromPlainObject", "toPlainObject", "config", "generate", "parse", "PLUSSIGN", "HYPHENMINUS", "N", "DISALLOW_SIGN", "ALLOW_SIGN", "checkInteger", "code", "consumeB", "Number", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "VERTICALLINE", "code", "name", "structure", "parse", "String", "generate", "generate", "name", "parse", "structure", "walkContext", "AMPERSAND", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "PLUSSIGN", "GREATERTHANSIGN", "TILDE", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "SOLIDUS", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "EXCLAMATIONMARK", "NUMBERSIGN", "DOLLARSIGN", "AMPERSAND", "ASTERISK", "PLUSSIGN", "SOLIDUS", "name", "walkContext", "structure", "parse", "property", "readProperty", "consumeRaw", "generate", "generate", "name", "parse", "structure", "AMPERSAND", "consumeRaw", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "Number", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "AMPERSAND", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "selector", "nth", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "Number", "generate", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "name", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "SOLIDUS", "FULLSTOP", "consumeNumber", "Number", "code", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "APOSTROPHE", "code", "name", "structure", "parse", "String", "generate", "generate", "name", "parse", "structure", "walkContext", "EXCLAMATIONMARK", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "VERTICALLINE", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "PLUSSIGN", "HYPHENMINUS", "QUESTIONMARK", "code", "startsWith", "Number", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "decode", "encode", "SPACE", "REVERSE_SOLIDUS", "QUOTATION_MARK", "APOSTROPHE", "LEFTPARENTHESIS", "RIGHTPARENTHESIS", "decode", "code", "encode", "name", "structure", "parse", "decode", "String", "generate", "encode", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "SPACE", "name", "structure", "parse", "generate", "NUMBERSIGN", "ASTERISK", "PLUSSIGN", "HYPHENMINUS", "SOLIDUS", "U", "String", "Number", "code", "NUMBERSIGN", "AMPERSAND", "ASTERISK", "PLUSSIGN", "SOLIDUS", "FULLSTOP", "GREATERTHANSIGN", "VERTICALLINE", "TILDE", "Number", "code", "import_default", "String", "consumeRaw", "readSequence", "import_default", "parse", "decode", "encode", "REVERSE_SOLIDUS", "decode", "code", "encode", "tokenize", "parse", "generate", "walk"]
}
